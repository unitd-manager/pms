{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/ProjectTimesheetDetails.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","ProjectTimesheetDetails","useState","task_title","project_milestone_id","project_task_id","project_id","projectTimesheet","setProjectTimesheet","id","useParams","navigate","useNavigate","handleInputs","e","target","name","value","milestones","setMilestones","taskdetail","setTaskDetail","projectTime","setProjectTime","getMilestoneTime","api","post","then","res","milestoneTimeSheet","data","catch","getTaskTime","projectIds","useEffect","get","selectedTask","md","xs","onChange","map","milestone_title","color","onClick","insertedDataId","insertId","console","log","setTimeout"],"mappings":"kHAAA,oBAqDeA,IAlDC,SAACC,EAAIC,GACjB,MAAY,YAATA,EACOC,IAAMC,QAAQH,EAAK,CACrBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,UAATX,EACMC,IAAMW,MAAMb,EAAK,CACnBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,SAATX,EACKC,IAAMY,KAAKd,EAAK,CAClBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAEK,YAATX,EACMC,IAAMa,QAAQf,EAAK,CACrBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAGRV,YAAMF,K,iCCjDzB,mCAwBegB,IApBK,SAACC,GACnB,IAAMC,EAAWC,cACXC,EAAWF,EAASG,SAASC,MAAM,KAAK,GACxCC,EAAYL,EAASG,SAASC,MAAM,KAAK,GAE/C,OACE,qCAEE,6BAAKL,EAAKO,UACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,GAAG,IAAIC,IAAKC,IAAMC,UAAU,uBAA5C,kBAGCR,EAAW,cAAC,IAAD,CAAgBS,QAAM,EAAtB,SAAwBT,IAA6B,GAChEG,EAAY,cAAC,IAAD,CAAgBM,QAAM,EAAtB,SAAwBN,IAA8B,W,kECd5D,SAASO,EAAT,GAA0D,IAAD,IAAzBC,eAAyB,MAAf,KAAe,EAATC,EAAS,EAATA,MAK7D,OACE,mCACE,cAAC,IAAD,CAAWN,IAAI,KAAKE,UAAU,+BAA9B,SACE,eAAC,KAAD,WACE,cAAC,IAAD,UAAMI,IACLD,GACC,eAAC,IAAD,WACE,cAAC,KAAD,UACE,wDAA2BA,GAAWA,EAAQE,uBAEhD,cAAC,KAAD,CAAKL,UAAU,SAAf,SACE,oDAAuBG,GAAWA,EAAQG,6BCI3CC,UApBO,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAUJ,EAA+C,EAA/CA,MAAOK,EAAwC,EAAxCA,SAASC,EAA+B,EAA/BA,yBACjD,OACE,eAAC,IAAD,CAAMV,UAAU,cAAhB,UACE,cAACE,EAAD,CAAsBC,QAASO,EAA0BN,MAAOA,IAEhE,eAAC,IAAD,CAAUJ,UAAU,MAApB,UACE,cAAC,IAAD,CAAcA,UAAU,kBAAxB,SAA2CS,GAAY,KACvD,8BAAMD,Y,4IC4LCG,UA9LiB,WAE9B,MAAgDC,mBAAS,CACvDC,WAAY,GACZC,qBAAqB,GACrBC,gBAAgB,GAChBC,WAAW,KAJb,mBAAOC,EAAP,KAAyBC,EAAzB,KAOMC,EAAOC,cAAPD,GACAE,EAAWC,cAEXC,EAAe,SAACC,GACpBN,EAAoB,2BAAKD,GAAN,kBAAyBO,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAEvE,EAAoCf,mBAAS,IAA7C,mBAAOgB,EAAP,KAAmBC,EAAnB,KACA,EAAoCjB,mBAAS,IAA7C,mBAAOkB,EAAP,KAAmBC,EAAnB,KACA,EAAsCnB,mBAAS,IAA/C,mBAAOoB,EAAP,KAAoBC,EAApB,KA+BIC,EAAmB,WACvBC,IACGC,KAAK,sCAAuC,CAAEpB,WAAYC,EAAiBD,aAC3EqB,MAAK,SAACC,GAEL,IAAMC,EAAqBD,EAAIE,KAAKA,KACpCX,EAAcU,MAEfE,OAAM,WACLtE,YAAQ,sBAAuB,YAM7BuE,EAAc,SAACC,GACnBR,IACGC,KAAK,gCAAiC,CAAEtB,qBAAsB6B,IAC9DN,MAAK,SAACC,GACLP,EAAcO,EAAIE,KAAKA,SAExBC,OAAM,WACLtE,YAAQ,iBAAkB,YAwBhC,OArBAyE,qBAAU,WAnCRT,IACGU,IAAI,gCACJR,MAAK,SAACC,GACLL,EAAeK,EAAIE,KAAKA,SAEzBC,OAAM,WACLtE,YAAQ,oBAAqB,aA+BhC,CAACgD,IAEJyB,qBAAU,WACR,GAAI3B,EAAiBD,WAAY,CAELC,EAAiBD,WAC3CkB,OAED,CAACjB,EAAiBD,aAErB4B,qBAAU,WACR,GAAI3B,EAAiBH,qBAAsB,CAEzC,IAAMgC,EAAe7B,EAAiBH,qBACtC4B,EAAYI,MAEb,CAAC7B,EAAiBH,uBAInB,gCACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,KAAD,UACE,cAAC,IAAD,CAAKiC,GAAG,IAAIC,GAAG,KAAf,SAEE,cAAC,UAAD,CAAe5C,MAAM,oBAArB,SACA,eAAC,IAAD,WACI,cAAC,IAAD,UACE,eAAC,KAAD,WACA,cAAC,IAAD,CAAK2C,GAAG,KAAR,SACI,eAAC,IAAD,WACE,cAAC,IAAD,4BACA,eAAC,IAAD,CAAO1E,KAAK,SAASqD,KAAK,aAAeuB,SAAU,SAACzB,GAClDD,EAAaC,GACOA,EAAEC,OAAOE,MACnCO,KAHI,UAKE,oDACCF,GACCA,EAAYkB,KAAI,SAAC1B,GAAD,OACd,wBAA2BG,MAAOH,EAAER,WAApC,SACGQ,EAAEpB,OADQoB,EAAER,uBAO3B,cAAC,IAAD,CAAK+B,GAAG,IAAR,SACI,eAAC,IAAD,WACE,cAAC,IAAD,8BACA,eAAC,IAAD,CAAO1E,KAAK,SAASqD,KAAK,uBAAyBuB,SAAU,SAACzB,GAC5DD,EAAaC,GACnB,IAAMsB,EAAetB,EAAEC,OAAOE,MAC9Be,EAAYI,IAHR,UAKE,oDACClB,GACCA,EAAWsB,KAAI,SAAC1B,GAAD,OACb,wBAA2BG,MAAOH,EAAEV,qBAApC,SACGU,EAAE2B,iBADQ3B,EAAER,uBAOzB,cAAC,IAAD,CAAK+B,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,eAAC,IAAD,CAAO1E,KAAK,SAASqD,KAAK,kBAAkBuB,SAAU1B,EAAtD,UACE,iDACCO,GACCA,EAAWoB,KAAI,SAAC1B,GAAD,OACb,wBAEEG,MAAOH,EAAET,gBAFX,SAIGS,EAAEX,YAHEW,EAAEV,sCAWvB,cAAC,IAAD,UACE,cAAC,KAAD,UACN,sBAAKd,UAAU,4CAAf,UACE,cAAC,IAAD,CAAQoD,MAAM,UACZC,QAAS,WA/InBlB,IAAIC,KAAK,oCAAqCnB,GAC3CoB,MAAK,SAACC,GACL,IAAMgB,EAAiBhB,EAAIE,KAAKA,KAAKe,SACrCC,QAAQC,IAAIH,GACZnF,YAAQ,mCAAoC,WAC5CuF,YAAW,WACTrC,EAAS,yBAAD,OAA0BiC,MACjC,QAEJb,OAAM,WACLtE,YAAQ,4BAA6B,aAwI/BE,KAAK,SACL2B,UAAU,uBALZ,6BAQA,cAAC,IAAD,CACEqD,QAAS,WACPhC,EAAS,sBAEXhD,KAAK,SACL2B,UAAU,2BALZ","file":"static/js/163.a0215c62.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\nimport api from '../../constants/api';\nimport message from '../../components/Message';\n\nconst ProjectTimesheetDetails = () => {\n  //All state variables\n  const [projectTimesheet, setProjectTimesheet] = useState({\n    task_title: '',\n    project_milestone_id:\"\",\n    project_task_id:\"\",\n    project_id:'',\n  });\n//Navigation and Parameters\nconst { id } = useParams();\n  const navigate = useNavigate();\n//Timesheet data in projectTimesheet\n  const handleInputs = (e) => {\n    setProjectTimesheet({ ...projectTimesheet, [e.target.name]: e.target.value });\n  };\n  const [milestones, setMilestones] = useState([]);\n  const [taskdetail, setTaskDetail] = useState([]);\n  const [projectTime, setProjectTime] = useState([]);\n\n//Insert Timesheet\n  const insertTimesheet = () => {\n    api.post('/projecttimesheet/insertTimeSheet', projectTimesheet)\n      .then((res) => {\n        const insertedDataId = res.data.data.insertId;\n        console.log(insertedDataId);\n        message('timesheet inserted successfully.', 'success');\n        setTimeout(() => {\n          navigate(`/ProjectTimesheetEdit/${insertedDataId}`);\n        }, 300);\n      })\n      .catch(() => {\n        message('Network connection error.', 'error');\n      });\n      \n  };\n\n  //Api call for getting project name dropdown\n  const getProjectTime = () => {\n    api\n      .get('/projecttask/getProjectTitle')\n      .then((res) => {\n        setProjectTime(res.data.data);\n      })\n      .catch(() => {\n        message('Company not found', 'info');\n      });\n  };\n  // Api call for getting milestone dropdown based on project ID\nconst getMilestoneTime = () => {\n  api\n    .post('/projecttimesheet/getMilestoneTitle', { project_id: projectTimesheet.project_id })\n    .then((res) => {\n      // Assuming the response data is an array of milestones with keys: milestone_id and milestone_title\n      const milestoneTimeSheet = res.data.data;\n      setMilestones(milestoneTimeSheet);\n    })\n    .catch(() => {\n      message('Milestone not found', 'info');\n    });\n};\n\n\n  // Api call for getting milestone dropdown based on project ID\n  const getTaskTime = (projectIds) => {\n    api\n      .post('/projecttimesheet/getTaskByID', { project_milestone_id: projectIds })\n      .then((res) => {\n        setTaskDetail(res.data.data);\n      })\n      .catch(() => {\n        message('Task not found', 'info');\n      });\n  };\n  useEffect(() => {\n    getProjectTime();\n  }, [id]); \n\n  useEffect(() => { \n    if (projectTimesheet.project_id) {\n      // Use taskdetails.project_id directly to get the selected project ID\n      const selectedTimesheet = projectTimesheet.project_id;\n      getMilestoneTime(selectedTimesheet);\n    }\n  }, [projectTimesheet.project_id]);\n\n  useEffect(() => {\n    if (projectTimesheet.project_milestone_id) {\n      // Use taskdetails.project_milestone_id directly to get the selected project ID\n      const selectedTask = projectTimesheet.project_milestone_id;\n      getTaskTime(selectedTask);\n    }\n  }, [projectTimesheet.project_milestone_id]);\n\n  \n  return (\n    <div>\n      <BreadCrumbs />\n      <ToastContainer />\n      <Row>\n        <Col md=\"6\" xs=\"12\">\n          {/* Key Details */}\n          <ComponentCard title=\"Timesheet Details\">\n          <Form>\n              <FormGroup>\n                <Row>\n                <Col md=\"12\">\n                    <FormGroup>\n                      <Label>Project Title</Label>\n                      <Input type=\"select\" name=\"project_id\"   onChange={(e) => {\n                        handleInputs(e)\n                  const selectedTimesheet = e.target.value;\n                  getMilestoneTime(selectedTimesheet);\n                }}>\n                        <option>Select Project</option>\n                        {projectTime &&\n                          projectTime.map((e) => (\n                            <option key={e.project_id} value={e.project_id}>\n                              {e.title}\n                            </option>\n                          ))}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                <Col md=\"4\">\n                    <FormGroup>\n                      <Label>Milestone Title</Label>\n                      <Input type=\"select\" name=\"project_milestone_id\"   onChange={(e) => {\n                        handleInputs(e)\n                  const selectedTask = e.target.value;\n                  getTaskTime(selectedTask);\n                }}>\n                        <option>Select Project</option>\n                        {milestones &&\n                          milestones.map((e) => (\n                            <option key={e.project_id} value={e.project_milestone_id}>\n                              {e.milestone_title}\n                            </option>\n                          ))}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4\">\n                    <FormGroup>\n                      <Label>Task</Label>\n                      <Input type=\"select\" name=\"project_task_id\" onChange={handleInputs}>\n                        <option>Select Task</option>\n                        {taskdetail &&\n                          taskdetail.map((e) => (\n                            <option\n                              key={e.project_milestone_id}\n                              value={e.project_task_id}\n                            >\n                              {e.task_title}\n                            </option>\n                          ))}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n          <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n            <Button color=\"primary\"\n              onClick={() => {\n                insertTimesheet();\n              }}\n              type=\"button\"\n              className=\"btn mr-2 shadow-none\"\n            >Save & Continue\n            </Button>\n            <Button\n              onClick={() => {\n                navigate('/ProjectTimesheet');\n              }}\n              type=\"button\"\n              className=\"btn btn-dark shadow-none\" \n            >Go to List\n            </Button>\n            </div>\n                </Row>\n              </FormGroup>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default ProjectTimesheetDetails;\n"],"sourceRoot":""}