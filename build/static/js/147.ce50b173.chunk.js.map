{"version":3,"sources":["components/Message.js","../node_modules/webpack/buildin/amd-options.js","../node_modules/webpack/buildin/module.js","components/Tender/AddLineItemModal.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","module","exports","__webpack_amd_options__","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","AddLineItemModal","addLineItemModal","setAddLineItemModal","projectInfo","useState","random","int","addLineItem","setAddLineItem","totalAmount","setTotalAmount","getAllValues","result","$","each","allValues","find","fieldName","attr","val","push","console","log","forEach","obj","item","totalprice","api","post","description","quote_id","opportunity_id","qty","project_id","uom","remarks","parseFloat","unitprice","then","catch","addLineItemApi","size","isOpen","color","onClick","md","className","Date","getTime","toString","scope","map","defaultValue","name","onBlur","totalValue","e","calculateTotal","disabled","to","id","ind","current","filter","finalTotal","ClearValue"],"mappings":"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","file":"static/js/147.ce50b173.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React,{useState } from 'react';\nimport { Row,Col,FormGroup,Input,Button,Modal,ModalHeader,ModalBody, ModalFooter, } from 'reactstrap';\nimport {  Link } from 'react-router-dom';\nimport * as $ from \"jquery\";\nimport PropTypes from 'prop-types'\nimport random from 'random'\nimport api from '../../constants/api';\nimport message from '../Message';\n\nconst AddLineItemModal = ({addLineItemModal,setAddLineItemModal,projectInfo}) => {\n \n\n  AddLineItemModal.propTypes = {\n    addLineItemModal: PropTypes.bool,\n    setAddLineItemModal: PropTypes.func,\n    projectInfo:PropTypes.object\n  }\n  // Logic for Add New Item Row\n\n  const [addLineItem, setAddLineItem] = useState(\n    [{\n    \"id\":random.int(1,99),\n    \"uom\": \"\",\n    \"qty\": \"\",\n    \"unitprice\": \"\",\n    \"totalprice\": \"\",\n    \"remarks\": \"\",\n    \"item\":\"\",\n    \"description\":\"\"\n},{\n  \"id\":random.int(0,9999),\n  \"uom\": \"\",\n  \"qty\": \"\",\n  \"unitprice\": \"\",\n  \"totalprice\": \"\",\n  \"remarks\": \"\",\n  \"item\":\"\",\n  \"description\":\"\"\n},{\n  \"id\":random.int(0,9999),\n  \"uom\": \"\",\n  \"qty\": \"\",\n  \"unitprice\": \"\",\n  \"totalprice\": \"\",\n  \"remarks\": \"\",\n  \"item\":\"\",\n  \"description\":\"\"\n},{\n  \"id\":random.int(0,9999),\n  \"uom\": \"\",\n  \"qty\": \"\",\n  \"unitprice\": \"\",\n  \"totalprice\": \"\",\n  \"remarks\": \"\",\n  \"item\":\"\",\n  \"description\":\"\"\n},{\n  \"id\":random.int(0,9999),\n  \"uom\": \"\",\n  \"qty\": \"\",\n  \"unitprice\": \"\",\n  \"totalprice\": \"\",\n  \"remarks\": \"\",\n  \"item\":\"\",\n  \"description\":\"\"\n}])\nconst [ totalAmount, setTotalAmount ] = useState(0);\n\n\n  const AddNewLineItem = () => {\n   \n    setAddLineItem([...addLineItem,{\n      \"id\": new Date().getTime().toString(),\n      \"uom\": \"\",\n      \"qty\": \"\",\n      \"unitprice\": \"\",\n      \"totalprice\": \"\",\n      \"remarks\": \"\",\n      \"item\":\"\",\n      \"description\":\"\"\n  }])\n  }\n\n  // Get Line Item Values\n  const addLineItemApi = (obj) =>{\n    api.post('/tender/insertQuoteItems',{\n      \"description\":obj.description,\"amount\":obj.totalprice, \"amount_other\":0, \"item_type\":\"\",  \"title\":obj.item, \"quote_id\":projectInfo.quote_id,\n       \"opportunity_id\":projectInfo.opportunity_id, \"actual_amount\":0, \n     \"supplier_amount\":0, \"quantity\":obj.qty, \"project_id\":projectInfo.project_id, \"created_by\":\"\", \"modified_by\":\"\",\n      \"unit\":obj.uom, \"remarks\":obj.remarks, \"part_no\":\"\", \"nationality\":\"\", \"ot_rate\":0, \"ph_rate\":0, \n     \"scaffold_code\":\"\", \"erection\":0, \"dismantle\":0, \"unit_price\":parseFloat(obj.unitprice), \"drawing_number\":\"\", \"drawing_title\":\"\", \"drawing_revision\":\"\",\n    }).then(()=>{\n      message('Line Item Added Successfully','sucess')\n    }).catch(()=>{\n      message('Cannot Add Line Items','error')\n    })\n  }\n  const getAllValues = () => {\n\n  const result = [];\n    \n    $(\".lineitem tbody tr\").each(()=> {\n        const allValues = {}; \n        $(this).find(\"input\").each(()=> {\n            \n            const fieldName = $(this).attr(\"name\");\n            allValues[fieldName] = $(this).val();\n        });\n        result.push(allValues);\n    })  \n    console.log(result)\n    result.forEach(obj=>{\n      if(obj.item !== '' && obj.totalprice){\n        addLineItemApi(obj)\n      }\n    })\n    setTotalAmount(0)\n    setAddLineItem([{\n      \"id\":random.int(1,99),\n      \"uom\": \"\",\n      \"qty\": \"\",\n      \"unitprice\": \"\",\n      \"totalprice\": \"\",\n      \"remarks\": \"\",\n      \"item\":\"\",\n      \"description\":\"\"\n  },{\n    \"id\":random.int(0,9999),\n    \"uom\": \"\",\n    \"qty\": \"\",\n    \"unitprice\": \"\",\n    \"totalprice\": \"\",\n    \"remarks\": \"\",\n    \"item\":\"\",\n    \"description\":\"\"\n  },{\n    \"id\":random.int(0,9999),\n    \"uom\": \"\",\n    \"qty\": \"\",\n    \"unitprice\": \"\",\n    \"totalprice\": \"\",\n    \"remarks\": \"\",\n    \"item\":\"\",\n    \"description\":\"\"\n  },{\n    \"id\":random.int(0,9999),\n    \"uom\": \"\",\n    \"qty\": \"\",\n    \"unitprice\": \"\",\n    \"totalprice\": \"\",\n    \"remarks\": \"\",\n    \"item\":\"\",\n    \"description\":\"\"\n  },{\n    \"id\":random.int(0,9999),\n    \"uom\": \"\",\n    \"qty\": \"\",\n    \"unitprice\": \"\",\n    \"totalprice\": \"\",\n    \"remarks\": \"\",\n    \"item\":\"\",\n    \"description\":\"\"\n  }])\n    setAddLineItemModal(false)\n    \n}\n\nconst calculateTotal = () => {\n  \n  let totalValue = 0\n  const result = [];\n  $(\".lineitem tbody tr\").each(()=> {\n    const allValues = {}; \n    $(this).find(\"input\").each(()=> {\n        \n        const fieldName = $(this).attr(\"name\");\n        allValues[fieldName] = $(this).val();\n        allValues.totalprice = allValues.qty * allValues.unitprice\n        \n    });\n    result.push(allValues);\n})  \nresult.forEach(e=>{\n  if(e.totalprice)\n  {\n    totalValue += parseFloat(e.totalprice)\n  }\n})\nsetAddLineItem(result)\nsetTotalAmount(totalValue)\n}\n\n// Clear row value\nconst ClearValue = (ind) => {\n  setAddLineItem(current =>\n    current.filter(obj => {\n      return obj.id !== ind.id;\n    }),\n  );\n  if(ind.totalprice){\n    const finalTotal = totalAmount - parseFloat(ind.totalprice)\n    setTotalAmount(finalTotal)\n  }\n}\n\n\n  return (\n    <>\n\n           {/* Add Line Item Modal */}\n           <Modal size=\"xl\" isOpen={addLineItemModal}>\n              <ModalHeader>Add Line Item\n              <Button color=\"secondary\" onClick={()=>{\n                    setAddLineItemModal(false)\n                  }}>X</Button>\n              </ModalHeader>\n              \n              <ModalBody>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\" className='mb-4'>\n                        <Row>\n                          <Col md=\"3\">\n                            <Button color=\"primary\" className='shadow-none'\n                            type='button'\n                            onClick={()=>{AddNewLineItem()}}\n                            >Add Line Item</Button>\n                          </Col>\n                          <Col md=\"3\">\n                            <b> Discount : </b>\n                          </Col>\n                          <Col md=\"3\">\n                            <b>Total Amount: {totalAmount}  </b>\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  <table className='lineitem border border-secondary rounded' >\n                    \n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Item</th>\n                        <th scope=\"col\">Description\t</th>\n                        <th scope=\"col\">UoM</th>\n                        <th scope=\"col\">Qty</th>\n                        <th scope=\"col\">Unit Price</th>\n                        <th scope=\"col\">Total Price</th>\n                        <th scope=\"col\">Remarks</th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n\n                      {addLineItem.map((item) => {\n                            return (\n                              <tr key={item.id}>\n                                  <td data-label=\"Item\"><Input defaultValue={item.item} type=\"text\" name=\"item\" /></td>\n                                  <td data-label=\"Description\"><Input defaultValue={item.description} type=\"text\" name=\"description\" /></td>\n                                  <td data-label=\"UoM\"><Input defaultValue={item.uom} type=\"text\" name=\"uom\" /></td>\n                                  <td data-label=\"Qty\"><Input defaultValue={item.qty} type=\"number\" name=\"qty\" /></td>\n                                  <td data-label=\"Unit Price\"><Input defaultValue={item.unitprice} onBlur={()=>{\n                                    calculateTotal()\n                                  }} type=\"number\" name=\"unitprice\" /></td>\n                                  <td data-label=\"Total Price\"><Input defaultValue={item.totalprice} type=\"text\" name=\"totalprice\" disabled/></td>\n                                  <td data-label=\"Remarks\"><Input defaultValue={item.remarks} type=\"text\" name=\"remarks\" /></td>\n                                  <td data-label=\"Action\"><Link to=\"\"><Input type='hidden' name=\"id\" defaultValue={item.id}></Input><span onClick={()=>{ClearValue(item)}}>Clear</span></Link></td>\n                              </tr>\n                              );\n                          })}\n\n                    </tbody>\n                  </table>\n                  </FormGroup>\n              </ModalBody>\n              <ModalFooter>\n                  <Button color=\"primary\" className='shadow-none' type='button' onClick={()=>{\n                    getAllValues()\n                  }}>Submit</Button>\n                  <Button color=\"secondary\" className='shadow-none' onClick={()=>{\n                    setAddLineItemModal(false)\n                  }}>Cancel</Button>\n              </ModalFooter>\n          </Modal>\n    {/* END Add Line Item Modal */}\n    </>\n  )\n}\n\nexport default AddLineItemModal"],"sourceRoot":""}