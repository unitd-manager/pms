{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","components/BookingTable/BookingModal.js","views/detailTable/BookingDetails.js","constants/creationdatetime.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","BookingMoreDetails","toggle","handleInputs","insertCompany","modal","size","isOpen","bind","md","name","onChange","placeholder","color","onClick","BookingDetails","useState","setModal","bookingDetails","setBookingDetails","id","useParams","navigate","useNavigate","company","setCompany","company_id","phone","website","address_flat","address_street","address_town","address_state","longitude","latitude","companyInsertData","setCompanyInsertData","getCompany","api","get","then","res","data","catch","useEffect","e","target","value","map","company_name","booking_date","moment","creationdatetime","post","insertedDataId","insertId","setTimeout","format"],"mappings":"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","file":"static/js/132.83725fde.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Card,\n  CardBody,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Form,\n} from 'reactstrap';\n\nexport default function BookingMoreDetails({ toggle, handleInputs, insertCompany, modal }) {\n  BookingMoreDetails.propTypes = {\n    toggle: PropTypes.func,\n    handleInputs: PropTypes.func,\n    insertCompany: PropTypes.func,\n    modal: PropTypes.any,\n  };\n  return (\n    <Modal size=\"l\" isOpen={modal} toggle={toggle.bind(null)}>\n      <ModalHeader toggle={toggle.bind(null)}>New Customer</ModalHeader>\n      <ModalBody>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardBody>\n                <Form>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <Label>\n                          Customer Name <span className=\"required\"> *</span>\n                        </Label>\n                        <Input type=\"text\" name=\"company_name\" onChange={handleInputs} />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <Label>\n                          {' '}\n                          Phone <span className=\"required\"> *</span>\n                        </Label>\n                        <Input type=\"text\" name=\"phone\" onChange={handleInputs} />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <Label>Website</Label>\n                        <Input type=\"text\" name=\"website\" onChange={handleInputs} />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <Label>\n                          Address 1<span className=\"required\"> *</span>\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          name=\"address_flat\"\n                          placeholder=\" \"\n                          onChange={handleInputs}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <Label>Address 2</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"address_street\"\n                          placeholder=\" \"\n                          onChange={handleInputs}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <Label>Area</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"address_town\"\n                          placeholder=\" \"\n                          onChange={handleInputs}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <Label>Zipcode</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"address_state\"\n                          placeholder=\" \"\n                          onChange={handleInputs}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <Label>Latitude</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"latitude\"\n                          placeholder=\" \"\n                          onChange={handleInputs}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <Label>Longitude</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"longitude\"\n                          placeholder=\" \"\n                          onChange={handleInputs}\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          className=\"shadow-none\"\n          color=\"primary\"\n          onClick={() => {\n            insertCompany();\n          }}\n        >\n          Save & Continue\n        </Button>\n        <Button color=\"dark\" className=\"shadow-none\" onClick={toggle.bind(null)}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, FormGroup, Label, Button,Input } from 'reactstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport moment from 'moment'\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\nimport BookingModal from '../../components/BookingTable/BookingModal';\nimport api from '../../constants/api';\nimport message from '../../components/Message';\nimport creationdatetime from '../../constants/creationdatetime'\n\nconst BookingDetails = () => {\n  //All state Variables\n  const [modal, setModal] = useState(false);\n  const [bookingDetails, setBookingDetails] = useState();\n\n  //Navigation and Parameter Constants\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [company, setCompany] = useState();\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  //Logic for adding category in db\n  const [companyInsertData, setCompanyInsertData] = useState({\n    company_id: '',\n    phone: '',\n    website: '',\n    address_flat: '',\n    address_street: '',\n    address_town: '',\n    address_state: '',\n    longitude: '',\n    latitude: '',\n  });\n\n  //setting data in companyInsertData\n  const handleInputs = (e) => {\n    setCompanyInsertData({ ...companyInsertData, [e.target.name]: e.target.value });\n  };\n //Api call for getting company dropdown\n const getCompany = () => {\n  api\n    .get('/booking/getCompanyName')\n    .then((res) => {\n      setCompany(res.data.data);\n    })\n    .catch(() => {\n      message('Company not found', 'info');\n    });\n};\n\n  //Api for insertCompany\n  const insertCompany = () => {\n    if (companyInsertData.company_name !== '' && companyInsertData.address_flat !== '') {\n      // companyInsertData.creation_date = creationdatetime\n      api\n        .post('/company/insertCompany', companyInsertData)\n        .then(() => {\n         // const insertedId = res.data.data.insertId;\n          message('Company inserted successfully.', 'success');\n          getCompany()\n           toggle();\n          \n        })\n        .catch(() => {\n          message('Network connection error.', 'error');\n        });\n    } else {\n      message('Please fill all required fields', 'warning');\n    }\n  };\n\n  //setting data in companyInsertData\n  const handleBookingInputs = (e) => {\n    setBookingDetails({ ...bookingDetails, [e.target.name]: e.target.value });\n  };\n\n  //Logic for adding Booking in db\n  const insertBooking = () => {\n    if (bookingDetails.company_id !== '' ) {\n      bookingDetails.booking_date = moment()\n      bookingDetails.creation_date = creationdatetime\n      api\n        .post('/booking/insertBooking', bookingDetails)\n        .then((res) => {\n          const insertedDataId = res.data.data.insertId;\n          message('Booking inserted successfully.', 'success');\n          setTimeout(() => { \n            \n            navigate(`/BookingEdit/${insertedDataId}`);\n          }, 300);\n        })\n        .catch(() => {\n          message('Network connection error.', 'error');\n        });\n    } else {\n      message('Please fill all required fields', 'warning');\n    }\n  };\n\n  useEffect(() => {getCompany()}, [id]);\n\n  return (\n    <div>\n      <BreadCrumbs />\n      <ToastContainer></ToastContainer>\n      <Row>\n        <Col md=\"12\">\n          <ComponentCard title=\"Booking Details\">\n            <Form>\n              <FormGroup>\n                <Row>\n                  <Col md=\"10\">\n                    <Label>CustomerName </Label>\n                    <Input type=\"select\" name=\"company_id\" onChange={handleBookingInputs}>\n                    <option>Select Customer</option>\n                    {company &&\n                      company.map((e) => {\n                        return <option key={e.company_id} value={e.company_id}>{e.company_name}</option>;\n                      })}\n                    </Input>\n                    \n                    \n                  </Col>\n                  <Col md=\"2\" className=\"addNew\">\n                    <Label>Add New Customer</Label>\n                    <Button color=\"primary\" className='shadow-none' onClick={toggle.bind(null)}>\n                      Add New\n                    </Button>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n                    <Button color=\"primary\"\n                      onClick={() => {\n                        insertBooking();\n                      }}\n                      type=\"button\"\n                      className=\"btn mr-2 shadow-none\"\n                    >\n                      Save & Continue\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        navigate(-1);\n                      }}\n                      type=\"button\"\n                      className=\"btn btn-dark shadow-none\"\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </Row>\n              </FormGroup>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n\n      <BookingModal\n        toggle={toggle}\n        handleInputs={handleInputs}\n        insertCompany={insertCompany}\n        modal={modal}\n      ></BookingModal>\n    </div>\n  );\n};\nexport default BookingDetails;\n","import moment from \"moment\"\n\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\nexport default creationdatetime \n"],"sourceRoot":""}