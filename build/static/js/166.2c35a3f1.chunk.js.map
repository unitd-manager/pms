{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/SubConDetails.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","SubConDetails","useState","company_name","subConForms","setSubConForms","navigate","useNavigate","useEffect","md","xs","name","onChange","e","target","value","color","onClick","api","post","then","res","insertedDataId","data","insertId","console","log","setTimeout","catch"],"mappings":"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","file":"static/js/166.2c35a3f1.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\nimport api from '../../constants/api';\nimport message from '../../components/Message';\n\nconst SubConDetails = () => {\n  //All state variables\n  const [subConForms, setSubConForms] = useState({\n    company_name: '',\n  });\n  //Navigation and parameters\n  const navigate = useNavigate();\n  //subcon data in subconDetails\n  const handleInputsSubConForms = (e) => {\n    setSubConForms({ ...subConForms, [e.target.name]: e.target.value });\n  };\n  //Insert subcon\n  const insertSubCon = () => {\n    if (subConForms.company_name !== '')\n      api\n        .post('/subcon/insertsub_con', subConForms)\n        .then((res) => {\n          const insertedDataId = res.data.data.insertId;\n          console.log(insertedDataId);\n          message('Subcon inserted successfully.', 'success');\n          setTimeout(() => {\n            navigate(`/SubConEdit/${insertedDataId}`);\n          }, 300);\n        })\n        .catch(() => {\n          message('Network connection error.', 'error');\n        });\n    else {\n      message('Please fill all required fields.', 'error');\n    }\n  };\n\n  useEffect(() => {\n  }, []);\n  return (\n    <div>\n     <BreadCrumbs />\n      <ToastContainer />\n      <Row>\n        <Col md=\"6\" xs=\"12\">\n          <ComponentCard title=\"SubCon Name\">\n          <Form>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Label>\n                      {' '}\n                      Subcon Name <span className=\"required\"> *</span>{' '}\n                    </Label>\n                    <Input type=\"text\" name=\"company_name\" onChange={handleInputsSubConForms} />\n                    </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n          <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n            <Button color=\"primary\"\n              onClick={() => {\n                insertSubCon();\n              }}\n              type=\"button\"\n              className=\"btn mr-2 shadow-none\"\n            >\n              Save & Continue\n            </Button>\n            <Button\n              onClick={() => {\n                navigate('/Subcon')\n              }}\n              type=\"button\"\n              className=\"btn btn-dark shadow-none\"\n            >\n              Go to List\n            </Button>\n            </div>\n                </Row>\n              </FormGroup>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default SubConDetails;\n"],"sourceRoot":""}