{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","views/detailTable/ProductDetails.js","components/CreationModification.js","components/ComponentCard.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","ProductDetails","useState","itemcode","setItemcode","navigate","useNavigate","title","item_code","site_id","productDetails","setProductDetails","useEffect","api","get","then","res","data","itemc","md","onChange","e","target","name","value","color","onClick","parseFloat","post","insertedDataId","insertId","console","log","product_id","catch","setTimeout","CreationModification","details","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"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","file":"static/js/160.b0d844b4.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button\n} from 'reactstrap';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate} from 'react-router-dom';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs'\nimport ComponentCard from '../../components/ComponentCard';\nimport message from '../../components/Message';\nimport api from '../../constants/api';\n\n\nconst ProductDetails = () => {\n  //All const variables\n  const [itemcode, setItemcode] = useState();\n  const navigate = useNavigate()\n  const [productDetails, setProductDetails] = useState({\n    title: \"\",\n    item_code:\"\",\n    site_id:0\n  });\n  //setting data in ProductDetails\n  const handleInputs = (e) => {\n    setProductDetails({ ...productDetails, [e.target.name]: e.target.value });\n  }\n  //getting maximum of itemcode\n  const getMaxItemcode = () => {\n    api.get('/product/getMaxItemCode')\n      .then((res) => {\n        setItemcode(res.data.data[0].itemc)\n        \n      })\n  }\n  //Insert Product Data\n  const insertProductData = () => {\n    productDetails.item_code= parseFloat(itemcode)+ 1;\n    if(productDetails.title !==\"\" && productDetails.item_code!==\"\"){\n    api.post('/product/insertProduct', productDetails)\n    .then((res) => {\n      const insertedDataId= res.data.data.insertId\n      console.log(insertedDataId);\n      message('Product inserted successfully.','success')\n      api.post('/inventory/insertinventory', {product_id:insertedDataId})\n      .then(() => { message('inventory created successfully.','success')})\n      .catch(() => {\n        message('Unable to create inventory.', 'error')\n      })\n      setTimeout(()=> {\n        navigate(`/ProductEdit/${insertedDataId}`)\n      },300);     \n    })\n    .catch(() => {\n      message('Unable to edit record.', 'error')\n    })\n  }else {\n    message('Please fill all required fields.', 'warning');\n  }\n  }\n  //useeffect\n  useEffect(() => {\n    getMaxItemcode();\n  }, [])\n\n  return (\n    <div>\n      <BreadCrumbs />\n      <ToastContainer></ToastContainer>\n      <Row>\n        <Col md=\"6\">\n          <ComponentCard title=\"Key Details\">\n            <Form>\n              <FormGroup>\n                <Row>\n                <Col md=\"12\">\n                    <Label>Title</Label>\n                    <Input type=\"text\"\n                      onChange={handleInputs}\n                      value={ProductDetails && (ProductDetails.title)}\n                      name=\"title\" />\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n                  <Button className='shadow-none'\n                    color=\"primary\"\n                    onClick={() => {\n                      insertProductData();\n                    }}>\n                    Save & Continue\n                  </Button>\n                    <Button onClick={() => {\n                      navigate('/Product')\n                    }} type=\"button\" className=\"btn btn-dark shadow-none\">\n                     Cancel\n                    </Button>\n                  </div>\n                </Row>\n              </FormGroup>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </div>\n  );\n}\nexport default ProductDetails","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n"],"sourceRoot":""}