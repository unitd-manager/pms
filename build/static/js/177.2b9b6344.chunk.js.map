{"version":3,"sources":["components/apps/notes/NoteDetail.js","components/apps/notes/NoteListItem.js","components/apps/notes/NoteList.js","components/apps/notes/NoteSearch.js","views/apps/notes/Notes.js","components/twoColumn/TwoColumn.js"],"names":["colorsBg","bg","NoteDetail","noteDetails","useSelector","state","notesReducer","notes","notesContent","id","length","dispatch","useDispatch","className","size","onClick","e","preventDefault","addNote","deleted","for","tag","name","type","rows","value","title","onChange","UpdateNote","target","map","colorbg","color","NoteListItem","active","noteTitle","noteColor","noteDatef","onDeleteClick","placement","NoteList","useEffect","fetchNotes","noteSearch","filter","t","toLocaleLowerCase","concat","includes","filterNotes","note","SelectNote","DeleteNote","Date","datef","toLocaleDateString","weekday","year","month","NoteSearch","searchTerm","SearchNotes","placeholder","Notes","TwoColumn","leftContent","rightContent","React","useState","isOpen","setIsOpen","style","height"],"mappings":"gKAKMA,EAAW,CACf,CACEC,GAAI,WAEN,CACEA,GAAI,WAEN,CACEA,GAAI,UAEN,CACEA,GAAI,QAEN,CACEA,GAAI,YAoEOC,EAhEI,WACjB,IAAMC,EAAcC,aAClB,SAACC,GAAD,OAAWA,EAAMC,aAAaC,MAAMF,EAAMC,aAAaE,aAAe,MAElEC,EAAKL,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaC,MAAMG,OAAS,KAE9DC,EAAWC,cAOjB,OACE,gCACE,qBAAKC,UAAU,6BAAf,SACE,cAAC,IAAD,CAAQA,UAAU,0BAA0BC,KAAK,KAAKC,QARzC,SAACC,GAClBA,EAAEC,iBACFN,EAASO,YAAQT,EAAI,cAAe,aAMhC,4BAIDN,IAAuC,IAAxBA,EAAYgB,QAC1B,sBAAKN,UAAU,MAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOO,IAAI,SAASC,IAAI,KAAxB,uBAGA,cAAC,IAAD,CACEZ,GAAG,SACHa,KAAK,SACLC,KAAK,WACLC,KAAK,IACLC,MAAOtB,EAAYuB,MACnBC,SAAU,SAACX,GAAD,OAAOL,EAASiB,YAAWzB,EAAYM,GAAI,QAASO,EAAEa,OAAOJ,cAG3E,uBACA,mDACA,qBAAKZ,UAAU,eAAf,SACGb,EAAS8B,KAAI,SAACC,GAAD,OACZ,cAAC,IAAD,CACEC,MAAOD,EAAQ9B,GAEfa,KAAK,KACLC,QAAS,kBAAMJ,EAASiB,YAAWzB,EAAYM,GAAI,QAAjB,UAA6BsB,EAAQ9B,OAJzE,SAMGE,EAAY6B,QAAUD,EAAQ9B,GAC7B,mBAAGY,UAAU,gBAEb,mBAAGA,UAAU,kBAPVkB,EAAQ9B,YAcrB,sBAAKY,UAAU,wEAAf,UACE,mBAAGA,UAAU,wBACb,oBAAIA,UAAU,OAAd,sD,OCnDKoB,EAzBM,SAAC,GAAD,IAAGlB,EAAH,EAAGA,QAASN,EAAZ,EAAYA,GAAIyB,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,UAAWC,EAAnC,EAAmCA,UAAWC,EAA9C,EAA8CA,UAAWC,EAAzD,EAAyDA,cAAzD,OACnB,cAAC,IAAD,CAASzB,UAAS,uCAAkCqB,IAAWzB,EAAK,WAAa,IAAjF,SACE,sBAAKM,QAASA,EAASF,UAAS,2CAAsCuB,GAAtE,UACE,oBAAIvB,UAAU,yBAAd,SAAwCsB,IACxC,sBAAKtB,UAAU,SAAf,UACE,gCAAQwB,IACR,cAAC,KAAD,CAAqBE,UAAU,MAAMV,OAAO,SAA5C,oBAGA,mBAAGd,QAASuB,EAAezB,UAAU,sBAAsBJ,GAAG,oBCsCvD+B,EA7CE,WACf,IAAM7B,EAAWC,cACjB6B,qBAAU,WACR9B,EAAS+B,iBACR,CAAC/B,IAEJ,IAUMJ,EAAQH,aAAY,SAACC,GAAD,OAVN,SAACE,EAAOoC,GAC1B,MAAmB,KAAfA,EACKpC,EAAMqC,QACX,SAACC,GAAD,OACGA,EAAE1B,SACH0B,EAAEnB,MAAMoB,oBAAoBC,OAAO,KAAKC,SAASL,EAAWG,wBAE3DvC,EAAMqC,QAAO,SAACC,GAAD,OAAQA,EAAE1B,WAI9B8B,CAAY5C,EAAMC,aAAaC,MAAOF,EAAMC,aAAaqC,eAErDT,EAAS9B,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaE,gBAEzD,OACE,cAAC,IAAD,UACGD,GAASA,EAAMG,OACZH,EAAMuB,KAAI,SAACoB,GAAD,OACR,cAAC,EAAD,2BAEMA,GAFN,IAGEhB,OAAQA,EACRnB,QAAS,kBAAMJ,EAASwC,YAAWD,EAAKzC,MACxC6B,cAAe,kBAAM3B,EAASyC,YAAWF,EAAKzC,MAC9C0B,UAAWe,EAAKxB,MAChBU,UAAWc,EAAKlB,MAChBK,UAAW,IAAIgB,KAAKH,EAAKI,OAAOC,mBAAmB,CACjDC,QAAS,QACTC,KAAM,UACNC,MAAO,YAVJR,EAAKzC,OAcd,cCjBKkD,EAxBI,WACjB,IAAMC,EAAaxD,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaqC,cAEvDhC,EAAWC,cAEjB,OACE,qBAAKC,UAAU,oBAAf,SACE,cAAC,IAAD,UACE,qBAAKA,UAAU,kCAAf,SACE,cAAC,IAAD,CACEA,UAAU,eACVJ,GAAG,aACHa,KAAK,aACLC,KAAK,OACLI,SAAU,SAACX,GAAD,OAAOL,EAASkD,YAAY7C,EAAEa,OAAOJ,SAC/CA,MAAOmC,EACPE,YAAY,2B,gBCMTC,UApBD,WACZ,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CACEC,YACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,OAGJC,aAAc,cAAC,EAAD,c,qFCcXF,IA5BG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,EAA4BC,IAAMC,UAAS,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OACE,sBAAKzD,UAAU,6DAAf,UACE,sBAAKA,UAAS,sDAAiDwD,EAAS,eAAiB,IAAzF,UACE,cAAC,IAAD,CAAQxD,UAAU,oCAAoCmB,MAAM,SAA5D,SACE,mBAAGnB,UAAS,aAAQwD,EAAS,OAAS,WAAatD,QARtC,WACnBuD,GAAWD,QASP,cAAC,IAAD,CAAWE,MAAO,CAAEC,OAAQ,uBAA5B,SAAsDP,OAExD,sBAAKpD,UAAU,YAAf,UACGqD,EACAG,EAAS,qBAAKxD,UAAU,mBAAsB,W","file":"static/js/177.2b9b6344.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input, FormGroup, Button, Label } from 'reactstrap';\nimport { UpdateNote, addNote } from '../../../store/apps/notes/NotesSlice';\n\nconst colorsBg = [\n  {\n    bg: 'primary',\n  },\n  {\n    bg: 'success',\n  },\n  {\n    bg: 'danger',\n  },\n  {\n    bg: 'info',\n  },\n  {\n    bg: 'warning',\n  },\n];\n\nconst NoteDetail = () => {\n  const noteDetails = useSelector(\n    (state) => state.notesReducer.notes[state.notesReducer.notesContent - 1],\n  );\n  const id = useSelector((state) => state.notesReducer.notes.length + 1);\n\n  const dispatch = useDispatch();\n\n  const handleNote = (e) => {\n    e.preventDefault();\n    dispatch(addNote(id, 'dummy Title', 'primary'));\n  };\n\n  return (\n    <div>\n      <div className=\"border-bottom p-3 text-end\">\n        <Button className=\"btn btn-success ms-auto\" size=\"sm\" onClick={handleNote}>\n          Add New Note\n        </Button>\n      </div>\n      {noteDetails && noteDetails.deleted === false ? (\n        <div className=\"p-4\">\n          <FormGroup>\n            <Label for=\"title1\" tag=\"h5\">\n              Edit Note\n            </Label>\n            <Input\n              id=\"title1\"\n              name=\"title1\"\n              type=\"textarea\"\n              rows=\"5\"\n              value={noteDetails.title}\n              onChange={(e) => dispatch(UpdateNote(noteDetails.id, 'title', e.target.value))}\n            />\n          </FormGroup>\n          <br />\n          <h5>Change Note color</h5>\n          <div className=\"button-group\">\n            {colorsBg.map((colorbg) => (\n              <Button\n                color={colorbg.bg}\n                key={colorbg.bg}\n                size=\"sm\"\n                onClick={() => dispatch(UpdateNote(noteDetails.id, 'color', `${colorbg.bg}`))}\n              >\n                {noteDetails.color === colorbg.bg ? (\n                  <i className=\"bi bi-check\" />\n                ) : (\n                  <i className=\"bi bi-circle\" />\n                )}\n              </Button>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div className=\"d-flex mt-3 p-4 flex-column align-items-center justify-content-center\">\n          <i className=\"ti-agenda display-5\" />\n          <h4 className=\"mt-2\">Please select a Note or Add Note.</h4>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NoteDetail;\n","import React from 'react';\nimport { NavItem, UncontrolledTooltip } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst NoteListItem = ({ onClick, id, active, noteTitle, noteColor, noteDatef, onDeleteClick }) => (\n  <NavItem className={`border-bottom cursor-pointer ${active === id ? 'bg-light' : ''}`}>\n    <div onClick={onClick} className={`border-start p-3 border-4 border-${noteColor}`}>\n      <h5 className=\"text-truncate noteText\">{noteTitle}</h5>\n      <div className=\"d-flex\">\n        <small>{noteDatef}</small>\n        <UncontrolledTooltip placement=\"top\" target=\"delete\">\n          Delete\n        </UncontrolledTooltip>\n        <i onClick={onDeleteClick} className=\"bi bi-trash ms-auto\" id=\"delete\" />\n      </div>\n    </div>\n  </NavItem>\n);\n\nNoteListItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  noteTitle: PropTypes.string.isRequired,\n  noteDatef: PropTypes.string.isRequired,\n  noteColor: PropTypes.string.isRequired,\n  id: PropTypes.number,\n  active: PropTypes.any,\n  onDeleteClick: PropTypes.func.isRequired,\n};\n\nexport default NoteListItem;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nav } from 'reactstrap';\nimport NoteListItem from './NoteListItem';\nimport { fetchNotes, SelectNote, DeleteNote } from '../../../store/apps/notes/NotesSlice';\n\nconst NoteList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, [dispatch]);\n\n  const filterNotes = (notes, noteSearch) => {\n    if (noteSearch !== '')\n      return notes.filter(\n        (t) =>\n          !t.deleted &&\n          t.title.toLocaleLowerCase().concat(' ').includes(noteSearch.toLocaleLowerCase()),\n      );\n    return notes.filter((t) => !t.deleted);\n  };\n\n  const notes = useSelector((state) =>\n    filterNotes(state.notesReducer.notes, state.notesReducer.noteSearch),\n  );\n  const active = useSelector((state) => state.notesReducer.notesContent);\n\n  return (\n    <Nav>\n      {notes && notes.length\n        ? notes.map((note) => (\n            <NoteListItem\n              key={note.id}\n              {...note}\n              active={active}\n              onClick={() => dispatch(SelectNote(note.id))}\n              onDeleteClick={() => dispatch(DeleteNote(note.id))}\n              noteTitle={note.title}\n              noteColor={note.color}\n              noteDatef={new Date(note.datef).toLocaleDateString({\n                weekday: 'short',\n                year: 'numeric',\n                month: 'short',\n              })}\n            />\n          ))\n        : 'no notes'}\n    </Nav>\n  );\n};\n\nexport default NoteList;\n","import React from 'react';\nimport { Form, Input } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SearchNotes } from '../../../store/apps/notes/NotesSlice';\n\nconst NoteSearch = () => {\n  const searchTerm = useSelector((state) => state.notesReducer.noteSearch);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"p-3 border-bottom\">\n      <Form>\n        <div className=\"position-relative has-icon-left\">\n          <Input\n            className=\"form-control\"\n            id=\"searchNote\"\n            name=\"searchNote\"\n            type=\"text\"\n            onChange={(e) => dispatch(SearchNotes(e.target.value))}\n            value={searchTerm}\n            placeholder=\"Search Notes...\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default NoteSearch;\n","import { Card, CardBody } from 'reactstrap';\nimport NoteDetail from '../../../components/apps/notes/NoteDetail';\nimport NoteList from '../../../components/apps/notes/NoteList';\nimport NoteSearch from '../../../components/apps/notes/NoteSearch';\nimport TwoColumn from '../../../components/twoColumn/TwoColumn';\nimport './notes.scss';\n\nconst Notes = () => {\n  return (\n    <>\n      <Card>\n        <CardBody>\n          <TwoColumn\n            leftContent={\n              <>\n                <NoteSearch />\n                <NoteList />\n              </>\n            }\n            rightContent={<NoteDetail />}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default Notes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport SimpleBar from 'simplebar-react';\n\nconst TwoColumn = ({ leftContent, rightContent }) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const handleSubmit = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"d-lg-flex d-md-block border position-relative leftRightBox\">\n      <div className={`leftPart flex-shrink-0  bg-white border-end ${isOpen ? 'showLeftPart' : ''}`}>\n        <Button className=\"d-lg-none d-md-block openCloseBtn\" color=\"danger\">\n          <i className={`bi ${isOpen ? 'bi-x' : 'bi-list'}`} onClick={handleSubmit} />\n        </Button>\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{leftContent}</SimpleBar>\n      </div>\n      <div className=\"rightPart\">\n        {rightContent}\n        {isOpen ? <div className=\"contentOverlay\" /> : ''}\n      </div>\n    </div>\n  );\n};\n\nTwoColumn.propTypes = {\n  leftContent: PropTypes.node,\n  rightContent: PropTypes.node,\n};\n\nexport default TwoColumn;\n"],"sourceRoot":""}