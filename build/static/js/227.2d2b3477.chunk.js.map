{"version":3,"sources":["components/apps/chat/ChatListItem.js","components/apps/chat/ChatList.js","components/apps/chat/ChatSearch.js","components/apps/chat/ChatContent.js","components/apps/chat/ChatMsgForm.js","views/apps/chat/Chat.js","components/twoColumn/TwoColumn.js"],"names":["ChatListItem","onClick","contactName","active","id","thumb","status","className","src","alt","width","ChatList","dispatch","useDispatch","useEffect","fetchChats","chats","useSelector","state","chatSearch","filter","t","name","toLocaleLowerCase","includes","filterChats","chatReducer","chatContent","map","chat","SelectChat","chatExcerpt","excerpt","ChatSearch","searchTerm","type","onChange","e","SearchChat","target","value","placeholder","ChatContent","chatDetails","close","style","height","Object","keys","chatHistory","key","k","v","ChatMsgForm","useState","msg","setMsg","onSubmit","preventDefault","stopPropagation","sendMsg","bind","required","color","disabled","Chat","TwoColumn","leftContent","rightContent","React","isOpen","setIsOpen"],"mappings":"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","file":"static/js/227.2d2b3477.chunk.js","sourcesContent":["import React from 'react';\nimport { NavItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst ChatListItem = ({ onClick, contactName, active, id, thumb, status }) => (\n  <NavItem onClick={onClick} className={`w-100 cursor-pointer ${active === id ? 'bg-light' : ''}`}>\n    <div className=\"d-flex align-items-center p-3 mb-1\">\n      <div>\n        <img src={thumb} alt=\"user\" className=\"rounded-circle\" width=\"50\" />\n      </div>\n      <div className=\"mx-3\">\n        <h5 className=\"mb-0\">{contactName}</h5>\n        <small>{status}</small>\n      </div>\n    </div>\n  </NavItem>\n);\n\nChatListItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  thumb: PropTypes.string,\n  active: PropTypes.any,\n  id: PropTypes.any,\n  contactName: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nexport default ChatListItem;\n","import React, { useEffect } from 'react';\nimport { Nav } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SelectChat, fetchChats } from '../../../store/apps/chat/ChatSlice';\nimport Chat from './ChatListItem';\n\nconst ChatList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchChats());\n  }, [dispatch]);\n\n  const filterChats = (chats, chatSearch) => {\n    if (chats)\n      return chats.filter((t) =>\n        t.name.toLocaleLowerCase().includes(chatSearch.toLocaleLowerCase()),\n      );\n    return chats;\n  };\n\n  const chats = useSelector((state) =>\n    filterChats(state.chatReducer.chats, state.chatReducer.chatSearch),\n  );\n  const active = useSelector((state) => state.chatReducer.chatContent);\n\n  return (\n    <Nav className=\"\">\n      {chats.map((chat) => (\n        <Chat\n          key={chat.id}\n          {...chat}\n          active={active}\n          onClick={() => dispatch(SelectChat(chat.id))}\n          thumb={chat.thumb}\n          status={chat.status}\n          contactName={chat.name}\n          chatExcerpt={chat.excerpt}\n        />\n      ))}\n    </Nav>\n  );\n};\n\nexport default ChatList;\n","import React from 'react';\nimport { Form, Input } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SearchChat } from '../../../store/apps/chat/ChatSlice';\n\nconst ChatSearch = () => {\n  const searchTerm = useSelector((state) => state.chatReducer.chatSearch);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"p-3 border-bottom\">\n      <Form>\n        <Input\n          className=\"form-control mb-2\"\n          id=\"searchUser\"\n          name=\"searchUser\"\n          type=\"text\"\n          onChange={(e) => dispatch(SearchChat(e.target.value))}\n          value={searchTerm}\n          placeholder=\"Search Contact...\"\n        />\n      </Form>\n    </div>\n  );\n};\n\nexport default ChatSearch;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport SimpleBar from 'simplebar-react';\n\nconst ChatContent = () => {\n  const chatDetails = useSelector(\n    (state) => state.chatReducer.chats[state.chatReducer.chatContent - 1],\n  );\n\n  return (\n    <>\n      {chatDetails ? (\n        <div>\n          <div className=\"d-flex align-items-center p-3 border-bottom\">\n            <Button close className=\"d-xs-block d-lg-none me-2\" />\n            <div className=\"\">\n              <img src={chatDetails.thumb} alt=\"user\" className=\"rounded-circle\" width=\"46\" />\n            </div>\n            <div className=\"mx-2\">\n              <h5 className=\"mb-0\">{chatDetails.name}</h5>\n              <small>{chatDetails.status}</small>\n            </div>\n          </div>\n\n          <SimpleBar style={{ height: 'calc(100vh - 360px)' }}>\n            <ul className=\"list-unstyled p-4\">\n              {Object.keys(chatDetails.chatHistory).map((chat) =>\n                Object.keys(chatDetails.chatHistory[chat]).map((key) =>\n                  Object.keys(chatDetails.chatHistory[chat][key]).map((k) =>\n                    k === 'from' ? (\n                      <li className=\"chat-item d-flex align-items-center\" key={k}>\n                        <div>\n                          <img\n                            src={chatDetails.thumb}\n                            alt={chatDetails.name}\n                            width=\"50\"\n                            className=\"rounded-circle\"\n                          />\n                        </div>\n                        <div className=\"px-3\">\n                          {chatDetails.chatHistory[chat][key][k].map((v) => (\n                            <div className=\"bg-light d-table p-2 mb-1\" key={v}>\n                              {v}\n                            </div>\n                          ))}\n                        </div>\n                      </li>\n                    ) : (\n                      <li className=\"flex-row-reverse text-end d-flex my-1 ms-auto\" key={k}>\n                        <div>\n                          {chatDetails.chatHistory[chat][key][k].map((v) => (\n                            <div key={v} className=\"p-2 d-table ms-auto bg-light mb-1\">\n                              {v}\n                            </div>\n                          ))}\n                        </div>\n                      </li>\n                    ),\n                  ),\n                ),\n              )}\n            </ul>\n          </SimpleBar>\n        </div>\n      ) : (\n        <div>Select chat</div>\n      )}\n    </>\n  );\n};\n\nexport default ChatContent;\n","import React, { useState } from 'react';\nimport { Form, Input, Button } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { sendMsg } from '../../../store/apps/chat/ChatSlice';\n\nconst ChatMsgForm = () => {\n  const [msg, setMsg] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChatMsgChange = (e) => {\n    setMsg(e.target.value);\n  };\n  const id = useSelector((state) => state.chatReducer.chatContent);\n\n  const onChatMsgSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(sendMsg(id, msg));\n    setMsg('');\n  };\n\n  return (\n    <Form onSubmit={onChatMsgSubmit.bind()} className=\"card-body border-top\">\n      <div className=\"d-flex\">\n        <Input\n          type=\"text\"\n          className=\"form-control me-2\"\n          placeholder=\"Type your message\"\n          onChange={handleChatMsgChange.bind(null)}\n          value={msg}\n          required\n        />\n        <Button\n          onClick={() => {\n            dispatch(sendMsg(id, msg));\n            setMsg('');\n          }}\n          color=\"primary\"\n          disabled={!msg}\n        >\n          <i className=\"bi bi-send\" />\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default ChatMsgForm;\n","import { Card, CardBody } from 'reactstrap';\nimport ChatList from '../../../components/apps/chat/ChatList';\nimport ChatSearch from '../../../components/apps/chat/ChatSearch';\nimport ChatContent from '../../../components/apps/chat/ChatContent';\nimport ChatMsgForm from '../../../components/apps/chat/ChatMsgForm';\nimport TwoColumn from '../../../components/twoColumn/TwoColumn';\n\nconst Chat = () => {\n  return (\n    <Card>\n      <CardBody>\n        <TwoColumn\n          leftContent={\n            <>\n              <ChatSearch />\n              <ChatList />\n            </>\n          }\n          rightContent={\n            <>\n              <ChatContent />\n              <ChatMsgForm />\n            </>\n          }\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport SimpleBar from 'simplebar-react';\n\nconst TwoColumn = ({ leftContent, rightContent }) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const handleSubmit = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"d-lg-flex d-md-block border position-relative leftRightBox\">\n      <div className={`leftPart flex-shrink-0  bg-white border-end ${isOpen ? 'showLeftPart' : ''}`}>\n        <Button className=\"d-lg-none d-md-block openCloseBtn\" color=\"danger\">\n          <i className={`bi ${isOpen ? 'bi-x' : 'bi-list'}`} onClick={handleSubmit} />\n        </Button>\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{leftContent}</SimpleBar>\n      </div>\n      <div className=\"rightPart\">\n        {rightContent}\n        {isOpen ? <div className=\"contentOverlay\" /> : ''}\n      </div>\n    </div>\n  );\n};\n\nTwoColumn.propTypes = {\n  leftContent: PropTypes.node,\n  rightContent: PropTypes.node,\n};\n\nexport default TwoColumn;\n"],"sourceRoot":""}