{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","components/CategoryTable/CategoryButton.js","components/CategoryTable/CategoryDetailComp.js","views/EditData/CategoryEdit.js","components/ComponentCardV2.js","constants/creationdatetime.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","CategoryButton","editCategoryData","applyChanges","saveChanges","backToList","ComponentCardV2","color","onClick","console","log","CategoryDetailComp","categoryDetails","handleInputs","section","valuelist","md","onChange","value","category_title","name","section_id","defaultValue","map","e","section_title","category_type","internal_link","defaultChecked","published","meta_title","meta_description","meta_keyword","seo_title","CategoryEdit","useState","setCategoryDetails","setSection","setValuelist","id","useParams","navigate","useNavigate","useEffect","api","post","category_id","then","res","data","catch","get","creationdatetime","deleteCategoryData","target","pStyle","textAlign","marginRight","oStyle","outline","border","style","moment","format"],"mappings":"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","file":"static/js/94.30a9c96a.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\nimport ComponentCardV2 from '../ComponentCardV2';\n// import DeleteButton from '../DeleteButton';\n\n\nexport default function CategoryButton({\n  editCategoryData,\n  // navigate,\n  applyChanges,\n  saveChanges,\n  // id,\n  backToList,\n}) {\n  CategoryButton.propTypes = {\n    editCategoryData: PropTypes.any,\n    // navigate: PropTypes.func,\n    applyChanges: PropTypes.func,\n    saveChanges: PropTypes.func,\n    // id: PropTypes.string,\n    backToList: PropTypes.func,\n  };\n  return (\n    <Form>\n      <FormGroup>\n        <ComponentCardV2>\n          <Row>\n            <Col>\n              <Button\n                className=\"shadow-none\"\n                color=\"primary\"\n                onClick={() => {\n                  editCategoryData();\n                  saveChanges();\n                }}\n              >\n                Save\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                color=\"primary\"\n                className=\"shadow-none\"\n                onClick={() => {\n                  editCategoryData();\n                  applyChanges();\n                  console.log('cancel process');\n                }}\n              >\n                Apply\n              </Button>\n            </Col>\n           \n            <Col>\n              <Button\n                color=\"dark\"\n                className=\"shadow-none\"\n                onClick={() => {\n                  backToList();\n                  console.log('back to list');\n                }}\n              >\n                Back to List\n              </Button>\n            </Col>\n          </Row>\n        </ComponentCardV2>\n      </FormGroup>\n    </Form>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport ComponentCard from '../ComponentCard';\n\nexport default function CategoryDetailComp({ categoryDetails, handleInputs, section, valuelist }) {\n  CategoryDetailComp.propTypes = {\n    categoryDetails: PropTypes.object,\n    handleInputs: PropTypes.func,\n    section: PropTypes.array,\n    valuelist: PropTypes.array,\n  };\n  return (\n    <>\n      <Form>\n        <FormGroup>\n        <ComponentCard title=\"Category Details\"\n         creationModificationDate={categoryDetails}>\n            <Row>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Label>\n                    Title <span className=\"required\"> *</span>\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={categoryDetails && categoryDetails.category_title}\n                    name=\"category_title\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Label>Section</Label>\n                  <Input\n                    type=\"select\"\n                    onChange={handleInputs}\n                    value={categoryDetails && categoryDetails.section_id}\n                    name=\"section_id\"\n                  >\n                    <option defaultValue=\"selected\">\n                      Please Select\n                    </option>\n                    {section &&\n                      section.map((e) => {\n                        return <option key={e.section_id} value={e.section_id}>{e.section_title}</option>;\n                      })}\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Label>Category Type</Label>\n                  <Input\n                    type=\"select\"\n                    onChange={handleInputs}\n                    value={categoryDetails && categoryDetails.category_type}\n                    name=\"category_type\"\n                  >\n                    <option defaultValue=\"selected\">\n                      Please Select\n                    </option>\n                    {valuelist &&\n                      valuelist.map((e) => {\n                        return <option key={e.value} value={e.value}>{e.value}</option>;\n                      })}\n                  </Input>\n                </FormGroup>\n              </Col>\n          </Row>\n          <Row>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Label>Internal Link</Label>\n                  <Input\n                    type=\"text\"\n                    value={categoryDetails && categoryDetails.internal_link}\n                    onChange={handleInputs}\n                    name=\"internal_link\"\n                  ></Input>\n                </FormGroup>\n              </Col>\n              <Col md=\"4\">\n              <FormGroup>\n                \n                <Label>Published</Label>\n                <br></br>\n                <Input\n                  name=\"published\"\n                  value=\"1\"\n                  type=\"radio\"\n                  defaultChecked={categoryDetails && categoryDetails.published === 1 && true}\n                  onChange={handleInputs}\n                />\n                <Label> Yes </Label>\n                <Input\n                  name=\"published\"\n                  value=\"0\"\n                  type=\"radio\"\n                  defaultChecked={categoryDetails && categoryDetails.published === 0 && true}\n                  onChange={handleInputs}\n                />\n                <Label>No</Label>\n                \n              </FormGroup>\n              </Col>\n            </Row>\n          </ComponentCard>\n          <ComponentCard title=\"Page Meta Data\">\n            <Row>\n            <Col md=\"6\">\n              <FormGroup>\n                <Label>Page Title</Label>\n                <Input\n                  value={categoryDetails && categoryDetails.meta_title}\n                  type=\"text\"\n                  onChange={handleInputs}\n                  name=\"meta_title\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\">\n              <FormGroup>\n                <Label>Page Description</Label>\n                <Input\n                  value={categoryDetails && categoryDetails.meta_description}\n                  type=\"textarea\"\n                  onChange={handleInputs}\n                  name=\"meta_description\"\n                />\n              </FormGroup>\n            </Col>\n            </Row>\n            <Row>\n            <Col md=\"6\">\n              <FormGroup>\n                <Label>Page Keywords</Label>\n                <Input\n                  value={categoryDetails && categoryDetails.meta_keyword}\n                  type=\"textarea\"\n                  onChange={handleInputs}\n                  name=\"meta_keyword\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\">\n        <FormGroup>\n          <Label>SEO Title</Label>\n          <Input\n            value={categoryDetails && categoryDetails.seo_title}\n            type=\"text\"\n            onChange={handleInputs}\n            name=\"seo_title\"\n          />\n        </FormGroup>\n      </Col>\n            </Row>\n          </ComponentCard>\n          <Row></Row>\n        </FormGroup>\n      </Form>\n     \n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport '../form-editor/editor.scss';\nimport { ToastContainer } from 'react-toastify';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport message from '../../components/Message';\nimport api from '../../constants/api';\nimport CategoryButton from '../../components/CategoryTable/CategoryButton';\nimport CategoryDetailComp from '../../components/CategoryTable/CategoryDetailComp';\nimport creationdatetime from '../../constants/creationdatetime';\n\nconst CategoryEdit = () => {\n  //All state variables\n  const [categoryDetails, setCategoryDetails] = useState();\n  const [section, setSection] = useState();\n  const [valuelist, setValuelist] = useState();\n\n  //Navigation and Parameter Constants\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  // Button Save Apply Back List\n  const applyChanges = () => {};\n  const saveChanges = () => {\n    if (categoryDetails.category_title !== '') {\n      navigate('/Category');\n    }\n  };\n  const backToList = () => {\n    navigate('/Category');\n  };\n\n  //Api call for getting section dropdown\n  const getSection = () => {\n    api\n      .get('/category/getSectionTitle')\n      .then((res) => {\n        setSection(res.data.data);\n      })\n      .catch(() => {\n        message('Section not found', 'info');\n      });\n  };\n\n  //Api call for getting valuelist dropdown\n  const getValuelist = () => {\n    api\n      .get('/category/get-ValueList')\n      .then((res) => {\n        setValuelist(res.data.data);\n      })\n      .catch(() => {\n        message('valuelist not found', 'info');\n      });\n  };\n\n  const handleInputs = (e) => {\n    setCategoryDetails({ ...categoryDetails, [e.target.name]: e.target.value });\n  };\n\n  // Get Category By Id\n  const CategoryById = () => {\n    api\n      .post('/category/getCategoryById', { category_id: id })\n      .then((res) => {\n        setCategoryDetails(res.data.data[0]);\n      })\n      .catch(() => {\n        message('category Data Not Found', 'info');\n      });\n  };\n\n  //Logic for edit data in db\n  const editCategoryData = () => {\n    categoryDetails.modification_date = creationdatetime\n    if (categoryDetails.category_title !== '') {\n      api\n        .post('/category/edit-Category', categoryDetails)\n        .then(() => {\n          message('Record editted successfully', 'success');\n        })\n        .catch(() => {\n          message('Unable to edit record.', 'error');\n        });\n    } else {\n      message('Please fill all required fields', 'warning');\n    }\n  };\n\n  //For delete data in db\n  const deleteCategoryData = () => {\n    api\n      .post('/category/deleteCategory', { category_id: id })\n      .then(() => {\n        message('Record deteled successfully', 'success');\n      })\n      .catch(() => {\n        message('Unable to delete record.', 'error');\n      });\n  };\n\n  useEffect(() => {\n    CategoryById();\n    getSection();\n    getValuelist();\n  }, [id]);\n\n  return (\n    <>\n      <BreadCrumbs />\n      <ToastContainer></ToastContainer>\n\n      {/* Button */}\n      <CategoryButton\n        editCategoryData={editCategoryData}\n        navigate={navigate}\n        applyChanges={applyChanges}\n        saveChanges={saveChanges}\n        deleteCategoryData={deleteCategoryData}\n        backToList={backToList}\n        id={id}\n      ></CategoryButton>\n\n      {/* More details*/}\n      <CategoryDetailComp\n        categoryDetails={categoryDetails}\n        handleInputs={handleInputs}\n        section={section}\n        valuelist={valuelist}\n      ></CategoryDetailComp>\n    </>\n  );\n};\nexport default CategoryEdit;\n","import { Card, CardBody } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst pStyle = {\n  textAlign: 'right',\n  marginRight: '10px',\n};\nconst oStyle={\noutline:'none',\nborder:'none'\n};\n\nconst ComponentCardV2 = ({ children }) => {\n  return (\n    <Card className='shadow-none'>\n      <CardBody style={pStyle} >\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCardV2.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ComponentCardV2;\n","import moment from \"moment\"\n\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\nexport default creationdatetime \n"],"sourceRoot":""}