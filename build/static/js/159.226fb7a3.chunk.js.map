{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/MilestoneDetails.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","MilestoneDetails","useState","projectdetails","setProjectDetails","milestone_title","project_id","milestoneDetails","setMilestoneDetails","navigate","useNavigate","handleInputsmilestoneDetails","e","target","name","value","useEffect","api","get","then","res","data","console","log","catch","md","xs","onChange","map","color","onClick","post","insertedDataId","insertId","setTimeout"],"mappings":"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","file":"static/js/159.226fb7a3.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\nimport api from '../../constants/api';\nimport message from '../../components/Message';\n\nconst MilestoneDetails = () => {\n  //All state variables\n  const [projectdetails, setProjectDetails] = useState();\n  const [milestoneDetails, setMilestoneDetails] = useState({\n    milestone_title: '',\n    project_id:'',\n  });\n\n  //Navigation and Parameters\n  const navigate = useNavigate();\n\n  //Api call for getting project name dropdown\n  const getProjectname = () => {\n    api\n      .get('/projecttask/getProjectTitle')\n      .then((res) => {\n        setProjectDetails(res.data.data);\n        console.log(res.data.data[0]);\n      })\n      .catch(() => {\n        message('Company not found', 'info');\n      });\n  };\n  //Milestone data in milestoneDetails\n  const handleInputsmilestoneDetails = (e) => {\n    setMilestoneDetails({ ...milestoneDetails, [e.target.name]: e.target.value });\n  };\n  //Insert Milestone\n  const insertMilestone = () => {\n    if (milestoneDetails.milestone_title !== ''){\n      api\n        .post('/milestone/insertmilestone', milestoneDetails)\n        .then((res) => {\n          const insertedDataId = res.data.data.insertId;\n          console.log(insertedDataId);\n          message('Milestone inserted successfully.', 'success');\n          setTimeout(() => {\n            navigate(`/MilestoneEdit/${insertedDataId}`);\n          }, 300);\n        })\n        .catch(() => {\n          message('Network connection error.', 'error');\n        });\n      }else {\n      message('Please fill all required fields.', 'warning');\n    }\n  };\n  useEffect(() => {\n    getProjectname();\n  }, []);\n  return (\n    <div>\n      <BreadCrumbs />\n      <ToastContainer />\n      <Row>\n        <Col md=\"6\" xs=\"12\">\n          {/* Key Details */}\n          <ComponentCard title=\" Details\">\n            <Form>\n              <FormGroup>\n                <Row>\n                  \n                  <Col md=\"12\">\n                    <FormGroup>\n                      <Label>\n                        {' '}\n                        Title <span className=\"required\"> *</span>{' '}\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"milestone_title\"\n                        onChange={handleInputsmilestoneDetails}\n                      />\n                    </FormGroup>\n                  </Col>\n\n                  <Col md=\"12\">\n                    <FormGroup>\n                      <Label>Project Title</Label>\n                      <Input type=\"select\" name=\"project_id\" onChange={handleInputsmilestoneDetails}>\n                        <option>Select Project</option>\n                        {projectdetails &&\n                          projectdetails.map((e) => {\n                            return (\n                              <option key={e.project_id} value={e.project_id}>\n                                {e.title}\n                              </option>\n                            );\n                          })}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        insertMilestone();\n                      }}\n                      type=\"button\"\n                      className=\"btn mr-2 shadow-none\"\n                    >\n                      Save & Continue\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        navigate('/Milestone');\n                      }}\n                      type=\"button\"\n                      className=\"btn btn-dark shadow-none\"\n                    >\n                      Go to List\n                    </Button>\n                  </div>\n                </Row>\n              </FormGroup>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default MilestoneDetails;\n"],"sourceRoot":""}