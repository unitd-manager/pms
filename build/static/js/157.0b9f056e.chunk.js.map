{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/LeaveDetails.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","LeaveDetails","navigate","useNavigate","useState","employee","setEmployee","employee_id","from_date","to_date","leave_type","leaveInsertData","setLeaveInsertData","handleInputs","e","target","name","value","useEffect","api","get","then","res","data","md","onChange","map","ele","employee_name","moment","format","color","onClick","post","insertedDataId","insertId","console","log","setTimeout","catch"],"mappings":"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","file":"static/js/157.0b9f056e.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport moment from 'moment';\nimport message from '../../components/Message';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\nimport api from '../../constants/api';\n\nconst LeaveDetails = () => {\n//Navigation and parameters\nconst navigate = useNavigate();\n //All State Variable\n  const [employee, setEmployee] = useState();\n  const [leaveInsertData, setLeaveInsertData] = useState({\n    employee_id: '',\n    from_date: '',\n    to_date: '',\n    leave_type: '',\n  });\n//setting data in leaveInsertData\n  const handleInputs = (e) => {\n    setLeaveInsertData({ ...leaveInsertData, [e.target.name]: e.target.value });\n  };\n  //Api insertLeave\n  const insertLeave = () => {\n    if(leaveInsertData.employee_id !== ''\n    && leaveInsertData.from_date!== ''\n    && leaveInsertData.to_date !==''\n    && leaveInsertData.leave_type !==\"\"){\n    api\n      .post('/leave/insertLeave', leaveInsertData)\n      .then((res) => {\n        const insertedDataId = res.data.data.insertId;\n        console.log(insertedDataId);\n        message('Leave inserted successfully.', 'success');\n        setTimeout(() => {\n          navigate(`/LeavesEdit/${insertedDataId}`);\n        }, 300);\n      })\n      .catch(() => {\n        message('Network connection error.', 'error');\n      });\n    }else{\n      message('Please fill all required fields','warning')\n  }\n  };\n   // getEmployee dropDown\n   const getEmployee = () => {\n    api.get('/leave/getEmployee').then((res) => {\n      setEmployee(res.data.data);\n      });\n  };\n  useEffect(() => {\n    getEmployee();\n  }, []);\n\n  return (\n    <div>\n      <BreadCrumbs />\n      <ToastContainer></ToastContainer>\n      <Row>\n        <Col md=\"12\">\n          <ComponentCard title=\"Key Details\">\n            <Form>\n              <FormGroup>\n                <Row>\n                  <Col md=\"6\">\n                    <Label>employee_name<span className='required'> *</span></Label>\n                    <Input\n                      type=\"select\"\n                      name=\"employee_id\"\n                      onChange={handleInputs}\n                      value={leaveInsertData && leaveInsertData.employee_id}>\n                      <option value=\"selected\" >\n                        Please Select\n                      </option>\n                      {employee &&\n                        employee.map((ele) => {\n                          return <option key={ele.employee_id} value={ele.employee_id}>{ele.employee_name}</option>;\n                        })}\n                    </Input>\n                  </Col>\n              \n                  <Col md=\"6\">\n                    <Label>From date<span className='required'> *</span></Label>\n                    <Input\n                      type=\"date\"\n                      onChange={handleInputs}\n                      value={\n                        leaveInsertData && moment(leaveInsertData.from_date).format('YYYY-MM-DD')} \n                        name=\"from_date\"/>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <Col md=\"6\">\n                    <Label>To date <span className='required'> *</span></Label>\n                    <Input\n                      type=\"date\"\n                      onChange={handleInputs}\n                      value={\n                        leaveInsertData && moment(leaveInsertData.to_date).format('YYYY-MM-DD')\n                      }\n                      name=\"to_date\"\n                    />\n                  </Col>\n               \n                  <Col md=\"6\">\n                    <Label>Type of Leave <span className='required'> *</span></Label>\n                    <Input\n                      type=\"select\"\n                      onChange={handleInputs}\n                      value={leaveInsertData && leaveInsertData.leave_type}\n                      name=\"leave_type\">\n                      <option value=\"selected\">\n                        Please Select\n                      </option>\n                      <option value=\"Absent\">Absent</option>\n                      <option value=\"Annual Leave\">Annual Leave</option>\n                      <option value=\"Hospitalization Leave\">Hospitalization Leave</option>\n                      <option value=\"Sick Leave\">Sick Leave</option>\n                    </Input>\n                  </Col>\n                </Row>\n                </FormGroup>\n                <FormGroup>\n                <Row>\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n                    <Button color=\"primary\"\n                      onClick={() => {\n                        insertLeave();\n                      }}\n                      type=\"button\"\n                      className=\"btn mr-2 shadow-none\">Submit\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        navigate(-1);\n                      }}\n                      type=\"button\"\n                      className=\"btn btn-dark shadow-none\"\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </Row>\n              </FormGroup>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default LeaveDetails;\n"],"sourceRoot":""}