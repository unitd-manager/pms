{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","components/AccountTable/AccountsButton.js","components/AccountTable/AccountsMainEdit.js","views/EditData/AccountsEdit.js","components/ComponentCardV2.js","constants/creationdatetime.js","../node_modules/react-feather/dist/icons/trash-2.js","components/Tender/ViewNote.js","components/Tender/AddNote.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","AccountsButton","editAccountsData","backToList","navigate","useNavigate","ComponentCardV2","color","onClick","console","log","AccountsMainEdit","handleInputs","AccountsDetails","md","onChange","value","description","name","invoice_code","moment","invoice_date","format","payment_ref_no","payment_date","job_id","payment_status","defaultValue","remarks","AccountsEdit","useState","totalAmount","setTotalAmount","setAccountsDetails","id","useParams","handleRadioGst","radioVal","totalAmountF","gstValue","serviceCharge","parseFloat","e","target","editAccountsById","api","post","expense_id","then","res","data","total_amount","catch","useEffect","creationdatetime","applyChanges","deleteExpense","date","group_name","sub_group","check","amount","gst_amount","service_charge","defaultChecked","gst","min","disabled","AddNote","recordId","roomName","ViewNote","pStyle","textAlign","marginRight","oStyle","outline","border","style","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Trash2","forwardRef","_ref","ref","_ref$color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","projectTaskId","body","marginBottom","getNote","setGetNote","deleteNotes","commentId","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","comment_id","window","reload","record_id","room_name","project_task_id","marginTop","map","left","href","object","src","img1","alt","borderRadius","first_name","top","right","fontSize","comments","toString","img2","addNoteData","setAddNoteData","rows","cols","setTimeout"],"mappings":"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","file":"static/js/86.aafdd7e6.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React from 'react'\nimport { Row, Col, Form, FormGroup,Button } from 'reactstrap';\nimport PropTypes from 'prop-types'\nimport { useNavigate } from 'react-router-dom';\nimport ComponentCardV2 from '../ComponentCardV2';\n// import DeleteButton from '../DeleteButton';\n\n\nexport default function AccountsButton({editAccountsData,backToList}) {\n    AccountsButton.propTypes = {\n        editAccountsData: PropTypes.any,\n        backToList: PropTypes.func\n      }\n      const navigate = useNavigate();\n\n  return (\n    <Form>\n    <FormGroup>\n      <ComponentCardV2>\n        <Row>\n          <Col>\n            <Button className='shadow-none'\n              color=\"primary\"\n              onClick={() => {\n                editAccountsData();\n                navigate('/Accounts');\n              }}\n            >\n              Save\n            </Button>\n          </Col>\n          <Col>\n            <Button className='shadow-none'\n              color=\"primary\"\n              onClick={() => {\n                editAccountsData();\n                // applyChanges();\n                console.log('cancel process');\n              }}\n            >\n              Apply\n            </Button>\n          </Col>\n          <Col>\n            <Button className='shadow-none'\n              color=\"dark\"\n              onClick={() => {\n                backToList();\n                console.log('back to list');\n              }}\n            >\n              Back to List\n            </Button>\n          </Col>\n        </Row>\n      </ComponentCardV2>\n    </FormGroup>\n  </Form>\n  )\n}","import React from 'react'\nimport { Row, Col, FormGroup,Label,Input } from 'reactstrap';\nimport PropTypes from 'prop-types'\nimport moment from 'moment';\n\n\nexport default function AccountsMainEdit({handleInputs,AccountsDetails}) {\n  AccountsMainEdit.propTypes = {\n        handleInputs: PropTypes.func,\n        AccountsDetails: PropTypes.any\n      }\n  return (\n \n        <FormGroup>\n          \n            <Row>\n            <Col md=\"3\">\n                <FormGroup>\n                  <Label>Description </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={AccountsDetails && AccountsDetails.description}\n                    name=\"description\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Invoice No </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={AccountsDetails && AccountsDetails.invoice_code}\n                    name=\"invoice_code\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>invoice Date </Label>\n                  <Input\n                    type=\"date\"\n                    onChange={handleInputs}\n                    value={ AccountsDetails && moment(AccountsDetails.invoice_date).format('YYYY-MM-DD') }\n                    name=\"invoice_date\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Payment Ref No </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={AccountsDetails && AccountsDetails.payment_ref_no}\n                    name=\"payment_ref_no\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Payment Date </Label>\n                  <Input\n                    type=\"date\"\n                    onChange={handleInputs}\n                    value={\n                      AccountsDetails && moment(AccountsDetails.payment_date).format('YYYY-MM-DD')\n                    }\n                    name=\"payment_date\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Job Id </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={AccountsDetails && AccountsDetails.job_id}\n                    name=\"job_id\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Status</Label>\n                  <Input\n                    type=\"select\"\n                    onChange={handleInputs}\n                    name=\"payment_status\"\n                    value={AccountsDetails && AccountsDetails.payment_status}\n                  >\n                    <option defaultValue=\"selected\" value=\"New\">\n                      please Select\n                    </option>\n                    <option value=\"Due\">\n                      Due\n                    </option>\n                    <option value=\"Partial Payment\">\n                      Partial Payment\n                    </option>\n                    <option value=\"Paid\">\n                      Paid\n                    </option>\n                    <option value=\"On-hold\">\n                      On-hold\n                    </option>\n                    <option value=\"Cancelled\">\n                      Cancelled\n                    </option>\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Remarks </Label>\n                  <Input\n                    type=\"textarea\"\n                    onChange={handleInputs}\n                    value={AccountsDetails && AccountsDetails.remarks}\n                    name=\"remarks\"\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n        \n        </FormGroup>\n   \n  )\n}   ","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { ToastContainer } from 'react-toastify';\nimport moment from 'moment';\nimport ComponentCard from '../../components/ComponentCard';\nimport AccountsButton from '../../components/AccountTable/AccountsButton';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport message from '../../components/Message';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport '../form-editor/editor.scss';\nimport api from '../../constants/api';\nimport AccountsMainEdit from '../../components/AccountTable/AccountsMainEdit';\nimport AddNote from '../../components/Tender/AddNote';\nimport ViewNote from '../../components/Tender/ViewNote';\nimport creationdatetime from '../../constants/creationdatetime';\n\nconst AccountsEdit = () => {\n  //Const Variables\n  const [totalAmount, setTotalAmount] = useState('');\n  const [AccountsDetails, setAccountsDetails] = useState();\n  // Navigation and Parameter Constants\n  const { id } = useParams();\n  const navigate = useNavigate();\n // Button\n  const applyChanges = () => {};\n  const backToList = () => {\n    navigate('/Accounts');\n  };\n  // calculation connect with radio button\n  const handleRadioGst = (radioVal, totalAmountF, gstValue, serviceCharge) => {\n    /* eslint-disable */\n    if (serviceCharge == '') {\n      serviceCharge = 0;\n    }\n    if (totalAmountF == '') {\n      totalAmountF = 0;\n    }\n    if (gstValue == '') {\n      gstValue = 0;\n    }\n    if (radioVal === '1') {\n      setTotalAmount(\n        parseFloat(totalAmountF) +\n          (parseFloat(gstValue) / 100) * parseFloat(totalAmountF) +\n          parseFloat(serviceCharge),\n      );\n    } else {\n      setTotalAmount(parseFloat(totalAmountF));\n    }\n  };\n  //All Functions/Methods\n  /* eslint-disable */\n  const handleInputs = (e) => {\n    setAccountsDetails({ ...AccountsDetails, [e.target.name]: e.target.value });\n  };\n // Get Accounts By Id\n  const editAccountsById = () => {\n    api\n      .post('/accounts/getAccountsById', { expense_id: id })\n      .then((res) => {\n        setAccountsDetails(res.data.data[0]);\n        setTotalAmount(res.data.data[0].total_amount)\n\n      })\n      .catch(() => {\n        message('Accounts Data Not Found', 'info');\n      });\n  };\n // Edit Accounts Data\n  const editAccountsData = () => {\n    AccountsDetails.total_amount = totalAmount\n    // AccountsDetails.date = moment()\n    AccountsDetails.modification_date = creationdatetime\n    \n    api\n      .post('/accounts/editAccounts', AccountsDetails)\n      .then(() => {\n        message('Record editted successfully', 'success');\n        editAccountsById()\n      })\n      .catch(() => {\n        message('Unable to edit record.', 'error');\n      });\n  };\n  // Delete Expense\n  const deleteExpense = () => {\n    api\n      .post('/accounts/deleteExpense', { expense_id: id })\n      .then(() => {\n        message('Record editted successfully', 'success');\n      })\n      .catch(() => {\n        message('Unable to edit record.', 'error');\n      });\n  };\n  useEffect(() => {\n    editAccountsById();\n  }, [id]);\n  return (\n    <>\n     <BreadCrumbs heading={AccountsDetails && AccountsDetails.expense_id} />\n      {/* Button */}\n      <AccountsButton\n        id={id} editAccountsData={editAccountsData}navigate={navigate}applyChanges={applyChanges}deleteExpense={deleteExpense}backToList={backToList}></AccountsButton>\n      {/* Main Details */}\n     \n      <ToastContainer></ToastContainer>\n      <Form>\n        <FormGroup>\n        <ComponentCard\n            title=\"Account Details\"\n            creationModificationDate={AccountsDetails}\n          \n          > \n           \n            <Row>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>\n                    Date <span className=\"required\"> *</span>\n                  </Label>\n                  <Input\n                    type=\"date\"\n                    onChange={handleInputs}\n                    value={AccountsDetails && moment(AccountsDetails.date,'YYYY-MM-DD').format('YYYY-MM-DD')}\n                    name=\"date\"/>\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Head</Label>\n                  <br />\n                  <span>{AccountsDetails && AccountsDetails.group_name}</span>\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label> Sub Head</Label>\n                  <br />\n                  <span>{AccountsDetails && AccountsDetails.sub_group}</span>\n                </FormGroup>\n              </Col>\n              {/* Radio button */}\n              <Col md=\"3\">\n                <Label>GST</Label>\n                <FormGroup check>\n                  <Input\n                    name=\"gst\"\n                    value=\"1\"\n                    onChange={(e) => {\n                      handleInputs(e); handleRadioGst(\n                        e.target.value,\n                        AccountsDetails.amount,\n                        AccountsDetails.gst_amount,\n                        AccountsDetails.service_charge,);}}\n                    defaultChecked={AccountsDetails && AccountsDetails.gst === 1 && true}\n                    type=\"radio\"/>\n                  <Label check>Yes</Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Input\n                    name=\"gst\"\n                    value=\"0\"\n                    onChange={(e) => {\n                      handleInputs(e);\n                      handleRadioGst(\n                        e.target.value,\n                        AccountsDetails.amount,\n                        AccountsDetails.gst_amount,\n                        AccountsDetails.service_charge,);}}\n                    defaultChecked={AccountsDetails && AccountsDetails.gst === 0 && true}\n                    type=\"radio\"/>{' '}\n                  <Label check> No </Label>\n                </FormGroup>\n              </Col>\n              </Row>\n              <Row>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Amount before GST</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={(e) => {\n                      handleInputs(e);\n                      handleRadioGst(\n                        AccountsDetails.gst,\n                        e.target.value,\n                        AccountsDetails.gst_amount,\n                        AccountsDetails.service_charge,);}}\n                    name=\"amount\"\n                    value={AccountsDetails && AccountsDetails.amount}/>\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>GST Amount </Label>\n                  <Input\n                    type=\"number\"\n                    onChange={(e) => {\n                      handleInputs(e);\n                      handleRadioGst(\n                        AccountsDetails.gst,\n                        AccountsDetails.amount,\n                        e.target.value,\n                        AccountsDetails.service_charge,);}}\n                    name=\"gst_amount\"\n                    value={AccountsDetails && AccountsDetails.gst_amount}/>\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Service Charges</Label>\n                  <Input\n                    type=\"number\"\n                    min={0}\n                    onChange={(e) => {\n                      handleInputs(e);\n                      handleRadioGst(\n                        AccountsDetails.gst,\n                        AccountsDetails.amount,\n                        AccountsDetails.gst_amount,\n                        e.target.value,);}}\n                    value={AccountsDetails && AccountsDetails.service_charge}\n                    name=\"service_charge\"/>\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Total Amount </Label>\n                  <Input\n                  disabled\n                    type=\"text\"\n                    onChange={(e) => {\n                      handleInputs(e);\n                    }}\n                    value={totalAmount}\n                    name=\"total_amount\"/>\n                </FormGroup>\n              </Col>\n              </Row>\n              <Row>\n              <AccountsMainEdit handleInputs={handleInputs} AccountsDetails={AccountsDetails}></AccountsMainEdit>\n            </Row>\n          </ComponentCard>\n        </FormGroup>\n      </Form>\n    \n      {/* ADD NOTE */}\n\n      <ComponentCard title=\"Add a note\">\n        <AddNote recordId={id} roomName=\"AccountEdit\" />\n        <ViewNote recordId={id} roomName=\"AccountEdit\" />\n      </ComponentCard>\n    </>\n  );\n};\nexport default AccountsEdit;\n","import { Card, CardBody } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst pStyle = {\n  textAlign: 'right',\n  marginRight: '10px',\n};\nconst oStyle={\noutline:'none',\nborder:'none'\n};\n\nconst ComponentCardV2 = ({ children }) => {\n  return (\n    <Card className='shadow-none'>\n      <CardBody style={pStyle} >\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCardV2.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ComponentCardV2;\n","import moment from \"moment\"\n\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\nexport default creationdatetime \n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;","import React, { useEffect, useState } from 'react';\nimport { Row, Media } from 'reactstrap';\nimport Swal from 'sweetalert2';\nimport * as Icon from 'react-feather';\nimport PropTypes from 'prop-types';\nimport img1 from '../../assets/images/users/user1.jpg';\nimport img2 from '../../assets/images/users/user2.jpg';\nimport message from '../Message';\nimport api from '../../constants/api';\n\nfunction ViewNote({ roomName, recordId, projectTaskId }) {\n  ViewNote.propTypes = {\n    roomName: PropTypes.string,\n    recordId: PropTypes.string,\n    projectTaskId: PropTypes.string,\n  };\n  const body = {\n    width: '100%',\n    marginBottom: '10px',\n  };\n\n\n  console.log(\"projectTaskId\", projectTaskId)\n  const [getNote, setGetNote] = useState(null);\n\n  const getNotes = () => {\n    api\n      .post('/note/getNotes', {\n        record_id: recordId,\n        room_name: roomName,\n        project_task_id :projectTaskId\n      })\n      .then((res) => {\n        setGetNote(res.data.data);\n      });\n  };\n\n  const deleteNotes = (commentId) => {\n    // console.log(commentId);\n\n    Swal.fire({\n      title: `Are you sure?`,\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        api\n          .post('/note/deleteNotes', { comment_id: commentId })\n          .then((res) => {\n            console.log(res);\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\n            window.location.reload();\n          })\n          .catch(() => {\n            message('Unable to Delete Media', 'info');\n          });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getNotes();\n  }, [recordId]);\n\n  return (\n    <>\n  \n<Row style={{ marginTop: 20 }}>\n  {getNote &&\n    getNote.map((e, i) => {\n      if (projectTaskId === e.project_task_id) {\n        return (\n          <>\n            {i % 2 === 0 ? (\n              <Media className=\"d-flex\" key={e.comment_id.toString()}>\n                <Media left href=\"#\">\n                  <Media\n                    object\n                    src={img1}\n                    alt=\"Generic placeholder image\"\n                    width=\"40\"\n                    style={{ borderRadius: 50 }}\n                  />\n                </Media>\n    \n                <Media body className=\"ms-3\" style={body}>\n                  <Media heading>\n                    <div style={{ position: 'relative' }}>\n                      {e.first_name}\n                      <p style={{ position: 'absolute', top: 0, right: 0, fontSize: 12 }}>\n                        {e.creation_date}\n                        <button\n                          type=\"button\"\n                          className=\"btn\"\n                          onClick={() => {\n                            deleteNotes(e.comment_id);\n                          }}\n                        >\n                          <Icon.Trash2 style={{ width: 20 }} />{' '}\n                        </button>\n                      </p>\n                    </div>\n                  </Media>\n                  {e.comments}\n                </Media>\n              </Media>\n            ) : (\n              <Media className=\"ms-3\" key={e.comment_id.toString()}>\n                <Media className=\"d-flex my-4\">\n                  <Media left href=\"#\">\n                    <Media\n                      object\n                      src={img2}\n                      alt=\"Generic placeholder image\"\n                      width=\"40\"\n                      style={{ borderRadius: 50 }}\n                    />\n                  </Media>\n                  <Media body className=\"ms-3\" style={{ width: '100%' }}>\n                    <Media heading>\n                      <div style={{ position: 'relative' }}>\n                        {e.first_name}\n                        <p\n                          style={{\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                            fontSize: 12,\n                          }}\n                        >\n                          {e.creation_date}\n                          <button\n                            type=\"button\"\n                            className=\"btn\"\n                            onClick={() => {\n                              deleteNotes(e.comment_id);\n                            }}\n                          >\n                            <Icon.Trash2 style={{ width: 20 }} />{' '}\n                          </button>\n                        </p>\n                      </div>\n                    </Media>\n                    {e.comments}\n                  </Media>\n                </Media>\n              </Media>\n            )}\n          </>\n        );\n      } \n        return null;\n  \n    })}\n</Row>\n\n    </>\n  );\n}\n\nexport default ViewNote;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\nimport moment from 'moment';\nimport message from '../Message';\nimport api from '../../constants/api';\n\nfunction AddNote({ recordId,roomName }) {\n  AddNote.propTypes = {\n    recordId: PropTypes.string,\n    roomName:PropTypes.string\n  };\n\n  const [addNoteData, setAddNoteData] = useState({\n    comments: '',\n    room_name:roomName,\n    record_id: recordId,\n    creation_date: moment().format('DD-MM-YYYY'),\n  });\n\n  const handleData = (e) => {\n    setAddNoteData({ ...addNoteData, [e.target.name]: e.target.value });\n  };\n\n  const SubmitNote = () => {\n    //setAddNoteData(console.log(addNoteData))\n    api.post('/note/addNote', addNoteData).then(() => {\n      message('Add Note Successfully', 'success');\n      setTimeout(() => {\n        window.location.reload();\n      }, 400);\n    });\n  };\n\n  return (\n    <>\n        <Row>\n          <textarea id=\"note\" name=\"comments\" rows=\"4\" cols=\"50\" onChange={handleData} />\n        </Row>\n        <Row className=\"mb-2\"></Row>\n        <Row className=\"mb-1\">\n          <Col md=\"1\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary btn-sm shadow-none\"\n              onClick={SubmitNote}\n            >\n              Submit\n            </button>\n          </Col>\n          <Col md=\"1\">\n            <button type=\"button\" className=\"btn btn-dark btn-sm shadow-none\">\n              Cancel\n            </button>\n          </Col>\n        </Row>\n    </>\n  );\n}\n\nexport default AddNote;\n"],"sourceRoot":""}