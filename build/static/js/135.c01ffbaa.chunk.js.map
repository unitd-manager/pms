{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/ContentDetails.js","constants/creationdatetime.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","ContentDetails","useState","content","setContent","navigate","useNavigate","moment","content_date","content_type","contentDetails","setContentDetails","useEffect","api","get","then","res","data","console","log","md","onChange","e","target","name","value","color","onClick","creationdatetime","post","insertedDataId","insertId","setTimeout","catch","format"],"mappings":"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","file":"static/js/135.c01ffbaa.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button\n} from 'reactstrap';\nimport { useNavigate} from 'react-router-dom';\nimport moment from 'moment';\nimport { ToastContainer } from 'react-toastify';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs'\nimport ComponentCard from '../../components/ComponentCard';\nimport message from '../../components/Message';\nimport api from '../../constants/api';\nimport creationdatetime from '../../constants/creationdatetime';\n\nconst ContentDetails = () => {\n  //All const variables\n  const [content, setContent] = useState();\n  const navigate = useNavigate()\n  const [contentDetails, setContentDetails] = useState({\n    title: \"\",\n    creation_date:moment(),\n    content_date:moment(),\n    content_type:''\n  });\n  //setting data in contentDetails\n  const handleInputs = (e) => {\n    setContentDetails({ ...contentDetails, [e.target.name]: e.target.value });\n  }\n  //getting data from content\n  const getContent = () => {\n    api.get('/content/getContent')\n      .then((res) => {\n        setContent(res.data.data)\n        console.log(content)\n      })\n  }\n  //Insert Content Data\n  const insertContentData = () => {  \n    if (contentDetails.title !== ''){\n      contentDetails.creation_date = creationdatetime\n    api.post('/content/insertContent', contentDetails)\n    .then((res) => {\n      const insertedDataId= res.data.data.insertId\n      message('Content inserted successfully.','success')\n      setTimeout(()=> {\n        navigate(`/ContentEdit/${insertedDataId}`)\n      },300);     \n    })\n    .catch(() => {\n      message('Network connection error.', 'error');\n    });\n  }else {\n  message('Please fill all required fields.', 'error');\n}\n};\n  useEffect(() => {\n    getContent();\n  }, [])\n\n  return (\n    <div>\n      <BreadCrumbs />\n      <ToastContainer></ToastContainer>\n      <Row>\n        <Col md=\"6\">\n          <ComponentCard title=\"Key Details\">\n            <Form>\n              <FormGroup>\n                <Row>\n                <Col md=\"12\">\n                    <Label>Title</Label>\n                    <Input type=\"text\"\n                      onChange={handleInputs}\n                      value={contentDetails && (contentDetails.title)}\n                      name=\"title\" />\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n                  <Button className='shadow-none'\n                    color=\"primary\"\n                    onClick={() => {\n                      insertContentData();\n                    }}>\n                    Save\n                  </Button>\n                  <Button \n                      onClick={() => {\n                        navigate(-1);\n                      }}\n                      type=\"button\"\n                      className=\"btn btn-dark shadow-none\"\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </Row>\n              </FormGroup>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </div>\n  );\n}\nexport default ContentDetails","import moment from \"moment\"\n\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\nexport default creationdatetime \n"],"sourceRoot":""}