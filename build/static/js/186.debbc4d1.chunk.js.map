{"version":3,"sources":["views/cubosale/AddProjects.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js"],"names":["AddProjects","useState","projectname","setProjectName","md","title","htmlFor","type","name","id","onInput","e","target","value","onClick","api","post","then","res","data","status","alert","Swal","fire","text","icon","window","location","reload","catch","err","console","log","color","BreadCrumbs","prop","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"uMAgFeA,UA/DK,WAEhB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAkCF,OACE,gCACE,cAAC,IAAD,IACA,cAAC,KAAD,UACE,cAAC,IAAD,CAAKC,GAAG,KAAR,SACE,cAAC,UAAD,CAAeC,MAAM,eAArB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,QAAQ,iBAAf,0BACA,cAAC,IAAD,CACEC,KAAK,QACLC,KAAK,QACLC,GAAG,iBACHC,QAAS,SAAAC,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,aAK1C,cAAC,IAAD,CAAQC,QAAS,WAlDN,KAAhBZ,EACDa,IACCC,KAAK,kBAAkB,CACtBX,MAAMH,IAEPe,MAAK,SAACC,GAEFA,GAA2B,QAApBA,EAAIC,KAAKC,OACjBC,MAAM,wBAENC,IAAKC,KAAK,CACRlB,MAAO,UACPmB,KAAM,iBACNC,KAAM,YAEPC,OAAOC,SAASC,aAKpBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGdR,IAAKC,KAAK,CACRlB,MAAO,QACPmB,KAAM,4BACNC,KAAM,aAuBmCQ,MAAM,UAA3C,kC,iCCvEd,mCAwBeC,IApBK,SAACC,GACnB,IAAMR,EAAWS,cACXC,EAAWV,EAASW,SAASC,MAAM,KAAK,GACxCC,EAAYb,EAASW,SAASC,MAAM,KAAK,GAE/C,OACE,qCAEE,6BAAKJ,EAAKM,UACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,GAAG,IAAIC,IAAKC,IAAMC,UAAU,uBAA5C,kBAGCR,EAAW,cAAC,IAAD,CAAgBS,QAAM,EAAtB,SAAwBT,IAA6B,GAChEG,EAAY,cAAC,IAAD,CAAgBM,QAAM,EAAtB,SAAwBN,IAA8B,W,kECd5D,SAASO,EAAT,GAA0D,IAAD,IAAzBC,eAAyB,MAAf,KAAe,EAAT3C,EAAS,EAATA,MAK7D,OACE,mCACE,cAAC,IAAD,CAAWsC,IAAI,KAAKE,UAAU,+BAA9B,SACE,eAAC,KAAD,WACE,cAAC,IAAD,UAAMxC,IACL2C,GACC,eAAC,IAAD,WACE,cAAC,KAAD,UACE,wDAA2BA,GAAWA,EAAQC,uBAEhD,cAAC,KAAD,CAAKJ,UAAU,SAAf,SACE,oDAAuBG,GAAWA,EAAQE,6BCI3CC,UApBO,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAU/C,EAA+C,EAA/CA,MAAOgD,EAAwC,EAAxCA,SAASC,EAA+B,EAA/BA,yBACjD,OACE,eAAC,IAAD,CAAMT,UAAU,cAAhB,UACE,cAACE,EAAD,CAAsBC,QAASM,EAA0BjD,MAAOA,IAEhE,eAAC,IAAD,CAAUwC,UAAU,MAApB,UACE,cAAC,IAAD,CAAcA,UAAU,kBAAxB,SAA2CQ,GAAY,KACvD,8BAAMD","file":"static/js/186.debbc4d1.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nimport {\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from 'reactstrap';\nimport Swal from 'sweetalert2'\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\nimport api from '../../constants/api';\n\n\nconst AddProjects = () => {\n\n    const [projectname, setProjectName] = useState('')\n    const addProject = () =>{\n      if(projectname !== ''){\n        api\n        .post('/api/addProject',{\n          title:projectname\n        })\n        .then((res) => {\n          \n          if(res && res.data.status === '400'){\n            alert('Cannot add project.')\n          }else{\n            Swal.fire({\n              title: 'Success',\n              text: 'Project Added!',\n              icon: 'success'\n            })\n             window.location.reload()\n          }\n          //navigate('/dashboards/classic');\n          // setLoginData(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      }else{\n        Swal.fire({\n          title: 'Error',\n          text: 'Project name is required!',\n          icon: 'warning'\n        })\n      }\n     \n    }\n  return (\n    <div>\n      <BreadCrumbs />\n      <Row>\n        <Col md=\"12\">\n          <ComponentCard title=\"Add Projects\">\n            <Form>\n              <FormGroup>\n                <Label htmlFor=\"exampleEmail12\">Project Name</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"exampleEmail12\"\n                  onInput={e => setProjectName(e.target.value)}\n                />\n                \n              </FormGroup>\n             \n              <Button onClick={()=>{addProject()}} color=\"primary\">Submit</Button>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default AddProjects;\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n"],"sourceRoot":""}