{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/SupportDetails.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","SupportDetails","currentDate","moment","format","useState","support_id","date","value","record_type","supportDetails","setSupportDetails","section","setSection","navigate","useNavigate","useEffect","api","get","then","res","data","catch","md","xs","onChange","e","valueArray","target","section_id","parseInt","name","defaultValue","map","ele","section_title","color","onClick","post","insertedDataId","insertId","setTimeout","window","confirm","preventDefault"],"mappings":"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","file":"static/js/168.76d1d081.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { useNavigate } from 'react-router-dom';\nimport moment from 'moment';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\nimport message from '../../components/Message';\nimport api from '../../constants/api';\n\nconst SupportDetails = () => {\n  const currentDate = moment().format('YYYY-MM-DD');\n\n  //All state variables\n  const [supportDetails, setSupportDetails] = useState({\n    support_id: '',\n    title: '',\n    date: currentDate,\n    value: 'new',\n    record_type: 'Change Request',\n    creation_date: moment(),\n  });\n\n  const [section, setSection] = useState();\n\n  //Navigation and parameters\n  const navigate = useNavigate();\n\n  // Api call for  getting Module  Name\n  const getModuleName = () => {\n    api\n      .get('/support/getSection')\n      .then((res) => {\n        setSection(res.data.data);\n      })\n      .catch(() => {\n        message('Support Data Not Found', 'info');\n      });\n  };\n  //support data in supportDetails\n  const handleInputs = (e) => {\n    const valueArray = e.target.value.split(',');\n    /*eslint-disable */\n    supportDetails.title = valueArray[0];\n    supportDetails.section_id = parseInt(valueArray[1])\n    setSupportDetails(supportDetails);\n  };\n  //Insert support\n  const insertSupportData = () => {\n\n     if(supportDetails.section_id){\n    api\n      .post('/support/insertSupport', supportDetails)\n      .then((res) => {\n        const insertedDataId = res.data.data.insertId;\n        message('Support inserted successfully.', 'success');\n        setTimeout(() => {\n          navigate(`/SupportEdit/${insertedDataId}`);\n        }, 300);\n      })\n      .catch(() => {\n        message('Unable to edit record.', 'error');\n      });\n    }else{\n      message('Please select module.', 'error');\n    }\n  };\n  useEffect(() => {\n    getModuleName();\n  }, []);\n\n  return (\n    <div>\n      <BreadCrumbs />\n      <Row>\n        <Col md=\"6\" xs=\"12\">\n          <ComponentCard title=\"Key Details\">\n            <Form>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Label>Module Name <span className='required'> *</span></Label>\n                    <Input type=\"select\" onChange={handleInputs} name=\"section_id\">\n                      <option defaultValue=\"selected\">Please Select</option>\n                      {section &&\n                        section.map((ele) => {\n                          return (\n                            <option key={ele.section_id} value={`${ele.section_title},${ele.section_id}`}>\n                              {ele.section_title}\n                            </option>\n                          );\n                        })}\n                    </Input>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <div className=\"mt-3 d-flex align-items-center gap-2\">\n                    <Button\n                      className=\"shadow-none\"\n                      color=\"primary\"\n                      onClick={() => {\n                        insertSupportData();\n                        // navigate('/SupportEdit');\n                      }}\n                    >\n                      Save & Continue\n                    </Button>\n\n                    <Button\n                    type=\"submit\"\n                    className=\"btn btn-dark shadow-none\"\n                    onClick={(e) => {\n                      if (window.confirm('Are you sure you want to cancel? ')) {\n                        navigate('/Support');\n                      } else {\n                        e.preventDefault();\n                      }\n                    }}\n                  >\n                    Cancel\n                  </Button>\n\n                  </div>\n                </Row>\n              </FormGroup>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default SupportDetails;\n"],"sourceRoot":""}