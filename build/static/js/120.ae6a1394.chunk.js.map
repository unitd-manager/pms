{"version":3,"sources":["components/Message.js","components/CreationModification.js","components/ComponentCard.js","../node_modules/webpack/buildin/module.js","../node_modules/draftjs-to-html/lib/draftjs-to-html.js","components/FinanceTable/InvoiceData.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","tag","className","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","module","exports","webpackPolyfill","deprecate","paths","Object","defineProperty","enumerable","get","l","i","forEach","obj","callback","key","hasOwnProperty","call","isEmptyString","str","length","trim","blockTypesMapping","unstyled","blockquote","code","getBlockTag","getBlockStyle","data","styles","value","concat","getHashtagRanges","blockText","hashtagConfig","sections","counter","startIndex","text","trigger","separator","substr","indexOf","endIndex","hashtag","push","offset","getSections","block","lastOffset","sectionRanges","entityRanges","map","range","sort","s1","s2","r","start","end","entityKey","isAtomicEntityBlock","getStyleArrayForBlock","inlineStyleRanges","inlineStyles","BOLD","Array","ITALIC","UNDERLINE","STRIKETHROUGH","CODE","SUPERSCRIPT","SUBSCRIPT","COLOR","BGCOLOR","FONTSIZE","FONTFAMILY","style","substring","getStylesAtOffset","sameStyleAsPrevious","index","sameStyled","addInlineStyleMarkup","content","getSectionText","ch","join","addStylePropertyMarkup","styleString","test","getEntityMarkup","entityMap","customEntityTransform","entity","html","url","targetOption","alignment","src","alt","height","width","getInlineStyleSections","styleSections","from","section","trimLeadingZeros","sectionText","replacedText","replace","trimTrailingZeros","getStyleTagSectionMarkup","styleSection","getInlineStyleSectionMarkup","styleTagSections","styleSectionText","stylePropertySection","getSectionMarkup","entityInlineMarkup","getBlockInnerMarkup","blockMarkup","getBlockMarkup","directional","blockHtml","blockTag","blockStyle","isList","blockType","getListMarkup","listBlocks","previousBlock","listHtml","nestedListBlock","nestedBlock","depth","draftToHtml","editorContent","blocks","factory","InvoiceData","editInvoiceData","setEditInvoiceData","projectInfo","id","useParams","useState","totalAmount","setTotalAmount","paymentTerms","setPaymentTerms","discount","quote_code","po_number","project_location","project_reference","invoice_date","so_ref_no","site_code","attention","reference","invoice_terms","status","invoice_code","order_id","invoice_due_date","createInvoice","setCreateInvoice","random","int","unit","qty","unit_price","total_cost","remarks","item_title","description","addLineItem","setAddLineItem","handleInserts","e","target","name","finalinsertapi","receipt","results","j","invoice_id","amount","item_code","cost_price","parseFloat","api","post","then","catch","insertInvoice","invoice_amount","now","Date","getMonth","current","getFullYear","getDate","res","insertId","setTimeout","window","location","reload","getAllValues","result","$","each","allValues","this","find","fieldName","attr","val","size","isOpen","color","onClick","md","getTime","toString","uom","unitprice","item","onChange","editorState","wrapperClassName","editorClassName","onEditorStateChange","convertToRaw","getCurrentContent","handleDataEditor","scope","defaultValue","onBlur","totalValue","calculateTotal","disabled","to","ind","filter","finalTotal","ClearValue"],"mappings":"kHAAA,oBAqDeA,IAlDC,SAACC,EAAIC,GACjB,MAAY,YAATA,EACOC,IAAMC,QAAQH,EAAK,CACrBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,UAATX,EACMC,IAAMW,MAAMb,EAAK,CACnBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,SAATX,EACKC,IAAMY,KAAKd,EAAK,CAClBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAEK,YAATX,EACMC,IAAMa,QAAQf,EAAK,CACrBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAGRV,YAAMF,K,kEC7CV,SAASgB,EAAT,GAA0D,IAAD,IAAzBC,eAAyB,MAAf,KAAe,EAATC,EAAS,EAATA,MAK7D,OACE,mCACE,cAAC,IAAD,CAAWC,IAAI,KAAKC,UAAU,+BAA9B,SACE,eAAC,KAAD,WACE,cAAC,IAAD,UAAMF,IACLD,GACC,eAAC,IAAD,WACE,cAAC,KAAD,UACE,wDAA2BA,GAAWA,EAAQI,uBAEhD,cAAC,KAAD,CAAKD,UAAU,SAAf,SACE,oDAAuBH,GAAWA,EAAQK,6BCI3CC,UApBO,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAUN,EAA+C,EAA/CA,MAAOO,EAAwC,EAAxCA,SAASC,EAA+B,EAA/BA,yBACjD,OACE,eAAC,IAAD,CAAMN,UAAU,cAAhB,UACE,cAACJ,EAAD,CAAsBC,QAASS,EAA0BR,MAAOA,IAEhE,eAAC,IAAD,CAAUE,UAAU,MAApB,UACE,cAAC,IAAD,CAAcA,UAAU,kBAAxB,SAA2CK,GAAY,KACvD,8BAAMD,Y,kBCXdG,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOH,WAAUG,EAAOH,SAAW,IACxCQ,OAAOC,eAAeN,EAAQ,SAAU,CACvCO,YAAY,EACZC,IAAK,WACJ,OAAOR,EAAOS,KAGhBJ,OAAOC,eAAeN,EAAQ,KAAM,CACnCO,YAAY,EACZC,IAAK,WACJ,OAAOR,EAAOU,KAGhBV,EAAOE,gBAAkB,GAEnBF,I,oBCnByDA,EAAOC,QAG/D,WAAc,aAKrB,SAASU,EAAQC,EAAKC,GACpB,GAAID,EACF,IAAK,IAAIE,KAAOF,GAEV,IAAGG,eAAeC,KAAKJ,EAAKE,IAC9BD,EAASC,EAAKF,EAAIE,IAS1B,SAASG,EAAcC,GACrB,YAAYlC,IAARkC,GAA6B,OAARA,GAA+B,IAAfA,EAAIC,QAAsC,IAAtBD,EAAIE,OAAOD,OAW1E,IAAIE,EAAoB,CACtBC,SAAU,IACV,aAAc,KACd,aAAc,KACd,eAAgB,KAChB,cAAe,KACf,cAAe,KACf,aAAc,KACd,sBAAuB,KACvB,oBAAqB,KACrBC,WAAY,aACZC,KAAM,OAMR,SAASC,EAAYnD,GACnB,OAAOA,GAAQ+C,EAAkB/C,GAMnC,SAASoD,EAAcC,GACrB,IAAIC,EAAS,GAMb,OALAjB,EAAQgB,GAAM,SAAUb,EAAKe,GACvBA,IACFD,GAAU,GAAGE,OAAOhB,EAAK,KAAKgB,OAAOD,EAAO,SAGzCD,EAOT,SAASG,EAAiBC,EAAWC,GACnC,IAAIC,EAAW,GAEf,GAAID,EAOF,IANA,IAAIE,EAAU,EACVC,EAAa,EACbC,EAAOL,EACPM,EAAUL,EAAcK,SAAW,IACnCC,EAAYN,EAAcM,WAAa,IAEpCF,EAAKlB,OAAS,GAAKiB,GAAc,GActC,GAbIC,EAAK,KAAOC,GACdF,EAAa,EACbD,EAAU,EACVE,EAAOA,EAAKG,OAAOF,EAAQnB,UAE3BiB,EAAaC,EAAKI,QAAQF,EAAYD,KAEpB,IAChBD,EAAOA,EAAKG,OAAOJ,GAAcG,EAAYD,GAASnB,QACtDgB,GAAWC,EAAaG,EAAUpB,QAIlCiB,GAAc,EAAG,CACnB,IAAIM,EAAWL,EAAKI,QAAQF,IAAc,EAAIF,EAAKI,QAAQF,GAAaF,EAAKlB,OACzEwB,EAAUN,EAAKG,OAAO,EAAGE,GAEzBC,GAAWA,EAAQxB,OAAS,GAC9Be,EAASU,KAAK,CACZC,OAAQV,EACRhB,OAAQwB,EAAQxB,OAASmB,EAAQnB,OACjC7C,KAAM,YAIV6D,GAAWG,EAAQnB,OAKzB,OAAOe,EAQT,SAASY,EAAYC,EAAOd,GAC1B,IAAIC,EAAW,GACXc,EAAa,EACbC,EAAgBF,EAAMG,aAAaC,KAAI,SAAUC,GAInD,MAAO,CACLP,OAJWO,EAAMP,OAKjB1B,OAJWiC,EAAMjC,OAKjBL,IAJQsC,EAAMtC,IAKdxC,KAAM,aA+BV,OA3BA2E,GADAA,EAAgBA,EAAcnB,OAAOC,EAAiBgB,EAAMV,KAAMJ,KACpCoB,MAAK,SAAUC,EAAIC,GAC/C,OAAOD,EAAGT,OAASU,EAAGV,WAEVlC,SAAQ,SAAU6C,GAC1BA,EAAEX,OAASG,GACbd,EAASU,KAAK,CACZa,MAAOT,EACPU,IAAKF,EAAEX,SAIXX,EAASU,KAAK,CACZa,MAAOD,EAAEX,OACTa,IAAKF,EAAEX,OAASW,EAAErC,OAClBwC,UAAWH,EAAE1C,IACbxC,KAAMkF,EAAElF,OAEV0E,EAAaQ,EAAEX,OAASW,EAAErC,UAGxB6B,EAAaD,EAAMV,KAAKlB,QAC1Be,EAASU,KAAK,CACZa,MAAOT,EACPU,IAAKX,EAAMV,KAAKlB,SAIbe,EAOT,SAAS0B,EAAoBb,GAC3B,UAAIA,EAAMG,aAAa/B,OAAS,KAAMF,EAAc8B,EAAMV,OAAwB,WAAfU,EAAMzE,MAW3E,SAASuF,EAAsBd,GAC7B,IAAIV,EAAOU,EAAMV,KACbyB,EAAoBf,EAAMe,kBAC1BC,EAAe,CACjBC,KAAM,IAAIC,MAAM5B,EAAKlB,QACrB+C,OAAQ,IAAID,MAAM5B,EAAKlB,QACvBgD,UAAW,IAAIF,MAAM5B,EAAKlB,QAC1BiD,cAAe,IAAIH,MAAM5B,EAAKlB,QAC9BkD,KAAM,IAAIJ,MAAM5B,EAAKlB,QACrBmD,YAAa,IAAIL,MAAM5B,EAAKlB,QAC5BoD,UAAW,IAAIN,MAAM5B,EAAKlB,QAC1BqD,MAAO,IAAIP,MAAM5B,EAAKlB,QACtBsD,QAAS,IAAIR,MAAM5B,EAAKlB,QACxBuD,SAAU,IAAIT,MAAM5B,EAAKlB,QACzBwD,WAAY,IAAIV,MAAM5B,EAAKlB,QAC3BA,OAAQkB,EAAKlB,QAwBf,OArBI2C,GAAqBA,EAAkB3C,OAAS,GAClD2C,EAAkBnD,SAAQ,SAAUyC,GAIlC,IAHA,IAAIP,EAASO,EAAMP,OACf1B,EAAS0B,EAASO,EAAMjC,OAEnBT,EAAImC,EAAQnC,EAAIS,EAAQT,GAAK,EACE,IAAlC0C,EAAMwB,MAAMnC,QAAQ,UACtBsB,EAAaS,MAAM9D,GAAK0C,EAAMwB,MAAMC,UAAU,GACD,IAApCzB,EAAMwB,MAAMnC,QAAQ,YAC7BsB,EAAaU,QAAQ/D,GAAK0C,EAAMwB,MAAMC,UAAU,GACF,IAArCzB,EAAMwB,MAAMnC,QAAQ,aAC7BsB,EAAaW,SAAShE,GAAK0C,EAAMwB,MAAMC,UAAU,GACD,IAAvCzB,EAAMwB,MAAMnC,QAAQ,eAC7BsB,EAAaY,WAAWjE,GAAK0C,EAAMwB,MAAMC,UAAU,IAC1Cd,EAAaX,EAAMwB,SAC5Bb,EAAaX,EAAMwB,OAAOlE,IAAK,MAMhCqD,EAOT,SAASe,EAAkBf,EAAclB,GACvC,IAAIjB,EAAS,GA8Cb,OA5CImC,EAAaS,MAAM3B,KACrBjB,EAAO4C,MAAQT,EAAaS,MAAM3B,IAGhCkB,EAAaU,QAAQ5B,KACvBjB,EAAO6C,QAAUV,EAAaU,QAAQ5B,IAGpCkB,EAAaW,SAAS7B,KACxBjB,EAAO8C,SAAWX,EAAaW,SAAS7B,IAGtCkB,EAAaY,WAAW9B,KAC1BjB,EAAO+C,WAAaZ,EAAaY,WAAW9B,IAG1CkB,EAAaI,UAAUtB,KACzBjB,EAAOuC,WAAY,GAGjBJ,EAAaG,OAAOrB,KACtBjB,EAAOsC,QAAS,GAGdH,EAAaC,KAAKnB,KACpBjB,EAAOoC,MAAO,GAGZD,EAAaK,cAAcvB,KAC7BjB,EAAOwC,eAAgB,GAGrBL,EAAaM,KAAKxB,KACpBjB,EAAOyC,MAAO,GAGZN,EAAaQ,UAAU1B,KACzBjB,EAAO2C,WAAY,GAGjBR,EAAaO,YAAYzB,KAC3BjB,EAAO0C,aAAc,GAGhB1C,EAOT,SAASmD,EAAoBhB,EAAcnC,EAAQoD,GACjD,IAAIC,GAAa,EAUjB,OARID,EAAQ,GAAKA,EAAQjB,EAAa5C,OACpCS,EAAOjB,SAAQ,SAAUiE,GACvBK,EAAaA,GAAclB,EAAaa,GAAOI,KAAWjB,EAAaa,GAAOI,EAAQ,MAGxFC,GAAa,EAGRA,EAMT,SAASC,EAAqBN,EAAOO,GACnC,MAAc,SAAVP,EACK,WAAW9C,OAAOqD,EAAS,aAGtB,WAAVP,EACK,OAAO9C,OAAOqD,EAAS,SAGlB,cAAVP,EACK,QAAQ9C,OAAOqD,EAAS,UAGnB,kBAAVP,EACK,QAAQ9C,OAAOqD,EAAS,UAGnB,SAAVP,EACK,SAAS9C,OAAOqD,EAAS,WAGpB,gBAAVP,EACK,QAAQ9C,OAAOqD,EAAS,UAGnB,cAAVP,EACK,QAAQ9C,OAAOqD,EAAS,UAG1BA,EAMT,SAASC,EAAe/C,GACtB,OAAIA,GAAQA,EAAKlB,OAAS,EACZkB,EAAKc,KAAI,SAAUkC,GAC7B,OAAQA,GACN,IAAK,KACH,MAAO,OAET,IAAK,IACH,MAAO,QAET,IAAK,IACH,MAAO,OAET,IAAK,IACH,MAAO,OAET,QACE,OAAOA,MAGAC,KAAK,IAGb,GAOT,SAASC,EAAuB3D,EAAQS,GACtC,GAAIT,IAAWA,EAAO4C,OAAS5C,EAAO6C,SAAW7C,EAAO8C,UAAY9C,EAAO+C,YAAa,CACtF,IAAIa,EAAc,UAmBlB,OAjBI5D,EAAO4C,QACTgB,GAAe,UAAU1D,OAAOF,EAAO4C,MAAO,MAG5C5C,EAAO6C,UACTe,GAAe,qBAAqB1D,OAAOF,EAAO6C,QAAS,MAGzD7C,EAAO8C,WACTc,GAAe,cAAc1D,OAAOF,EAAO8C,UAAU5C,OAAO,QAAQ2D,KAAK7D,EAAO8C,UAAY,KAAO,GAAI,MAGrG9C,EAAO+C,aACTa,GAAe,gBAAgB1D,OAAOF,EAAO+C,WAAY,MAIpD,SAAS7C,OADhB0D,GAAe,IACqB,KAAK1D,OAAOO,EAAM,WAGxD,OAAOA,EAMT,SAASqD,EAAgBC,EAAWhC,EAAWtB,EAAMuD,GACnD,IAAIC,EAASF,EAAUhC,GAEvB,GAAqC,oBAA1BiC,EAAsC,CAC/C,IAAIE,EAAOF,EAAsBC,EAAQxD,GAEzC,GAAIyD,EACF,OAAOA,EAIX,GAAoB,YAAhBD,EAAOvH,KACT,MAAO,YAAawD,OAAO+D,EAAOlE,KAAKoE,IAAK,uDAA2DjE,OAAO+D,EAAOlE,KAAKE,MAAO,MAAOC,OAAOO,EAAM,QAGvJ,GAAoB,SAAhBwD,EAAOvH,KAAiB,CAC1B,IAAI0H,EAAeH,EAAOlE,KAAKqE,cAAgB,QAC/C,MAAO,YAAalE,OAAO+D,EAAOlE,KAAKoE,IAAK,cAAgBjE,OAAOkE,EAAc,MAAOlE,OAAOO,EAAM,QAGvG,GAAoB,UAAhBwD,EAAOvH,KAAkB,CAC3B,IAAI2H,EAAYJ,EAAOlE,KAAKsE,UAE5B,OAAIA,GAAaA,EAAU9E,OAClB,0BAA2BW,OAAOmE,EAAW,iBAAmBnE,OAAO+D,EAAOlE,KAAKuE,IAAK,WAAapE,OAAO+D,EAAOlE,KAAKwE,IAAK,qBAAuBrE,OAAO+D,EAAOlE,KAAKyE,OAAQ,YAAYtE,OAAO+D,EAAOlE,KAAK0E,MAAO,aAGvN,aAAcvE,OAAO+D,EAAOlE,KAAKuE,IAAK,WAAapE,OAAO+D,EAAOlE,KAAKwE,IAAK,qBAAuBrE,OAAO+D,EAAOlE,KAAKyE,OAAQ,YAAYtE,OAAO+D,EAAOlE,KAAK0E,MAAO,OAG5K,MAAoB,kBAAhBR,EAAOvH,KACF,kBAAmBwD,OAAO+D,EAAOlE,KAAK0E,MAAO,cAAgBvE,OAAO+D,EAAOlE,KAAKyE,OAAQ,WAAatE,OAAO+D,EAAOlE,KAAKuE,IAAK,+BAG/H7D,EAQT,SAASiE,EAAuBvD,EAAOnB,EAAQ6B,EAAOC,GACpD,IAAI6C,EAAgB,GAChBlE,EAAO4B,MAAMuC,KAAKzD,EAAMV,MAE5B,GAAIA,EAAKlB,OAAS,EAIhB,IAHA,IACIsF,EADA1C,EAAeF,EAAsBd,GAGhCrC,EAAI+C,EAAO/C,EAAIgD,EAAKhD,GAAK,EAC5BA,IAAM+C,GAASsB,EAAoBhB,EAAcnC,EAAQlB,IAC3D+F,EAAQpE,KAAKO,KAAKP,EAAK3B,IACvB+F,EAAQ/C,IAAMhD,EAAI,IAElB+F,EAAU,CACR7E,OAAQkD,EAAkBf,EAAcrD,GACxC2B,KAAM,CAACA,EAAK3B,IACZ+C,MAAO/C,EACPgD,IAAKhD,EAAI,GAEX6F,EAAc3D,KAAK6D,IAKzB,OAAOF,EAOT,SAASG,EAAiBC,GACxB,GAAIA,EAAa,CAGf,IAFA,IAAIC,EAAeD,EAEVjG,EAAI,EAAGA,EAAIkG,EAAazF,QACR,MAAnBwF,EAAYjG,GADuBA,GAAK,EAE1CkG,EAAeA,EAAaC,QAAQ,IAAK,UAM7C,OAAOD,EAGT,OAAOD,EAMT,SAASG,EAAkBH,GACzB,GAAIA,EAAa,CAGf,IAFA,IAAIC,EAAeD,EAEVjG,EAAIkG,EAAazF,OAAS,EAAGT,GAAK,GACjB,MAApBkG,EAAalG,GAD2BA,GAAK,EAE/CkG,EAAe,GAAG9E,OAAO8E,EAAa/B,UAAU,EAAGnE,GAAI,UAAUoB,OAAO8E,EAAa/B,UAAUnE,EAAI,IAMvG,OAAOkG,EAGT,OAAOD,EAOT,SAASI,EAAyBC,GAChC,IAAIpF,EAASoF,EAAapF,OAEtBuD,EAAUC,EADH4B,EAAa3E,MAKxB,OAHA1B,EAAQiB,GAAQ,SAAUgD,EAAO/C,GAC/BsD,EAAUD,EAAqBN,EAAOO,MAEjCA,EAQT,SAAS8B,EAA4BlE,EAAOiE,GAC1C,IAAIE,EAAmBZ,EAAuBvD,EAAO,CAAC,OAAQ,SAAU,YAAa,gBAAiB,OAAQ,cAAe,aAAciE,EAAavD,MAAOuD,EAAatD,KACxKyD,EAAmB,GAKvB,OAJAD,EAAiBvG,SAAQ,SAAUyG,GACjCD,GAAoBJ,EAAyBK,MAE/CD,EAAmB5B,EAAuByB,EAAapF,OAAQuF,GAUjE,SAASE,EAAiBtE,EAAO4C,EAAWc,EAASb,GACnD,IAAI0B,EAAqB,GACChB,EAAuBvD,EAAO,CAAC,QAAS,UAAW,WAAY,cAAe0D,EAAQhD,MAAOgD,EAAQ/C,KAC3G/C,SAAQ,SAAUqG,GACpCM,EAAmB1E,KAAKqE,EAA4BlE,EAAOiE,OAE7D,IAAIL,EAAcW,EAAmBhC,KAAK,IAU1C,MARqB,WAAjBmB,EAAQnI,UACgBU,IAAtByH,EAAQ9C,WAAiD,OAAtB8C,EAAQ9C,YAC7CgD,EAAcjB,EAAgBC,EAAWc,EAAQ9C,UAAWgD,EAAaf,IAEjD,YAAjBa,EAAQnI,OACjBqI,EAAc,YAAa7E,OAAO6E,EAAa,8BAAiC7E,OAAO6E,EAAa,SAG/FA,EAQT,SAASY,EAAoBxE,EAAO4C,EAAW1D,EAAe2D,GAC5D,IAAI4B,EAAc,GACdtF,EAAWY,EAAYC,EAAOd,GAclC,OAbAC,EAASvB,SAAQ,SAAU8F,EAASzB,GAClC,IAAI2B,EAAcU,EAAiBtE,EAAO4C,EAAWc,EAASb,GAEhD,IAAVZ,IACF2B,EAAcD,EAAiBC,IAG7B3B,IAAU9C,EAASf,OAAS,IAC9BwF,EAAcG,EAAkBH,IAGlCa,EAAY5E,KAAK+D,MAEZa,EAAYlC,KAAK,IAM1B,SAASmC,EAAe1E,EAAO4C,EAAW1D,EAAeyF,EAAa9B,GACpE,IAAI+B,EAAY,GAEhB,GAAI/D,EAAoBb,GACtB4E,EAAU/E,KAAK8C,EAAgBC,EAAW5C,EAAMG,aAAa,GAAGpC,SAAK9B,EAAW4G,QAC3E,CACL,IAAIgC,EAAWnG,EAAYsB,EAAMzE,MAEjC,GAAIsJ,EAAU,CACZD,EAAU/E,KAAK,IAAId,OAAO8F,IAC1B,IAAIC,EAAanG,EAAcqB,EAAMpB,MAEjCkG,GACFF,EAAU/E,KAAK,WAAYd,OAAO+F,EAAY,MAG5CH,GACFC,EAAU/E,KAAK,iBAGjB+E,EAAU/E,KAAK,KACf+E,EAAU/E,KAAK2E,EAAoBxE,EAAO4C,EAAW1D,EAAe2D,IACpE+B,EAAU/E,KAAK,KAAKd,OAAO8F,EAAU,OAKzC,OADAD,EAAU/E,KAAK,MACR+E,EAAUrC,KAAK,IAOxB,SAASwC,EAAOC,GACd,MAAqB,wBAAdA,GAAqD,sBAAdA,EAMhD,SAASC,EAAcC,EAAYtC,EAAW1D,EAAeyF,EAAa9B,GACxE,IAEIsC,EAFAC,EAAW,GACXC,EAAkB,GA4CtB,OA1CAH,EAAWtH,SAAQ,SAAUoC,GAC3B,IAAIsF,GAAc,EAiBlB,GAfKH,EAEMA,EAAc5J,OAASyE,EAAMzE,MACtC6J,EAASvF,KAAK,KAAKd,OAAOL,EAAYyG,EAAc5J,MAAO,QAC3D6J,EAASvF,KAAK,IAAId,OAAOL,EAAYsB,EAAMzE,MAAO,SACzC4J,EAAcI,QAAUvF,EAAMuF,MACnCF,GAAmBA,EAAgBjH,OAAS,IAC9CgH,EAASvF,KAAKoF,EAAcI,EAAiBzC,EAAW1D,EAAeyF,EAAa9B,IACpFwC,EAAkB,KAGpBC,GAAc,EACdD,EAAgBxF,KAAKG,IAXrBoF,EAASvF,KAAK,IAAId,OAAOL,EAAYsB,EAAMzE,MAAO,SAc/C+J,EAAa,CAChBF,EAASvF,KAAK,OACd,IAAIiF,EAAanG,EAAcqB,EAAMpB,MAEjCkG,GACFM,EAASvF,KAAK,WAAYd,OAAO+F,EAAY,MAG3CH,GACFS,EAASvF,KAAK,iBAGhBuF,EAASvF,KAAK,KACduF,EAASvF,KAAK2E,EAAoBxE,EAAO4C,EAAW1D,EAAe2D,IACnEuC,EAASvF,KAAK,WACdsF,EAAgBnF,MAIhBqF,GAAmBA,EAAgBjH,OAAS,GAC9CgH,EAASvF,KAAKoF,EAAcI,EAAiBzC,EAAW1D,EAAeyF,EAAa9B,IAGtFuC,EAASvF,KAAK,KAAKd,OAAOL,EAAYyG,EAAc5J,MAAO,QACpD6J,EAAS7C,KAAK,IAOvB,SAASiD,EAAYC,EAAevG,EAAeyF,EAAa9B,GAC9D,IAAIE,EAAO,GAEX,GAAI0C,EAAe,CACjB,IAAIC,EAASD,EAAcC,OACvB9C,EAAY6C,EAAc7C,UAE9B,GAAI8C,GAAUA,EAAOtH,OAAS,EAAG,CAC/B,IAAI8G,EAAa,GAiBjB,GAhBAQ,EAAO9H,SAAQ,SAAUoC,GACvB,GAAI+E,EAAO/E,EAAMzE,MACf2J,EAAWrF,KAAKG,OACX,CACL,GAAIkF,EAAW9G,OAAS,EAAG,CACzB,IAAIgH,EAAWH,EAAcC,EAAYtC,EAAW1D,EAAe2D,GAEnEE,EAAKlD,KAAKuF,GACVF,EAAa,GAGf,IAAIN,EAAYF,EAAe1E,EAAO4C,EAAW1D,EAAeyF,EAAa9B,GAC7EE,EAAKlD,KAAK+E,OAIVM,EAAW9G,OAAS,EAAG,CACzB,IAAIgH,EAAWH,EAAcC,EAAYtC,EAAW1D,EAAeyF,EAAa9B,GAEhFE,EAAKlD,KAAKuF,GACVF,EAAa,KAKnB,OAAOnC,EAAKR,KAAK,IAGnB,OAAOiD,EA9sByEG,I,iOCugBnEC,UA9eK,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,gBAAiBC,EAAsC,EAAtCA,mBAAoBC,EAAkB,EAAlBA,YAOlDC,EAAOC,cAAPD,GACR,EAAsCE,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0CJ,mBAAS,CACjDK,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,iBAAkB,GAClBC,kBAAmB,GACnBC,aAAc,GACdnI,KAAM,GACNoI,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,cAAe,GACfC,OAAQ,MACRb,aAAc,GACdc,aAAc,GACdC,SAAUpB,EACVqB,iBAAiB,KAjBnB,mBAAOC,EAAP,KAAsBC,EAAtB,KAmBA,EAAsCrB,mBAAS,CAC7C,CACEF,GAAIwB,IAAOC,IAAI,EAAG,IAClBC,KAAM,GACNC,IAAK,GACLC,WAAY,GACZC,WAAY,GACZC,QAAS,GACTC,WAAY,GACZC,YAAa,MATjB,mBAAOC,EAAP,KAAoBC,EAApB,KAcMC,EAAgB,SAACC,GACrBb,EAAiB,2BAAKD,GAAN,kBAAsBc,EAAEC,OAAOC,KAAOF,EAAEC,OAAOvJ,UAsB3DyJ,EAAiB,SAACC,EAASC,GAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQrK,OAAQsK,KAbd7K,EAcL,CACbmK,YAAaS,EAAQC,GAAGV,YACxBW,WAAYH,EACZI,OAAQH,EAAQC,GAAGb,WACnBE,WAAYU,EAAQC,GAAGX,WACvBc,UAAW9C,EAAY8C,UACvBC,WAAY,EACZnB,IAAKc,EAAQC,GAAGf,IAChBD,KAAMe,EAAQC,GAAGhB,KACjBI,QAASW,EAAQC,GAAGZ,QACpBF,WAAYmB,WAAWN,EAAQC,GAAGd,cAvBlCR,SAAWrB,EACfiD,IACGC,KAAK,6BAA8BpL,GACnCqL,MAAK,WACJ7N,YAAQ,+BAAgC,aAEzC8N,OAAM,WACL9N,YAAQ,wBAAyB,YARhB,IAACwC,GA8BlBuL,EAAa,iDAAG,WAAO3K,EAAKgK,GAAZ,qFACpBnB,EAAc+B,eAAiBlD,EAAe,IAAWA,EACzDmB,EAAcF,SAAWpB,EACzBsB,EAAcH,aAAe1I,EAGN,MADjB6K,EAAM,IAAIC,MACRC,YACEC,EAAU,IAAIF,KAAKD,EAAII,cAAgB,EAAG,EAAGJ,EAAIK,WACvDrC,EAAcD,iBAAiBoC,IAEzBA,EAAU,IAAIF,KAAKD,EAAII,cAAeJ,EAAIE,WAAa,EAAGF,EAAIK,WACpErC,EAAcD,iBAAiBoC,GAGnCT,IACGC,KAAK,yBAA0B3B,GAC/B4B,MAAK,SAACU,GACLvO,YAAQ,iCAAkC,WAC1CkN,EAAeqB,EAAIhL,KAAKA,KAAKiL,SAAUpB,GACvCqB,YAAW,WACTC,OAAOC,SAASC,WACf,QAEJd,OAAM,WACL9N,YAAQ,gCAxBQ,2CAAH,wDA2Db6O,EAAe,WACnB,IAhCoBzB,EAASlN,EAgCvB4O,EAAS,GACfC,EAAE,sBAAsBC,MAAK,WAC3B,IAAMC,EAAY,GAClBF,EAAEG,MACCC,KAAK,SACLH,MAAK,WACJ,IAAMI,EAAYL,EAAEG,MAAMG,KAAK,QAC/BJ,EAAUG,GAAaL,EAAEG,MAAMI,SAEnCR,EAAOtK,KAAKyK,MAEdlE,EAAe,GACf8B,EAAe,CACb,CACElC,GAAIwB,IAAOC,IAAI,EAAG,IAClBC,KAAM,GACNC,IAAK,GACLC,WAAY,GACZC,WAAY,GACZC,QAAS,GACTC,WAAY,GACZC,YAAa,MArDGS,EAwDP0B,EAxDgB5O,EAwDR,UAvDrByN,IACGC,KAAK,0BAA2B,CAAE1N,SAClC2N,MAAK,SAACU,GACLR,EAAcX,EAASmB,EAAIhL,KAAKA,SAEjCuK,OAAM,WACLC,EAAcX,EAAS,QAuF7B,OACE,mCACE,eAAC,IAAD,CAAOmC,KAAK,KAAKC,OAAQhF,EAAzB,UACE,eAAC,IAAD,4BAEE,cAAC,IAAD,CACEnJ,UAAU,cACVoO,MAAM,YACNC,QAAS,WACPjF,GAAmB,IAJvB,kBAUF,cAAC,IAAD,UACA,cAAC,IAAD,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAKkF,GAAG,KAAR,SACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAKA,GAAG,IAAR,SACE,cAAC,IAAD,CACEtO,UAAU,cACVoO,MAAM,UACNvP,KAAK,SACLwP,QAAS,WAzG3B7C,EAAe,GAAD,mBACTD,GADS,CAEZ,CACEjC,IAAI,IAAIuD,MAAO0B,UAAUC,WACzBC,IAAK,GACLxD,IAAK,GACLyD,UAAW,GACXvD,WAAY,GACZC,QAAS,GACTuD,KAAM,GACNrD,YAAa,QA2FD,6BAYF,eAAC,KAAD,WAEO,cAAC,IAAD,CAAKgD,GAAG,IAAR,SACH,eAAC,IAAD,WACE,cAAC,IAAD,uBACA,cAAC,IAAD,CACEzP,KAAK,SACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcf,SACtC+B,KAAK,kBAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,yBACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcd,WACtC8B,KAAK,oBAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,wBACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcb,UACtC6B,KAAK,mBAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,+BACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcZ,iBACtC4B,KAAK,0BAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,gCACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcX,kBACtC2B,KAAK,2BAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,2BACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcV,aACtC0B,KAAK,sBAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAc7I,KACtC6J,KAAK,cAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,4BACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcT,UACtCyB,KAAK,mBAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,wBACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcR,UACtCwB,KAAK,mBAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,wBACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcP,UACtCuB,KAAK,mBAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,wBACA,cAAC,IAAD,CACEzP,KAAK,WACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcN,UACtCsB,KAAK,mBAIX,cAAC,IAAD,CAAK0C,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,4BACA,cAAC,IAAD,CACEzP,KAAK,OACL+P,SAAUnD,EACVrJ,MAAOwI,GAAiBA,EAAcL,cACtCqB,KAAK,uBAMX,cAAC,UAAD,CAAe9L,MAAM,cAArB,SACE,cAAC,SAAD,CACE+O,YAAalF,EACbmF,iBAAiB,oBACjBC,gBAAgB,qCAChBC,oBAAqB,SAACtD,IA/UnB,SAACA,EAAG7M,GAC3BgM,EAAiB,2BACZD,GADW,kBAEb/L,EAAOiK,IAAYmG,uBAAavD,EAAEwD,yBA6UfC,CAAiBzD,EAAG,iBACpB9B,EAAgB8B,WAKxB,cAAC,IAAD,UAEA,wBAAO1L,UAAU,WAAjB,UACE,gCACE,+BACE,oBAAIoP,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,aAGd,gCACG7D,EAAY7H,KAAI,SAACiL,GAChB,OACE,+BACE,oBAAI,aAAW,OAAf,SACE,cAAC,IAAD,CAAOU,aAAcV,EAAKA,KAAM9P,KAAK,OAAO+M,KAAK,iBAEnD,oBAAI,aAAW,cAAf,SACE,cAAC,IAAD,CACEyD,aAAcV,EAAKrD,YACnBzM,KAAK,OACL+M,KAAK,kBAGT,oBAAI,aAAW,MAAf,SACE,cAAC,IAAD,CAAOyD,aAAcV,EAAK3D,KAAMnM,KAAK,OAAO+M,KAAK,WAEnD,oBAAI,aAAW,MAAf,SACE,cAAC,IAAD,CAAOyD,aAAcV,EAAK1D,IAAKpM,KAAK,SAAS+M,KAAK,UAEpD,oBAAI,aAAW,aAAf,SACE,cAAC,IAAD,CACEyD,aAAcV,EAAKzD,WACnBoE,OAAQ,YA/Pf,WACrB,IAAIC,EAAa,EACX9B,EAAS,GACfC,EAAE,sBAAsBC,MAAK,WAC3B,IAAMC,EAAY,GAClBF,EAAEG,MACCC,KAAK,SACLH,MAAK,WACJ,IAAMI,EAAYL,EAAEG,MAAMG,KAAK,QAC/BJ,EAAUG,GAAaL,EAAEG,MAAMI,MAC/BL,EAAUzC,WAAayC,EAAU3C,IAAM2C,EAAU1C,cAErDuC,EAAOtK,KAAKyK,MAEdH,EAAOvM,SAAQ,SAACwK,GACVA,EAAEP,aACJoE,GAAclD,WAAWX,EAAEP,gBAG/BK,EAAeiC,GACf/D,EAAe6F,GA4OeC,IAEF3Q,KAAK,SACL+M,KAAK,iBAGT,oBAAI,aAAW,cAAf,SACE,cAAC,IAAD,CACEyD,aAAcV,EAAKxD,WACnBtM,KAAK,OACL+M,KAAK,aACL6D,UAAQ,MAGZ,oBAAI,aAAW,UAAf,SACE,cAAC,IAAD,CAAOJ,aAAcV,EAAKvD,QAASvM,KAAK,OAAO+M,KAAK,cAEtD,oBAAI,aAAW,SAAf,SACE,eAAC,IAAD,CAAM8D,GAAG,GAAT,UACE,cAAC,IAAD,CAAO7Q,KAAK,SAAS+M,KAAK,KAAKyD,aAAcV,EAAKrF,KAClD,sBACE+E,QAAS,YA7PtB,SAACsB,GAMlB,GALAnE,GAAe,SAACuB,GAAD,OACbA,EAAQ6C,QAAO,SAACzO,GACd,OAAOA,EAAImI,KAAOqG,EAAIrG,SAGtBqG,EAAIxE,WAAY,CAClB,IAAM0E,EAAapG,EAAc4C,WAAWsD,EAAIxE,YAChDzB,EAAemG,IAsPeC,CAAWnB,IAFf,0BAzCGA,EAAKrF,cAwDtB,eAAC,IAAD,WACE,eAAC,IAAD,CACEtJ,UAAU,cACVoO,MAAM,UACNC,QAAS,WACPb,KAJJ,UAOG,IAPH,SAQS,OAET,cAAC,IAAD,CACExN,UAAU,cACVoO,MAAM,YACNC,QAAS,WACPjF,GAAmB,IAJvB","file":"static/js/120.ae6a1394.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.draftjsToHtml = factory());\n}(this, (function () { 'use strict';\n\n  /**\n  * Utility function to execute callback for eack key->value pair.\n  */\n  function forEach(obj, callback) {\n    if (obj) {\n      for (var key in obj) {\n        // eslint-disable-line no-restricted-syntax\n        if ({}.hasOwnProperty.call(obj, key)) {\n          callback(key, obj[key]);\n        }\n      }\n    }\n  }\n  /**\n  * The function returns true if the string passed to it has no content.\n  */\n\n  function isEmptyString(str) {\n    if (str === undefined || str === null || str.length === 0 || str.trim().length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n  * Mapping block-type to corresponding html tag.\n  */\n\n  var blockTypesMapping = {\n    unstyled: 'p',\n    'header-one': 'h1',\n    'header-two': 'h2',\n    'header-three': 'h3',\n    'header-four': 'h4',\n    'header-five': 'h5',\n    'header-six': 'h6',\n    'unordered-list-item': 'ul',\n    'ordered-list-item': 'ol',\n    blockquote: 'blockquote',\n    code: 'pre'\n  };\n  /**\n  * Function will return HTML tag for a block.\n  */\n\n  function getBlockTag(type) {\n    return type && blockTypesMapping[type];\n  }\n  /**\n  * Function will return style string for a block.\n  */\n\n  function getBlockStyle(data) {\n    var styles = '';\n    forEach(data, function (key, value) {\n      if (value) {\n        styles += \"\".concat(key, \":\").concat(value, \";\");\n      }\n    });\n    return styles;\n  }\n  /**\n  * The function returns an array of hashtag-sections in blocks.\n  * These will be areas in block which have hashtags applicable to them.\n  */\n\n  function getHashtagRanges(blockText, hashtagConfig) {\n    var sections = [];\n\n    if (hashtagConfig) {\n      var counter = 0;\n      var startIndex = 0;\n      var text = blockText;\n      var trigger = hashtagConfig.trigger || '#';\n      var separator = hashtagConfig.separator || ' ';\n\n      for (; text.length > 0 && startIndex >= 0;) {\n        if (text[0] === trigger) {\n          startIndex = 0;\n          counter = 0;\n          text = text.substr(trigger.length);\n        } else {\n          startIndex = text.indexOf(separator + trigger);\n\n          if (startIndex >= 0) {\n            text = text.substr(startIndex + (separator + trigger).length);\n            counter += startIndex + separator.length;\n          }\n        }\n\n        if (startIndex >= 0) {\n          var endIndex = text.indexOf(separator) >= 0 ? text.indexOf(separator) : text.length;\n          var hashtag = text.substr(0, endIndex);\n\n          if (hashtag && hashtag.length > 0) {\n            sections.push({\n              offset: counter,\n              length: hashtag.length + trigger.length,\n              type: 'HASHTAG'\n            });\n          }\n\n          counter += trigger.length;\n        }\n      }\n    }\n\n    return sections;\n  }\n  /**\n  * The function returns an array of entity-sections in blocks.\n  * These will be areas in block which have same entity or no entity applicable to them.\n  */\n\n\n  function getSections(block, hashtagConfig) {\n    var sections = [];\n    var lastOffset = 0;\n    var sectionRanges = block.entityRanges.map(function (range) {\n      var offset = range.offset,\n          length = range.length,\n          key = range.key;\n      return {\n        offset: offset,\n        length: length,\n        key: key,\n        type: 'ENTITY'\n      };\n    });\n    sectionRanges = sectionRanges.concat(getHashtagRanges(block.text, hashtagConfig));\n    sectionRanges = sectionRanges.sort(function (s1, s2) {\n      return s1.offset - s2.offset;\n    });\n    sectionRanges.forEach(function (r) {\n      if (r.offset > lastOffset) {\n        sections.push({\n          start: lastOffset,\n          end: r.offset\n        });\n      }\n\n      sections.push({\n        start: r.offset,\n        end: r.offset + r.length,\n        entityKey: r.key,\n        type: r.type\n      });\n      lastOffset = r.offset + r.length;\n    });\n\n    if (lastOffset < block.text.length) {\n      sections.push({\n        start: lastOffset,\n        end: block.text.length\n      });\n    }\n\n    return sections;\n  }\n  /**\n  * Function to check if the block is an atomic entity block.\n  */\n\n\n  function isAtomicEntityBlock(block) {\n    if (block.entityRanges.length > 0 && (isEmptyString(block.text) || block.type === 'atomic')) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * The function will return array of inline styles applicable to the block.\n  */\n\n\n  function getStyleArrayForBlock(block) {\n    var text = block.text,\n        inlineStyleRanges = block.inlineStyleRanges;\n    var inlineStyles = {\n      BOLD: new Array(text.length),\n      ITALIC: new Array(text.length),\n      UNDERLINE: new Array(text.length),\n      STRIKETHROUGH: new Array(text.length),\n      CODE: new Array(text.length),\n      SUPERSCRIPT: new Array(text.length),\n      SUBSCRIPT: new Array(text.length),\n      COLOR: new Array(text.length),\n      BGCOLOR: new Array(text.length),\n      FONTSIZE: new Array(text.length),\n      FONTFAMILY: new Array(text.length),\n      length: text.length\n    };\n\n    if (inlineStyleRanges && inlineStyleRanges.length > 0) {\n      inlineStyleRanges.forEach(function (range) {\n        var offset = range.offset;\n        var length = offset + range.length;\n\n        for (var i = offset; i < length; i += 1) {\n          if (range.style.indexOf('color-') === 0) {\n            inlineStyles.COLOR[i] = range.style.substring(6);\n          } else if (range.style.indexOf('bgcolor-') === 0) {\n            inlineStyles.BGCOLOR[i] = range.style.substring(8);\n          } else if (range.style.indexOf('fontsize-') === 0) {\n            inlineStyles.FONTSIZE[i] = range.style.substring(9);\n          } else if (range.style.indexOf('fontfamily-') === 0) {\n            inlineStyles.FONTFAMILY[i] = range.style.substring(11);\n          } else if (inlineStyles[range.style]) {\n            inlineStyles[range.style][i] = true;\n          }\n        }\n      });\n    }\n\n    return inlineStyles;\n  }\n  /**\n  * The function will return inline style applicable at some offset within a block.\n  */\n\n\n  function getStylesAtOffset(inlineStyles, offset) {\n    var styles = {};\n\n    if (inlineStyles.COLOR[offset]) {\n      styles.COLOR = inlineStyles.COLOR[offset];\n    }\n\n    if (inlineStyles.BGCOLOR[offset]) {\n      styles.BGCOLOR = inlineStyles.BGCOLOR[offset];\n    }\n\n    if (inlineStyles.FONTSIZE[offset]) {\n      styles.FONTSIZE = inlineStyles.FONTSIZE[offset];\n    }\n\n    if (inlineStyles.FONTFAMILY[offset]) {\n      styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];\n    }\n\n    if (inlineStyles.UNDERLINE[offset]) {\n      styles.UNDERLINE = true;\n    }\n\n    if (inlineStyles.ITALIC[offset]) {\n      styles.ITALIC = true;\n    }\n\n    if (inlineStyles.BOLD[offset]) {\n      styles.BOLD = true;\n    }\n\n    if (inlineStyles.STRIKETHROUGH[offset]) {\n      styles.STRIKETHROUGH = true;\n    }\n\n    if (inlineStyles.CODE[offset]) {\n      styles.CODE = true;\n    }\n\n    if (inlineStyles.SUBSCRIPT[offset]) {\n      styles.SUBSCRIPT = true;\n    }\n\n    if (inlineStyles.SUPERSCRIPT[offset]) {\n      styles.SUPERSCRIPT = true;\n    }\n\n    return styles;\n  }\n  /**\n  * Function returns true for a set of styles if the value of these styles at an offset\n  * are same as that on the previous offset.\n  */\n\n  function sameStyleAsPrevious(inlineStyles, styles, index) {\n    var sameStyled = true;\n\n    if (index > 0 && index < inlineStyles.length) {\n      styles.forEach(function (style) {\n        sameStyled = sameStyled && inlineStyles[style][index] === inlineStyles[style][index - 1];\n      });\n    } else {\n      sameStyled = false;\n    }\n\n    return sameStyled;\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n  function addInlineStyleMarkup(style, content) {\n    if (style === 'BOLD') {\n      return \"<strong>\".concat(content, \"</strong>\");\n    }\n\n    if (style === 'ITALIC') {\n      return \"<em>\".concat(content, \"</em>\");\n    }\n\n    if (style === 'UNDERLINE') {\n      return \"<ins>\".concat(content, \"</ins>\");\n    }\n\n    if (style === 'STRIKETHROUGH') {\n      return \"<del>\".concat(content, \"</del>\");\n    }\n\n    if (style === 'CODE') {\n      return \"<code>\".concat(content, \"</code>\");\n    }\n\n    if (style === 'SUPERSCRIPT') {\n      return \"<sup>\".concat(content, \"</sup>\");\n    }\n\n    if (style === 'SUBSCRIPT') {\n      return \"<sub>\".concat(content, \"</sub>\");\n    }\n\n    return content;\n  }\n  /**\n  * The function returns text for given section of block after doing required character replacements.\n  */\n\n  function getSectionText(text) {\n    if (text && text.length > 0) {\n      var chars = text.map(function (ch) {\n        switch (ch) {\n          case '\\n':\n            return '<br>';\n\n          case '&':\n            return '&amp;';\n\n          case '<':\n            return '&lt;';\n\n          case '>':\n            return '&gt;';\n\n          default:\n            return ch;\n        }\n      });\n      return chars.join('');\n    }\n\n    return '';\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n\n  function addStylePropertyMarkup(styles, text) {\n    if (styles && (styles.COLOR || styles.BGCOLOR || styles.FONTSIZE || styles.FONTFAMILY)) {\n      var styleString = 'style=\"';\n\n      if (styles.COLOR) {\n        styleString += \"color: \".concat(styles.COLOR, \";\");\n      }\n\n      if (styles.BGCOLOR) {\n        styleString += \"background-color: \".concat(styles.BGCOLOR, \";\");\n      }\n\n      if (styles.FONTSIZE) {\n        styleString += \"font-size: \".concat(styles.FONTSIZE).concat(/^\\d+$/.test(styles.FONTSIZE) ? 'px' : '', \";\");\n      }\n\n      if (styles.FONTFAMILY) {\n        styleString += \"font-family: \".concat(styles.FONTFAMILY, \";\");\n      }\n\n      styleString += '\"';\n      return \"<span \".concat(styleString, \">\").concat(text, \"</span>\");\n    }\n\n    return text;\n  }\n  /**\n  * Function will return markup for Entity.\n  */\n\n  function getEntityMarkup(entityMap, entityKey, text, customEntityTransform) {\n    var entity = entityMap[entityKey];\n\n    if (typeof customEntityTransform === 'function') {\n      var html = customEntityTransform(entity, text);\n\n      if (html) {\n        return html;\n      }\n    }\n\n    if (entity.type === 'MENTION') {\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" class=\\\"wysiwyg-mention\\\" data-mention data-value=\\\"\").concat(entity.data.value, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'LINK') {\n      var targetOption = entity.data.targetOption || '_self';\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" target=\\\"\").concat(targetOption, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'IMAGE') {\n      var alignment = entity.data.alignment;\n\n      if (alignment && alignment.length) {\n        return \"<div style=\\\"text-align:\".concat(alignment, \";\\\"><img src=\\\"\").concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/></div>\");\n      }\n\n      return \"<img src=\\\"\".concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/>\");\n    }\n\n    if (entity.type === 'EMBEDDED_LINK') {\n      return \"<iframe width=\\\"\".concat(entity.data.width, \"\\\" height=\\\"\").concat(entity.data.height, \"\\\" src=\\\"\").concat(entity.data.src, \"\\\" frameBorder=\\\"0\\\"></iframe>\");\n    }\n\n    return text;\n  }\n  /**\n  * For a given section in a block the function will return a further list of sections,\n  * with similar inline styles applicable to them.\n  */\n\n\n  function getInlineStyleSections(block, styles, start, end) {\n    var styleSections = [];\n    var text = Array.from(block.text);\n\n    if (text.length > 0) {\n      var inlineStyles = getStyleArrayForBlock(block);\n      var section;\n\n      for (var i = start; i < end; i += 1) {\n        if (i !== start && sameStyleAsPrevious(inlineStyles, styles, i)) {\n          section.text.push(text[i]);\n          section.end = i + 1;\n        } else {\n          section = {\n            styles: getStylesAtOffset(inlineStyles, i),\n            text: [text[i]],\n            start: i,\n            end: i + 1\n          };\n          styleSections.push(section);\n        }\n      }\n    }\n\n    return styleSections;\n  }\n  /**\n  * Replace leading blank spaces by &nbsp;\n  */\n\n\n  function trimLeadingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = 0; i < replacedText.length; i += 1) {\n        if (sectionText[i] === ' ') {\n          replacedText = replacedText.replace(' ', '&nbsp;');\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * Replace trailing blank spaces by &nbsp;\n  */\n\n  function trimTrailingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = replacedText.length - 1; i >= 0; i -= 1) {\n        if (replacedText[i] === ' ') {\n          replacedText = \"\".concat(replacedText.substring(0, i), \"&nbsp;\").concat(replacedText.substring(i + 1));\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  * like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.\n  */\n\n  function getStyleTagSectionMarkup(styleSection) {\n    var styles = styleSection.styles,\n        text = styleSection.text;\n    var content = getSectionText(text);\n    forEach(styles, function (style, value) {\n      content = addInlineStyleMarkup(style, content);\n    });\n    return content;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  like color, background-color, font-size are applicable.\n  */\n\n\n  function getInlineStyleSectionMarkup(block, styleSection) {\n    var styleTagSections = getInlineStyleSections(block, ['BOLD', 'ITALIC', 'UNDERLINE', 'STRIKETHROUGH', 'CODE', 'SUPERSCRIPT', 'SUBSCRIPT'], styleSection.start, styleSection.end);\n    var styleSectionText = '';\n    styleTagSections.forEach(function (stylePropertySection) {\n      styleSectionText += getStyleTagSectionMarkup(stylePropertySection);\n    });\n    styleSectionText = addStylePropertyMarkup(styleSection.styles, styleSectionText);\n    return styleSectionText;\n  }\n  /*\n  * The method returns markup for an entity section.\n  * An entity section is a continuous section in a block\n  * to which same entity or no entity is applicable.\n  */\n\n\n  function getSectionMarkup(block, entityMap, section, customEntityTransform) {\n    var entityInlineMarkup = [];\n    var inlineStyleSections = getInlineStyleSections(block, ['COLOR', 'BGCOLOR', 'FONTSIZE', 'FONTFAMILY'], section.start, section.end);\n    inlineStyleSections.forEach(function (styleSection) {\n      entityInlineMarkup.push(getInlineStyleSectionMarkup(block, styleSection));\n    });\n    var sectionText = entityInlineMarkup.join('');\n\n    if (section.type === 'ENTITY') {\n      if (section.entityKey !== undefined && section.entityKey !== null) {\n        sectionText = getEntityMarkup(entityMap, section.entityKey, sectionText, customEntityTransform); // eslint-disable-line max-len\n      }\n    } else if (section.type === 'HASHTAG') {\n      sectionText = \"<a href=\\\"\".concat(sectionText, \"\\\" class=\\\"wysiwyg-hashtag\\\">\").concat(sectionText, \"</a>\");\n    }\n\n    return sectionText;\n  }\n  /**\n  * Function will return the markup for block preserving the inline styles and\n  * special characters like newlines or blank spaces.\n  */\n\n\n  function getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform) {\n    var blockMarkup = [];\n    var sections = getSections(block, hashtagConfig);\n    sections.forEach(function (section, index) {\n      var sectionText = getSectionMarkup(block, entityMap, section, customEntityTransform);\n\n      if (index === 0) {\n        sectionText = trimLeadingZeros(sectionText);\n      }\n\n      if (index === sections.length - 1) {\n        sectionText = trimTrailingZeros(sectionText);\n      }\n\n      blockMarkup.push(sectionText);\n    });\n    return blockMarkup.join('');\n  }\n  /**\n  * Function will return html for the block.\n  */\n\n  function getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var blockHtml = [];\n\n    if (isAtomicEntityBlock(block)) {\n      blockHtml.push(getEntityMarkup(entityMap, block.entityRanges[0].key, undefined, customEntityTransform));\n    } else {\n      var blockTag = getBlockTag(block.type);\n\n      if (blockTag) {\n        blockHtml.push(\"<\".concat(blockTag));\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          blockHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          blockHtml.push(' dir = \"auto\"');\n        }\n\n        blockHtml.push('>');\n        blockHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        blockHtml.push(\"</\".concat(blockTag, \">\"));\n      }\n    }\n\n    blockHtml.push('\\n');\n    return blockHtml.join('');\n  }\n\n  /**\n  * Function to check if a block is of type list.\n  */\n\n  function isList(blockType) {\n    return blockType === 'unordered-list-item' || blockType === 'ordered-list-item';\n  }\n  /**\n  * Function will return html markup for a list block.\n  */\n\n  function getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var listHtml = [];\n    var nestedListBlock = [];\n    var previousBlock;\n    listBlocks.forEach(function (block) {\n      var nestedBlock = false;\n\n      if (!previousBlock) {\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.type !== block.type) {\n        listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.depth === block.depth) {\n        if (nestedListBlock && nestedListBlock.length > 0) {\n          listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n          nestedListBlock = [];\n        }\n      } else {\n        nestedBlock = true;\n        nestedListBlock.push(block);\n      }\n\n      if (!nestedBlock) {\n        listHtml.push('<li');\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          listHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          listHtml.push(' dir = \"auto\"');\n        }\n\n        listHtml.push('>');\n        listHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        listHtml.push('</li>\\n');\n        previousBlock = block;\n      }\n    });\n\n    if (nestedListBlock && nestedListBlock.length > 0) {\n      listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n    }\n\n    listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n    return listHtml.join('');\n  }\n\n  /**\n  * The function will generate html markup for given draftjs editorContent.\n  */\n\n  function draftToHtml(editorContent, hashtagConfig, directional, customEntityTransform) {\n    var html = [];\n\n    if (editorContent) {\n      var blocks = editorContent.blocks,\n          entityMap = editorContent.entityMap;\n\n      if (blocks && blocks.length > 0) {\n        var listBlocks = [];\n        blocks.forEach(function (block) {\n          if (isList(block.type)) {\n            listBlocks.push(block);\n          } else {\n            if (listBlocks.length > 0) {\n              var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, customEntityTransform); // eslint-disable-line max-len\n\n              html.push(listHtml);\n              listBlocks = [];\n            }\n\n            var blockHtml = getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform);\n            html.push(blockHtml);\n          }\n        });\n\n        if (listBlocks.length > 0) {\n          var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform); // eslint-disable-line max-len\n\n          html.push(listHtml);\n          listBlocks = [];\n        }\n      }\n    }\n\n    return html.join('');\n  }\n\n  return draftToHtml;\n\n})));\n","import React, { useState } from 'react';\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport { Link, useParams } from 'react-router-dom';\nimport * as $ from 'jquery';\nimport random from 'random';\nimport api from '../../constants/api';\nimport message from '../Message';\nimport ComponentCard from '../ComponentCard';\n\nconst InvoiceData = ({ editInvoiceData, setEditInvoiceData, projectInfo }) => {\n  InvoiceData.propTypes = {\n    editInvoiceData: PropTypes.bool,\n    setEditInvoiceData: PropTypes.func,\n    projectInfo: PropTypes.any,\n  };\n  //All state Varible\n  const { id } = useParams();\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [paymentTerms, setPaymentTerms] = useState('');\n  const [createInvoice, setCreateInvoice] = useState({\n    discount: '',\n    quote_code: '',\n    po_number: '',\n    project_location: '',\n    project_reference: '',\n    invoice_date: '',\n    code: '',\n    so_ref_no: '',\n    site_code: '',\n    attention: '',\n    reference: '',\n    invoice_terms: '',\n    status: 'due',\n    paymentTerms: '',\n    invoice_code: '',\n    order_id: id,\n    invoice_due_date:'',\n  });\n  const [addLineItem, setAddLineItem] = useState([\n    {\n      id: random.int(1, 99),\n      unit: '',\n      qty: '',\n      unit_price: '',\n      total_cost: '',\n      remarks: '',\n      item_title: '',\n      description: '',\n    },\n  ]);\n\n  //setting data in createinvoice\n  const handleInserts = (e) => {\n    setCreateInvoice({ ...createInvoice, [e.target.name]: e.target.value });\n  };\n  const handleDataEditor = (e, type) => {\n    setCreateInvoice({\n      ...createInvoice,\n      [type]: draftToHtml(convertToRaw(e.getCurrentContent())),\n    });\n  };\n\n  //Insert Invoice Item\n  const addLineItemApi = (obj) => {\n    obj.order_id = projectInfo;\n    api\n      .post('/finance/insertInvoiceItem', obj)\n      .then(() => {\n        message('Line Item Added Successfully', 'sucess');\n      })\n      .catch(() => {\n        message('Cannot Add Line Items', 'error');\n      });\n  };\n  //final api call\n  const finalinsertapi = (receipt, results) => {\n    for (let j = 0; j < results.length; j++) {\n      addLineItemApi({\n        description: results[j].description,\n        invoice_id: receipt,\n        amount: results[j].total_cost,\n        item_title: results[j].item_title,\n        item_code: projectInfo.item_code,\n        cost_price: 2,\n        qty: results[j].qty,\n        unit: results[j].unit,\n        remarks: results[j].remarks,\n        unit_price: parseFloat(results[j].unit_price),\n      });\n    }\n  };\n\n  //Insert Invoice\n  const insertInvoice = async (code,results) => {\n    createInvoice.invoice_amount = totalAmount + (7 / 100) * totalAmount;\n    createInvoice.order_id = id;\n    createInvoice.invoice_code = code;\n\n    const now = new Date();\n    if (now.getMonth() === 11) {\n        const current = new Date(now.getFullYear() + 1, 0, now.getDate());\n        createInvoice.invoice_due_date=current;\n          } else {\n        const current = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\n        createInvoice.invoice_due_date=current;\n    }\n   \n    api\n      .post('/finance/insertInvoice', createInvoice)\n      .then((res) => {\n        message('Invoice inserted successfully.', 'success');\n        finalinsertapi(res.data.data.insertId, results);\n        setTimeout(() => {\n          window.location.reload();\n        }, 300);\n      })\n      .catch(() => {\n        message('Network connection error.');\n      });\n  };\n  //generateCode\n  const generateCode = (results, type) => {\n    api\n      .post('/commonApi/getCodeValue', { type })\n      .then((res) => {\n        insertInvoice(results, res.data.data);\n      })\n      .catch(() => {\n        insertInvoice(results, '');\n      });\n  };\n\n \n\n  //Add new line item\n  const AddNewLineItem = () => {\n    setAddLineItem([\n      ...addLineItem,\n      {\n        id: new Date().getTime().toString(),\n        uom: '',\n        qty: '',\n        unitprice: '',\n        total_cost: '',\n        remarks: '',\n        item: '',\n        description: '',\n      },\n    ]);\n  };\n\n  //Invoice item values\n  const getAllValues = () => {\n    const result = [];\n    $('.lineitem tbody tr').each(function input() {\n      const allValues = {};\n      $(this)\n        .find('input')\n        .each(function output() {\n          const fieldName = $(this).attr('name');\n          allValues[fieldName] = $(this).val();\n        });\n      result.push(allValues);\n    });\n    setTotalAmount(0);\n    setAddLineItem([\n      {\n        id: random.int(1, 99),\n        unit: '',\n        qty: '',\n        unit_price: '',\n        total_cost: '',\n        remarks: '',\n        item_title: '',\n        description: '',\n      },\n    ]);\n    generateCode(result, 'invoice');\n  };\n  //Invoice Items Calculation\n  const calculateTotal = () => {\n    let totalValue = 0;\n    const result = [];\n    $('.lineitem tbody tr').each(function input() {\n      const allValues = {};\n      $(this)\n        .find('input')\n        .each(function output() {\n          const fieldName = $(this).attr('name');\n          allValues[fieldName] = $(this).val();\n          allValues.total_cost = allValues.qty * allValues.unit_price;\n        });\n      result.push(allValues);\n    });\n    result.forEach((e) => {\n      if (e.total_cost) {\n        totalValue += parseFloat(e.total_cost);\n      }\n    });\n    setAddLineItem(result);\n    setTotalAmount(totalValue);\n  };\n\n  // Clear row value\n  const ClearValue = (ind) => {\n    setAddLineItem((current) =>\n      current.filter((obj) => {\n        return obj.id !== ind.id;\n      }),\n    );\n    if (ind.total_cost) {\n      const finalTotal = totalAmount - parseFloat(ind.total_cost);\n      setTotalAmount(finalTotal);\n    }\n  };\n  return (\n    <>\n      <Modal size=\"xl\" isOpen={editInvoiceData}>\n        <ModalHeader>\n          Create Invoice\n          <Button\n            className=\"shadow-none\"\n            color=\"secondary\"\n            onClick={() => {\n              setEditInvoiceData(false);\n            }}\n          >\n            X\n          </Button>\n        </ModalHeader>\n        <Card>\n        <ModalBody>\n          <Row>\n            <Col md=\"12\">\n              <Form>\n                <Row>\n                  <Col md=\"3\">\n                    <Button\n                      className=\"shadow-none\"\n                      color=\"primary\"\n                      type=\"button\"\n                      onClick={() => {\n                        AddNewLineItem();\n                      }}\n                    >\n                      Add Line Item\n                    </Button>\n                  </Col>\n                  {/* Invoice Detail */}\n                  <Row>\n                  \n                         <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Discount</Label>\n                        <Input\n                          type=\"number\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.discount}\n                          name=\"discount\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Quote Code</Label>\n                        <Input\n                          type=\"text\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.quote_code}\n                          name=\"quote_code\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>PO Number</Label>\n                        <Input\n                          type=\"text\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.po_number}\n                          name=\"po_number\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Project Location</Label>\n                        <Input\n                          type=\"text\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.project_location}\n                          name=\"project_location\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Project Reference</Label>\n                        <Input\n                          type=\"text\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.project_reference}\n                          name=\"project_reference\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Invoice date</Label>\n                        <Input\n                          type=\"date\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.invoice_date}\n                          name=\"invoice_date\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Code</Label>\n                        <Input\n                          type=\"text\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.code}\n                          name=\"code\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>SO Ref Number</Label>\n                        <Input\n                          type=\"text\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.so_ref_no}\n                          name=\"so_ref_no\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Site Code</Label>\n                        <Input\n                          type=\"text\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.site_code}\n                          name=\"site_code\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Attention</Label>\n                        <Input\n                          type=\"text\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.attention}\n                          name=\"attention\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Reference</Label>\n                        <Input\n                          type=\"textarea\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.reference}\n                          name=\"reference\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"4\">\n                      <FormGroup>\n                        <Label>Invoice Terms</Label>\n                        <Input\n                          type=\"text\"\n                          onChange={handleInserts}\n                          value={createInvoice && createInvoice.invoice_terms}\n                          name=\"invoice_terms\"\n                        />\n                      </FormGroup>\n                    </Col>\n                 \n                    {/* Description form */}\n                    <ComponentCard title=\"Description\">\n                      <Editor\n                        editorState={paymentTerms}\n                        wrapperClassName=\"demo-wrapper mb-0\"\n                        editorClassName=\"demo-editor border mb-4 edi-height\"\n                        onEditorStateChange={(e) => {\n                          handleDataEditor(e, 'payment_terms');\n                          setPaymentTerms(e);\n                        }}\n                      />\n                    </ComponentCard>\n                  </Row>\n                  <Card>\n                  {/* Invoice Item */}\n                  <table className=\"lineitem\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Item</th>\n                        <th scope=\"col\">Description </th>\n                        <th scope=\"col\">UoM</th>\n                        <th scope=\"col\">Qty</th>\n                        <th scope=\"col\">Unit Price</th>\n                        <th scope=\"col\">Total Price</th>\n                        <th scope=\"col\">Remarks</th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {addLineItem.map((item) => {\n                        return (\n                          <tr key={item.id}>\n                            <td data-label=\"Item\">\n                              <Input defaultValue={item.item} type=\"text\" name=\"item_title\" />\n                            </td>\n                            <td data-label=\"Description\">\n                              <Input\n                                defaultValue={item.description}\n                                type=\"text\"\n                                name=\"description\"\n                              />\n                            </td>\n                            <td data-label=\"UoM\">\n                              <Input defaultValue={item.unit} type=\"text\" name=\"unit\" />\n                            </td>\n                            <td data-label=\"Qty\">\n                              <Input defaultValue={item.qty} type=\"number\" name=\"qty\" />\n                            </td>\n                            <td data-label=\"Unit Price\">\n                              <Input\n                                defaultValue={item.unit_price}\n                                onBlur={() => {\n                                  calculateTotal();\n                                }}\n                                type=\"number\"\n                                name=\"unit_price\"\n                              />\n                            </td>\n                            <td data-label=\"Total Price\">\n                              <Input\n                                defaultValue={item.total_cost}\n                                type=\"text\"\n                                name=\"total_cost\"\n                                disabled\n                              />\n                            </td>\n                            <td data-label=\"Remarks\">\n                              <Input defaultValue={item.remarks} type=\"text\" name=\"remarks\" />\n                            </td>\n                            <td data-label=\"Action\">\n                              <Link to=\"\">\n                                <Input type=\"hidden\" name=\"id\" defaultValue={item.id}></Input>\n                                <span\n                                  onClick={() => {\n                                    ClearValue(item);\n                                  }}\n                                >\n                                  Clear\n                                </span>\n                              </Link>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                  </Card>\n                  <ModalFooter>\n                    <Button\n                      className=\"shadow-none\"\n                      color=\"primary\"\n                      onClick={() => {\n                        getAllValues();\n                      }}\n                    >\n                      {' '}\n                      Submit{' '}\n                    </Button>\n                    <Button\n                      className=\"shadow-none\"\n                      color=\"secondary\"\n                      onClick={() => {\n                        setEditInvoiceData(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </ModalFooter>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </ModalBody>\n        </Card>\n      </Modal>\n    </>\n  );\n};\n\nexport default InvoiceData;\n"],"sourceRoot":""}