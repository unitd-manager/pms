{"version":3,"sources":["views/form-validation/FormValidation.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js"],"names":["FormValidate","useForm","register","handleSubmit","errors","useState","firstname","lastname","email","age","title","mobile","developer","Formvalue","setFormvalue","sm","onSubmit","data","className","htmlFor","type","name","ref","required","username","pattern","maxLength","minLength","value","check","inline","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","active","CreationModification","details","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"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","file":"static/js/193.0f36f3a0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Button, FormGroup, Label, ListGroup, ListGroupItem, Input } from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport Form from 'react-validation/build/form';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\n\nimport ComponentCard from '../../components/ComponentCard';\n\nconst FormValidate = () => {\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\n  const [Formvalue, setFormvalue] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    age: '',\n    title: '',\n    mobile: '',\n    developer: '',\n  });\n  const onSubmit = (data) => {\n    setFormvalue(data);\n  };\n  return (\n    <>\n      <BreadCrumbs />\n      <Row>\n        <Col sm=\"12\">\n          <ComponentCard title=\"Form Validation\">\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label className=\"control-Label\" htmlFor=\"firstname\">\n                  First name *\n                </Label>\n                <div className=\"mb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"firstname\"\n                    ref={register({ required: true })}\n                    className=\"form-control\"\n                  />\n                </div>\n                <span className=\"text-danger\">{errors.firstname && 'First name is required.'}</span>\n              </FormGroup>\n              <FormGroup>\n                <Label className=\"control-Label\" htmlFor=\"lastname\">\n                  Last name *\n                </Label>\n                <div className=\"mb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"lastname\"\n                    ref={register({ required: true })}\n                    className=\"form-control\"\n                  />\n                </div>\n                <span className=\"text-danger\">{errors.lastname && 'Last name is required.'}</span>\n              </FormGroup>\n              <FormGroup>\n                <Label className=\"control-Label\" htmlFor=\"username\">\n                  Username *\n                </Label>\n                <div className=\"mb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    ref={register({ required: true })}\n                    className=\"form-control\"\n                  />\n                </div>\n                <span className=\"text-danger\">{errors.username && 'Username is required.'}</span>\n              </FormGroup>\n              <FormGroup>\n                <Label className=\"control-Label\" htmlFor=\"email\">\n                  Email *\n                </Label>\n                <div className=\"mb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"email\"\n                    ref={register({\n                      required: true,\n                      pattern: /^\\S+@\\S+$/i,\n                    })}\n                    className=\"form-control\"\n                  />\n                </div>\n                <span className=\"text-danger\">{errors.email && 'Email is required.'}</span>\n              </FormGroup>\n              <FormGroup>\n                <Label className=\"control-Label\" htmlFor=\"mobile\">\n                  Mobile No *\n                </Label>\n                <div className=\"mb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"mobile\"\n                    ref={register({ required: true, maxLength: 11, minLength: 8 })}\n                    className=\"form-control\"\n                  />\n                </div>\n                <span className=\"text-danger\">\n                  {errors.mobile && 'Enter a Valid mobile number.'}\n                </span>\n              </FormGroup>\n              <FormGroup>\n                <Label className=\"control-Label\" htmlFor=\"age\">\n                  Age *\n                </Label>\n                <div className=\"mb-2\">\n                  <input\n                    type=\"number\"\n                    name=\"age\"\n                    ref={register({ required: true, pattern: /\\d+/ })}\n                    className=\"form-control\"\n                  />\n                </div>\n                <span className=\"text-danger\">{errors.age && 'Please enter number for age.'}</span>\n              </FormGroup>\n              <FormGroup>\n                <Label className=\"control-Label\" htmlFor=\"title\">\n                  Select Gender *\n                </Label>\n                <div className=\"mb-2\">\n                  <select name=\"title\" className=\"form-control\" ref={register({ required: true })}>\n                    <option value=\"\">Select Option</option>\n                    <option value=\"Mr\">Mr</option>\n                    <option value=\"Mrs\">Mrs</option>\n                    <option value=\"Miss\">Miss</option>\n                  </select>\n                </div>\n                <span className=\"text-danger\">{errors.title && 'Please select value.'}</span>\n              </FormGroup>\n              <FormGroup>\n                <Label>Are you a developer?</Label>\n                <br />\n                <FormGroup check inline>\n                  <Input\n                    name=\"developer\"\n                    type=\"radio\"\n                    value=\"Yes\"\n                    ref={register({ required: true })}\n                  />\n                  <Label check>Yes</Label>\n                </FormGroup>\n                <FormGroup check inline>\n                  <Input\n                    name=\"developer\"\n                    type=\"radio\"\n                    value=\"No\"\n                    ref={register({ required: true })}\n                  />\n                  <Label check>No</Label>\n                </FormGroup>\n                {/* <FormGroup>\n                  <Label>\n                    <input\n                      name=\"developer\"\n                      type=\"radio\"\n                      value=\"Yes\"\n                      ref={register({ required: true })}\n                    />{' '}\n                    Yes\n                  </Label>\n\n                  <Label className=\"ml-3\">\n                    <input\n                      name=\"developer\"\n                      type=\"radio\"\n                      value=\"No\"\n                      ref={register({ required: true })}\n                    />{' '}\n                    No\n                  </Label>\n                </FormGroup> */}\n                <span className=\"text-danger\">{errors.developer && 'Please select value.'}</span>\n              </FormGroup>\n              <FormGroup>\n                <Button className=\"button btn-info\" type=\"submit\">\n                  Submit\n                </Button>\n              </FormGroup>\n            </Form>\n            <hr />\n            <h4 className=\"mt-5\">Check Data after form submit</h4>\n            <ListGroup>\n              <ListGroupItem>Firstname: {Formvalue.firstname}</ListGroupItem>\n              <ListGroupItem>Lirstname: {Formvalue.lastname}</ListGroupItem>\n              <ListGroupItem>Username: {Formvalue.username}</ListGroupItem>\n              <ListGroupItem>Age: {Formvalue.age}</ListGroupItem>\n              <ListGroupItem>Email Id: {Formvalue.email}</ListGroupItem>\n              <ListGroupItem>Mobile No: {Formvalue.mobile}</ListGroupItem>\n              <ListGroupItem>Gender: {Formvalue.title}</ListGroupItem>\n              <ListGroupItem>Are you developer?: {Formvalue.developer}</ListGroupItem>\n            </ListGroup>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default FormValidate;\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n"],"sourceRoot":""}