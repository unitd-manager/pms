{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","components/ClientTable/ClientButton.js","components/ClientTable/ClientMainDetails.js","components/Tender/ContactEditModal.js","components/ClientTable/ClientContactGetAndInsert.js","components/ClientTable/ClientProjectDataGet.js","components/ClientTable/ClientInvoiceDataGet.js","components/ClientTable/ClientTenderDataGet.js","components/ClientTable/NavTabs.js","views/EditData/ClientEdit.js","components/ComponentCardV2.js","constants/creationdatetime.js","../node_modules/react-feather/dist/icons/edit-2.js","../node_modules/react-feather/dist/icons/trash-2.js","components/Tender/AddNote.js","components/Tender/ViewNote.js","../node_modules/react-feather/dist/icons/trash.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","ClientButton","editClientsData","navigate","applyChanges","backToList","DeleteClient","sendMail","ComponentCardV2","color","onClick","console","log","window","confirm","ClientMainDetails","handleInputs","clientsDetails","allCountries","md","onChange","value","company_name","name","phone","website","email","fax","address_flat","address_street","address_country","defaultValue","map","country","country_code","address_po_code","retention","ContactEditModal","contactData","editContactEditModal","setEditContactEditModal","useState","contactinsert","setContactInsert","e","target","useEffect","size","isOpen","salutation","selected","first_name","department","phone_direct","mobile","api","post","then","reload","catch","ClientContactGetAndInsert","setContactData","deleteRecord","contactsDetails","addContactToggle","addContactModal","handleAddNewContact","newContactData","AddNewContact","columns","selector","grow","wrap","width","cell","button","sortable","id","element","i","contact_id","bind","toggle","ClientProjectDataGet","projectDetails","project_code","project_id","project_value","status","ClientInvoiceDataGet","invoiceDetails","invoice_id","invoice_code","project_title","invoice_amount","moment","invoice_date","format","invoice_due_date","ClientTenderDataGet","tenderDetails","opportunity_code","opportunity_id","price","NavTabs","activeTab","tabs","ClientsEdit","setActiveTab","setAddContactModal","setClientsDetails","setContactsDetails","setProjectDetails","setTenderDetails","setInvoiceDetails","setallCountries","useParams","useNavigate","editClientsById","company_id","res","data","setNewContactData","get","creationdatetime","text","subject","tab","tabId","staffId","Swal","fire","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","newContactWithCompanyId","AddNote","recordId","roomName","ViewNote","pStyle","textAlign","marginRight","oStyle","outline","border","style","_extends","Object","assign","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Edit2","forwardRef","_ref","ref","_ref$color","_ref$size","rest","React","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","string","oneOfType","number","displayName","Trash2","points","x1","y1","x2","y2","comments","room_name","record_id","addNoteData","setAddNoteData","rows","cols","setTimeout","body","marginBottom","getNote","setGetNote","deleteNotes","commentId","comment_id","marginTop","left","href","object","src","img1","alt","borderRadius","top","right","fontSize","toString","img2","Trash"],"mappings":"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","file":"static/js/82.9dbd32fe.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React from 'react'\nimport { Row, Col, Form, FormGroup,Button } from 'reactstrap';\nimport PropTypes from 'prop-types'\nimport ComponentCardV2 from '../ComponentCardV2';\n\nexport default function ClientButton({editClientsData,navigate,applyChanges,backToList,DeleteClient,sendMail}) {\n    ClientButton.propTypes = {\n        editClientsData: PropTypes.any,\n        navigate: PropTypes.any,\n        applyChanges: PropTypes.func,\n        DeleteClient: PropTypes.func,\n        backToList: PropTypes.func,\n        sendMail: PropTypes.func\n      }\n  return (\n    <Form>\n    <FormGroup>\n      {/* Button */}\n      <ComponentCardV2>\n        <Row>\n        <Col>\n            <Button className='shadow-none'\n              color=\"success\"\n              onClick={() => {\n                \n                  sendMail();\n                \n              }}\n            >\n              Send Mail\n            </Button>\n          </Col>\n          <Col>\n            <Button className='shadow-none'\n              color=\"primary\"\n              onClick={() => {\n                editClientsData();\n                navigate('/Client');\n              }}\n            >\n              Save\n            </Button>\n          </Col>\n          <Col>\n            <Button className='shadow-none'\n              color=\"primary\"\n              onClick={() => {\n                editClientsData();\n                applyChanges();\n                console.log('cancel process');\n              }}\n            >\n              Apply\n            </Button>\n          </Col>\n          <Col>\n            <Button className='shadow-none'\n              color=\"dark\"\n              onClick={() => {\n                if (\n                  window.confirm(\n                    'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\n                  )\n                ) {\n                  navigate('/Client');\n                } else {\n                  applyChanges();\n                }\n              }}\n            >\n              Cancel\n            </Button>\n          </Col> \n          <Col>\n            <Button className='shadow-none'\n              color=\"danger\"\n              onClick={() => {\n                if (\n                  window.confirm(\n                    'Are you sure you want to delete this record? You cannot undo this action!',\n                  )\n                ) {\n                    DeleteClient();\n                  navigate('/Client');\n                } else {\n                  applyChanges();\n                }\n                console.log('back to list');\n              }}\n            >\n              Delete\n            </Button>\n          </Col> \n          <Col>\n            <Button className='shadow-none'\n              color=\"dark\"\n              onClick={() => {\n                backToList();\n                console.log('back to list');\n              }}\n            >\n              Back to List\n            </Button>\n          </Col>\n        </Row>\n      </ComponentCardV2>\n    </FormGroup>\n  </Form>\n  )\n}","import React from 'react'\nimport { Row, Col, Form, FormGroup,Label,Input } from 'reactstrap';\nimport PropTypes from 'prop-types'\n\n\nexport default function ClientMainDetails({handleInputs,clientsDetails,allCountries}) {\n    ClientMainDetails.propTypes = {\n        handleInputs: PropTypes.func,\n        clientsDetails: PropTypes.any,\n        allCountries: PropTypes.any\n      }\n  return (\n    <Form>\n        <FormGroup>\n          \n            <Row>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>\n                    Name <span className=\"required\"> *</span>\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.company_name}\n                    name=\"company_name\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Phone</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.phone}\n                    name=\"phone\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Website </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.website}\n                    name=\"website\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Email</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.email}\n                    name=\"email\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Fax</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.fax}\n                    name=\"fax\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Address 1 </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.address_flat}\n                    name=\"address_flat\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Address 2 </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.address_street}\n                    name=\"address_street\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  {' '}\n                  <Label>Country</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"address_country\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.address_country}\n                  >\n                    <option defaultValue=\"selected\" value=\"\">\n                      Please Select\n                    </option>\n                    {allCountries &&\n                      allCountries.map((country) => (\n                        <option key={country.country_code} value={country.country_code}>{country.name}</option>\n                      ))}\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Postal Code</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.address_po_code}\n                    name=\"address_po_code\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Retention </Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={clientsDetails && clientsDetails.retention}\n                    name=\"retention\"\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n        \n        </FormGroup>\n      </Form>\n  )\n}   ","import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  ModalBody,\n  ModalFooter,\n  Modal,\n  ModalHeader,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport ComponentCard from '../ComponentCard';\nimport message from '../Message';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport '../../views/form-editor/editor.scss';\n\nimport api from '../../constants/api';\n\nconst ContactEditModal = ({ contactData, editContactEditModal, setEditContactEditModal }) => {\n  ContactEditModal.propTypes = {\n    contactData: PropTypes.object,\n    editContactEditModal: PropTypes.bool,\n    setEditContactEditModal: PropTypes.func,\n  };\n\n  const [contactinsert, setContactInsert] = useState(null);\n\n  const handleInputs = (e) => {\n    setContactInsert({ ...contactinsert, [e.target.name]: e.target.value });\n  };\n\n  //Logic for edit data in db\n\n  const editContactsData = () => {\n    api\n      .post('/clients/editContact', contactinsert)\n      .then(() => {\n        message('Record editted successfully', 'success');\n        //  setTimeout(() => {\n        //    window.location.reload()\n        //  }, 300);\n        window.location.reload();\n      })\n      .catch(() => {\n        message('Unable to edit record.', 'error');\n      });\n  };\n\n  useEffect(() => {\n    // editContactById();\n    setContactInsert(contactData);\n  }, [contactData]);\n\n  return (\n    <>\n      <Modal size=\"lg\" isOpen={editContactEditModal}>\n        <ModalHeader>\n          ContactDetails\n          <Button\n            color=\"secondary\"\n            onClick={() => {\n              setEditContactEditModal(false);\n            }}\n          >\n            X\n          </Button>\n        </ModalHeader>\n\n        <ModalBody>\n          <Row>\n            <Col md=\"3\" className=\"mb-4 d-flex justify-content-between\"></Col>\n          </Row>\n          <Row>\n            <Col md=\"2\">\n              <Label>title </Label>\n              <Input\n                type=\"select\"\n                onChange={handleInputs}\n                value={contactinsert && contactinsert.salutation}\n                name=\"salutation\"\n              >\n                <option value=\"\" selected=\"selected\">\n                  Please Select\n                </option>\n                <option value=\"Ms\">Ms</option>\n                <option value=\"Mr\">Mr</option>\n                <option value=\"Mrs\">Mrs</option>\n              </Input>\n            </Col>\n            <Col md=\"2\">\n              <FormGroup>\n                <Label>Name</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={contactinsert && contactinsert.first_name}\n                  name=\"first_name\"\n                />\n              </FormGroup>\n            </Col>\n\n            <Col md=\"2\">\n              <FormGroup>\n                <Label>Email</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={contactinsert && contactinsert.email}\n                  name=\"email\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"2\">\n              <FormGroup>\n                <Label>Position </Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={contactinsert && contactinsert.position}\n                  name=\"position\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"2\">\n              <FormGroup>\n                <Label>Dept </Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={contactinsert && contactinsert.department}\n                  name=\"department\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"2\">\n              <FormGroup>\n                <Label>Phone(Direct) </Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={contactinsert && contactinsert.phone_direct}\n                  name=\"phone_direct\"\n                />\n              </FormGroup>\n            </Col>\n\n            <Col md=\"2\">\n              <FormGroup>\n                <Label>Fax(Direct) </Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={contactinsert && contactinsert.fax}\n                  name=\"fax\"\n                />\n              </FormGroup>\n            </Col>\n\n            <Col md=\"2\">\n              <FormGroup>\n                <Label>Mobile </Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={contactinsert && contactinsert.mobile}\n                  name=\"mobile\"\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n        </ModalBody>\n\n        <ModalFooter>\n          <Row>\n            <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n              <Button\n                color=\"primary\"\n                onClick={() => {\n                  editContactsData();\n                }}\n              >\n                Submit\n              </Button>\n              <Button\n                color=\"secondary\"\n                onClick={() => {\n                  setEditContactEditModal(false);\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </Row>\n        </ModalFooter>\n\n        <ComponentCard></ComponentCard>\n      </Modal>\n    </>\n  );\n};\nexport default ContactEditModal;\n","import React from 'react';\nimport {\n  Row,\n  Form,\n  ModalFooter,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Card,\n  Table,\n  Label,\n  Input,\n  Col,\n  FormGroup,\n  Button,\n  CardBody,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as Icon from 'react-feather';\n\nexport default function ClientContactGetAndInsert({\n  setContactData,\n  setEditContactEditModal,\n  deleteRecord,\n  contactsDetails,\n  addContactToggle,\n  addContactModal,\n  handleAddNewContact,\n  newContactData,\n  AddNewContact,\n}) {\n  ClientContactGetAndInsert.propTypes = {\n    setContactData: PropTypes.func,\n    setEditContactEditModal: PropTypes.func,\n    deleteRecord: PropTypes.func,\n    contactsDetails: PropTypes.any,\n    addContactToggle: PropTypes.func,\n    addContactModal: PropTypes.bool,\n    handleAddNewContact: PropTypes.func,\n    newContactData: PropTypes.object,\n    AddNewContact: PropTypes.func,\n  };\n  //  Table Contact\n  const columns = [\n    {\n      name: 'id',\n      selector: 'contact_id',\n      grow: 0,\n      wrap: true,\n      width: '4%',\n    },\n    {\n      name: 'Edit',\n      selector: 'edit',\n      cell: () => <Icon.Edit2 />,\n      grow: 0,\n      width: 'auto',\n      button: true,\n      sortable: false,\n    },\n    {\n      name: 'Del',\n      selector: 'delete',\n      cell: () => <Icon.Trash />,\n      grow: 0,\n      width: 'auto',\n      wrap: true,\n    },\n    {\n      name: 'Name',\n      selector: 'first_name',\n      sortable: true,\n      grow: 0,\n      wrap: true,\n    },\n    {\n      name: 'Email',\n      selector: 'email',\n      sortable: true,\n      grow: 2,\n      wrap: true,\n    },\n    {\n      name: 'Phone(Direct)',\n      selector: 'phone_direct',\n      sortable: true,\n      grow: 0,\n    },\n    {\n      name: 'Mobile',\n      selector: 'mobile',\n      sortable: true,\n      width: 'auto',\n      grow: 3,\n    },\n    {\n      name: 'Position',\n      selector: 'position',\n      sortable: true,\n      width: 'auto',\n      grow: 3,\n    },\n    {\n      name: 'Dept',\n      selector: 'department',\n      sortable: true,\n      width: 'auto',\n      grow: 3,\n    },\n  ];\n  return (\n    <Form>\n      <Row>\n        <Table id=\"example\" className=\"display border border-secondary rounded\">\n          <thead>\n            <tr>\n              {columns.map((cell) => {\n                return <td key={cell.name}>{cell.name}</td>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {contactsDetails &&\n              contactsDetails.map((element, i) => {\n                return (\n                  <tr key={element.contact_id}>\n                    <td>{i + 1}</td>\n                    <td>\n                      <Link to=\"\">\n                        <span\n                          onClick={() => {\n                            setContactData(element);\n                            setEditContactEditModal(true);\n                          }}\n                        >\n                          <Icon.Edit2 />\n                        </span>\n                      </Link>\n                    </td>\n                    <td>\n                      <Link to=\"\">\n                        <span onClick={() => deleteRecord(element.contact_id)}>\n                          <Icon.Trash2 />\n                        </span>\n                      </Link>\n                    </td>\n                    <td>{element.first_name}</td>\n                    <td>{element.email}</td>\n                    <td>{element.phone_direct}</td>\n                    <td>{element.mobile}</td>\n                    <td>{element.position}</td>\n                    <td>{element.department}</td>\n                  </tr>\n                )\n              })}\n          </tbody>\n        </Table>\n      </Row>\n      <Row>\n        <Col md=\"3\">\n          <FormGroup>\n            <Button color=\"primary\" className=\"shadow-none\" onClick={addContactToggle.bind(null)}>\n              Add New Contact{' '}\n            </Button>\n            <Modal size=\"lg\" isOpen={addContactModal} toggle={addContactToggle.bind(null)}>\n              <ModalHeader toggle={addContactToggle.bind(null)}>New Contact</ModalHeader>\n              <ModalBody>\n                <Row>\n                  <Col md=\"12\">\n                    <Card>\n                      <CardBody>\n                        <Form>\n                          <Row>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <Label>Title</Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"salutation\"\n                                  onChange={handleAddNewContact}\n                                  value={newContactData && newContactData.salutation}\n                                >\n                                  <option value=\"\" selected=\"selected\">\n                                    Please Select\n                                  </option>\n                                  <option value=\"Ms\">Ms</option>\n                                  <option value=\"Mr\">Mr</option>\n                                  <option value=\"Mrs\">Mrs</option>\n                                </Input>\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <Label>Name</Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"first_name\"\n                                  onChange={handleAddNewContact}\n                                  value={newContactData && newContactData.first_name}\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <Label>Email</Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"email\"\n                                  onChange={handleAddNewContact}\n                                  value={newContactData && newContactData.email}\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <Label>Position</Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"position\"\n                                  onChange={handleAddNewContact}\n                                  value={newContactData && newContactData.position}\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <Label>Department</Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"department\"\n                                  onChange={handleAddNewContact}\n                                  value={newContactData && newContactData.department}\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <Label>Phone (Direct)</Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"phone_direct\"\n                                  onChange={handleAddNewContact}\n                                  value={newContactData && newContactData.phone_direct}\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <Label>Fax (Direct)</Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"fax\"\n                                  onChange={handleAddNewContact}\n                                  value={newContactData && newContactData.fax}\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"12\">\n                              <FormGroup>\n                                <Label>Mobile</Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"mobile\"\n                                  onChange={handleAddNewContact}\n                                  value={newContactData && newContactData.mobile}\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                        </Form>\n                      </CardBody>\n                    </Card>\n                  </Col>\n                </Row>\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  className=\"shadow-none\"\n                  color=\"primary\"\n                  onClick={() => {\n                    AddNewContact();\n                    addContactModal(false);\n                  }}\n                >\n                  Submit\n                </Button>\n                <Button\n                  color=\"secondary\"\n                  className=\"shadow-none\"\n                  onClick={addContactToggle.bind(null)}\n                >\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </FormGroup>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n","import React from 'react'\nimport { Row, Form,Table } from 'reactstrap';\nimport {  Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n// import ComponentCard from '../../components/ComponentCard';\n\nexport default function ClientProjectDataGet({projectDetails}) {\n  ClientProjectDataGet.propTypes = {\n    projectDetails: PropTypes.any\n      }\n\n       // Table Project\n  const columns1 = [\n    {\n      name: 'Project Code',\n      \n    },\n\n    {\n      name: 'Title',\n     \n    },\n    {\n      name: 'Project Value',\n     \n    },\n    {\n      name: 'Status',\n      \n    },\n  ];\n  return (\n    <Form>\n    <Row>\n      <Table id=\"example1\" className=\"display border border-secondary rounded\">\n        <thead>\n          <tr>\n            {columns1.map((cell) => {\n              return <td key={cell.name}>{cell.name}</td>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {projectDetails &&\n            projectDetails.map((element) => {\n              return (\n                <tr key={element.project_code}>\n                  <td>{element.project_code}</td>\n                  <td>\n                    <Link to={`/projectEdit/${element.project_id}`}>{element.title}</Link>\n                  </td>\n                  <td>{element.project_value}</td>\n                  <td>{element.status}</td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </Table>\n    </Row>\n  </Form>\n  )\n}","import React from 'react';\nimport { Row, Form, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport default function ClientInvoiceDataGet({ invoiceDetails }) {\n  ClientInvoiceDataGet.propTypes = {\n    invoiceDetails: PropTypes.any,\n  };\n\n  // Table Invoice\n  const columns2 = [\n    {\n      name: 'Invoice Code',\n    },\n\n    {\n      name: 'Title',\n    },\n    {\n      name: 'Invoice Amount',\n    },\n    {\n      name: 'Invoice Date',\n    },\n    {\n      name: 'Invoice Due Date',\n    },\n    {\n      name: 'Status',\n    },\n  ];\n  return (\n    <Form>\n      <Row>\n        <Table id=\"example2\" className=\"display border border-secondary rounded\">\n          <thead>\n            <tr>\n              {columns2.map((cell) => {\n                return <td key={cell.name}>{cell.name}</td>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {invoiceDetails &&\n              invoiceDetails.map((element) => {\n                return (\n                  <tr key={element.invoice_code}>\n                    <td>\n                      {' '}\n                      <Link to={`/InvoiceEdit/${element.invoice_id}`}>{element.invoice_code}</Link>\n                    </td>\n                    <td>{element.project_title}</td>\n                    <td>{element.invoice_amount}</td>\n                    <td>{moment(element.invoice_date).format('YYYY-MM-DD')}</td>\n                    <td>{moment(element.invoice_due_date).format('YYYY-MM-DD')}</td>\n                    <td>{element.status}</td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      </Row>\n    </Form>\n  );\n}\n","import React from 'react'\nimport { Row, Form,Table } from 'reactstrap';\nimport {  Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n// import ComponentCard from '../../components/ComponentCard';\n\nexport default function ClientTenderDataGet({tenderDetails}) {\n  ClientTenderDataGet.propTypes = {\n    tenderDetails: PropTypes.object\n      }\n\n  // Table Tender\n  const columns3 = [\n    {\n      name: 'Tender Code',\n     \n    },\n\n    {\n      name: 'Title',\n      \n    },\n    {\n      name: 'Est Value',\n      \n    },\n    {\n      name: 'Status',\n     \n    },\n  ];\n  return (\n    <Form>\n              <Row>\n                <Table id=\"example3\" className=\"display border border-secondary rounded\">\n                  <thead>\n                    <tr>\n                      {columns3.map((cell) => {\n                        return <td key={cell.name}>{cell.name}</td>;\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tenderDetails &&\n                      tenderDetails.map((element) => {\n                        return (\n                          <tr key={element.opportunity_code}>\n                            <td>{element.opportunity_code}</td>\n                            <td>\n                              {' '}\n                              <Link to={`/TenderEdit/${element.opportunity_id}`}>\n                                {element.title}\n                              </Link>\n                            </td>\n                            <td>{element.price}</td>\n                            <td>{element.status}</td>\n                          </tr>\n                        );\n                      })}\n                  </tbody>\n                </Table>\n              </Row>\n            </Form>\n  )\n}","import React from 'react'\nimport {Nav,NavItem,NavLink} from 'reactstrap';\nimport PropTypes from 'prop-types'\n\nexport default function NavTabs({toggle,activeTab}) {\n    NavTabs.propTypes = {\n        toggle: PropTypes.func,\n        activeTab:PropTypes.any\n          }\n  return (\n    <Nav tabs>\n    <NavItem>\n      <NavLink\n        className={activeTab === '1' ? 'active' : ''}\n        onClick={() => {\n          toggle('1');\n        }} >Contacts Linked\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink\n        className={activeTab === '2' ? 'active' : ''}\n        onClick={() => {\n          toggle('2');\n        }}>Projects Linked\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink\n        className={activeTab === '3' ? 'active' : ''}\n        onClick={() => {\n          toggle('3');\n        }}>Invoice Linked\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink\n        className={activeTab === '4' ? 'active' : ''}\n        onClick={() => {\n          toggle('4');\n        }}>Tender Linked\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink\n        className={activeTab === '5' ? 'active' : ''}\n        onClick={() => {\n          toggle('5');\n        }}>Add notes\n      </NavLink>\n    </NavItem>\n  </Nav>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { TabPane, TabContent } from 'reactstrap';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Swal from 'sweetalert2'\nimport ClientButton from '../../components/ClientTable/ClientButton';\nimport ClientMainDetails from '../../components/ClientTable/ClientMainDetails';\nimport ContactEditModal from '../../components/Tender/ContactEditModal';\nimport ClientContactGetAndInsert from '../../components/ClientTable/ClientContactGetAndInsert';\nimport ClientProjectDataGet from '../../components/ClientTable/ClientProjectDataGet';\nimport ClientInvoiceDataGet from '../../components/ClientTable/ClientInvoiceDataGet';\nimport ClientTenderDataGet from '../../components/ClientTable/ClientTenderDataGet';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport message from '../../components/Message';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport '../form-editor/editor.scss'; \nimport ComponentCard from '../../components/ComponentCard';\nimport api from '../../constants/api';\nimport NavTabs from '../../components/ClientTable/NavTabs';\nimport AddNote from '../../components/Tender/AddNote';\nimport ViewNote from '../../components/Tender/ViewNote';\nimport creationdatetime from '../../constants/creationdatetime';\n\nconst ClientsEdit = () => {\n  //Const Variables\n  const [activeTab, setActiveTab] = useState('1');\n  const [contactData, setContactData] = useState();\n  const [addContactModal, setAddContactModal] = useState(false);\n  const [clientsDetails, setClientsDetails] = useState();\n  const [contactsDetails, setContactsDetails] = useState(null);\n  const [editContactEditModal, setEditContactEditModal] = useState(false);\n  const [projectDetails, setProjectDetails] = useState();\n  const [tenderDetails, setTenderDetails] = useState();\n  const [invoiceDetails, setInvoiceDetails] = useState();\n  const [allCountries, setallCountries] = useState();\n\n  // Navigation and Parameter Constants\n  const { id } = useParams();\n  const navigate = useNavigate();\n  //  button\n  const applyChanges = () => {};\n  const backToList = () => {\n    navigate('/client');\n  };\n  //  toggle\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n  const addContactToggle = () => {\n    setAddContactModal(!addContactModal);\n  };\n\n  //Client Functions/Methods\n  const handleInputs = (e) => {\n    setClientsDetails({ ...clientsDetails, [e.target.name]: e.target.value });\n  };\n\n  //  Get Clients By Id\n  const editClientsById = () => {\n    api\n      .post('/clients/getClientsById', { company_id: id })\n      .then((res) => {\n        setClientsDetails(res.data.data[0]);\n      })\n      .catch(() => {\n        message('Clients Data Not Found', 'info');\n      });\n  };\n\n  //Logic for edit data in db\n  const editClientsData = () => {\n    if (clientsDetails.company_name !== '') {\n      clientsDetails.modification_date = creationdatetime\n      api\n        .post('/clients/editClients', clientsDetails)\n        .then(() => {\n          message('Record editted successfully', 'success');\n          editClientsById()\n        })\n        .catch(() => {\n          message('Unable to edit record.', 'error');\n        });\n    } else {\n      message('Please fill all required fields', 'warning');\n    }\n  };\n\n  // get Contact Linked by id\n  const getContactLinked = () => {\n    api\n      .post('/clients/getContactLinkedByCompanyId', { company_id: id })\n      .then((res) => {\n        setContactsDetails(res.data.data);\n      })\n      .catch(() => {\n        message('Conatct Data Not Found', 'info');\n      });\n  };\n  //Email\n  const sendMail = () => {\n    if (\n      window.confirm(\n        ' Are you sure do you want to send Mail to this Client \\n',\n      )\n    ) {\n    const to =\"fatema@unitdtechnologies.com\";\n    const text = \"Hello\";\n    const subject =\"Test Mail\";\n    api\n      .post('/email/sendemail',{to,text,subject})\n      .then(() => {\n        message('Email sent successfully.', 'success');\n      })\n      .catch(() => {\n        message('Email Data Not Found', 'info');\n      });\n    }\n   else {\n    applyChanges();\n  }\n  };\n\n  // insert Contact\n  const [newContactData, setNewContactData] = useState({\n    salutation: '',\n    first_name: '',\n    email: '',\n    position: '',\n    department: '',\n    phone_direct: '',\n    fax: '',\n    mobile: '',\n  });\n\n  const AddNewContact = () => {\n    const newContactWithCompanyId = newContactData;\n    newContactWithCompanyId.company_id = id;\n    api\n      .post('/clients/insertContact', newContactWithCompanyId)\n      .then(() => {\n        // const insertedDataId = res.data.data.insertId;\n        message('Contact inserted successfully.', 'success');\n        window.location.reload();\n      })\n      .catch(() => {\n        message('Network connection error.', 'error');\n      });\n  };\n\n  //Contact Functions/Methods\n  const handleAddNewContact = (e) => {\n    setNewContactData({ ...newContactData, [e.target.name]: e.target.value });\n  };\n  //  deleteRecord\n  const DeleteClient = () => {\n    api\n      .post('/clients/deleteCompany', { company_id: id })\n      .then(() => {\n        message('Record editted successfully', 'success');\n      })\n      .catch(() => {\n        message('Unable to delete record.', 'error');\n      });\n  };\n\n  // Project By Id\n  const editProjectById = () => {\n    api\n      .post('/clients/getProjectsByIdCompany', { company_id: id })\n      .then((res) => {\n        setProjectDetails(res.data.data);\n      })\n      .catch(() => {\n        message('Project Data Not Found', 'info');\n      });\n  };\n\n  // Invoice By id\n  const editInvoiceById = () => {\n    api\n      .post('/clients/getMainInvoiceByidCompany', { company_id: id })\n      .then((res) => {\n        setInvoiceDetails(res.data.data);\n      })\n      .catch(() => {\n        message('Invoice Data Not Found', 'info');\n      });\n  };\n\n  // Tender By id\n  const editTenderById = () => {\n    api\n      .post('/clients/getTendersByIdcompany', { company_id: id })\n      .then((res) => {\n        setTenderDetails(res.data.data);\n      })\n      .catch(() => {\n        message('Tender Data Not Found', 'info');\n      });\n  };\n  //Api for getting all countries\n  const getAllCountries = () => {\n    api\n      .get('/clients/getCountry')\n      .then((res) => {\n        setallCountries(res.data.data);\n      })\n      .catch(() => {\n        message('Country Data Not Found', 'info');\n      });\n  };\n\n  // Delete Contact\n  const deleteRecord = (staffId) => {\n    Swal.fire({\n      title: `Are you sure? `,\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n    api\n      .post('/clients/deleteContact', { contact_id: staffId })\n      .then((res) => {\n        console.log(res)\n        Swal.fire(\n          'Deleted!',\n          'Contact has been deleted.',\n          'success'\n        )\n        message('Record deleted successfully', 'success');\n        window.location.reload();\n      })\n      .catch(() => {\n        message('Unable to delete record.', 'error');\n      });\n      }\n    })\n  };\n\n  useEffect(() => {\n    editClientsById();\n    editProjectById();\n    getContactLinked();\n    editInvoiceById();\n    editTenderById();\n    getAllCountries();\n \n  }, [id]);\n\n  return (\n    <>\n     {/* BreadCrumbs */}\n     <BreadCrumbs heading={clientsDetails && clientsDetails.company_name} />\n      {/* Button List */}\n      <ClientButton\n        editClientsData={editClientsData}\n        navigate={navigate}\n        applyChanges={applyChanges}\n        DeleteClient={DeleteClient}\n        backToList={backToList}\n        sendMail={sendMail}\n      ></ClientButton>\n     \n      {/* Client Main details */}\n       <ComponentCard\n            title=\"Client Details\"\n            creationModificationDate={clientsDetails}\n          \n          > \n        <ClientMainDetails\n          handleInputs={handleInputs}\n          clientsDetails={clientsDetails}\n          allCountries={allCountries}\n        ></ClientMainDetails>\n      </ComponentCard>\n      {/* ClientcreationModification */}\n      {/* <ComponentCard>\n        <ClientcreationModification clientsDetails={clientsDetails}></ClientcreationModification>\n      </ComponentCard> */}\n      <ComponentCard title=\"More Details\">\n        <ToastContainer></ToastContainer>\n        {/* Nav Tab */}\n        <NavTabs toggle={toggle} activeTab={activeTab}></NavTabs>\n        <TabContent className=\"p-4\" activeTab={activeTab}>\n          {/* Contact Linked */}\n          <TabPane tabId=\"1\">\n            <ClientContactGetAndInsert\n              setContactData={setContactData}\n              setEditContactEditModal={setEditContactEditModal}\n              deleteRecord={deleteRecord}\n              contactsDetails={contactsDetails}\n              addContactToggle={addContactToggle}\n              addContactModal={addContactModal}\n              handleAddNewContact={handleAddNewContact}\n              newContactData={newContactData}\n              AddNewContact={AddNewContact}\n            ></ClientContactGetAndInsert>\n            {/* Contact Linked Edit modal */}\n            <ContactEditModal\n              editContactEditModal={editContactEditModal}\n              setEditContactEditModal={setEditContactEditModal}\n              contactData={contactData}\n            />\n          </TabPane>\n          {/* clientProject */}\n          <TabPane tabId=\"2\">\n            <ClientProjectDataGet projectDetails={projectDetails}></ClientProjectDataGet>\n          </TabPane>\n          {/* ClientInvoice */}\n          <TabPane tabId=\"3\">\n            <ClientInvoiceDataGet invoiceDetails={invoiceDetails}></ClientInvoiceDataGet>\n          </TabPane>\n          {/* ClientTender */}\n          <TabPane tabId=\"4\">\n            <ClientTenderDataGet tenderDetails={tenderDetails}></ClientTenderDataGet>\n          </TabPane>\n          {/* ADD NOTE */}\n          <TabPane tabId=\"5\">\n          <ComponentCard title=\"Add a note\">\n            <AddNote recordId={id} roomName=\"AccountEdit\" />\n            <ViewNote recordId={id} roomName=\"AccountEdit\" />\n          </ComponentCard>\n          </TabPane>\n        </TabContent>\n      </ComponentCard>\n    </>\n  );\n};\nexport default ClientsEdit;\n","import { Card, CardBody } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst pStyle = {\n  textAlign: 'right',\n  marginRight: '10px',\n};\nconst oStyle={\noutline:'none',\nborder:'none'\n};\n\nconst ComponentCardV2 = ({ children }) => {\n  return (\n    <Card className='shadow-none'>\n      <CardBody style={pStyle} >\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCardV2.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ComponentCardV2;\n","import moment from \"moment\"\n\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\nexport default creationdatetime \n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Edit2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"\n  }));\n});\nEdit2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit2.displayName = 'Edit2';\nexport default Edit2;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\nimport moment from 'moment';\nimport message from '../Message';\nimport api from '../../constants/api';\n\nfunction AddNote({ recordId,roomName }) {\n  AddNote.propTypes = {\n    recordId: PropTypes.string,\n    roomName:PropTypes.string\n  };\n\n  const [addNoteData, setAddNoteData] = useState({\n    comments: '',\n    room_name:roomName,\n    record_id: recordId,\n    creation_date: moment().format('DD-MM-YYYY'),\n  });\n\n  const handleData = (e) => {\n    setAddNoteData({ ...addNoteData, [e.target.name]: e.target.value });\n  };\n\n  const SubmitNote = () => {\n    //setAddNoteData(console.log(addNoteData))\n    api.post('/note/addNote', addNoteData).then(() => {\n      message('Add Note Successfully', 'success');\n      setTimeout(() => {\n        window.location.reload();\n      }, 400);\n    });\n  };\n\n  return (\n    <>\n        <Row>\n          <textarea id=\"note\" name=\"comments\" rows=\"4\" cols=\"50\" onChange={handleData} />\n        </Row>\n        <Row className=\"mb-2\"></Row>\n        <Row className=\"mb-1\">\n          <Col md=\"1\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary btn-sm shadow-none\"\n              onClick={SubmitNote}\n            >\n              Submit\n            </button>\n          </Col>\n          <Col md=\"1\">\n            <button type=\"button\" className=\"btn btn-dark btn-sm shadow-none\">\n              Cancel\n            </button>\n          </Col>\n        </Row>\n    </>\n  );\n}\n\nexport default AddNote;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Media } from 'reactstrap';\nimport Swal from 'sweetalert2';\nimport * as Icon from 'react-feather';\nimport PropTypes from 'prop-types';\nimport img1 from '../../assets/images/users/user1.jpg';\nimport img2 from '../../assets/images/users/user2.jpg';\nimport message from '../Message';\nimport api from '../../constants/api';\n\nfunction ViewNote({ roomName, recordId }) {\n  ViewNote.propTypes = {\n    roomName: PropTypes.string,\n    recordId: PropTypes.string,\n  };\n  const body = {\n    width: '100%',\n    marginBottom: '10px',\n  };\n\n  const [getNote, setGetNote] = useState(null);\n\n  const getNotes = () => {\n    api\n      .post('/note/getNotes', {\n        record_id: recordId,\n        room_name: roomName,\n      })\n      .then((res) => {\n        setGetNote(res.data.data);\n      });\n  };\n\n  const deleteNotes = (commentId) => {\n    // console.log(commentId);\n\n    Swal.fire({\n      title: `Are you sure?`,\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        api\n          .post('/note/deleteNotes', { comment_id: commentId })\n          .then((res) => {\n            console.log(res);\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\n            window.location.reload();\n          })\n          .catch(() => {\n            message('Unable to Delete Media', 'info');\n          });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getNotes();\n  }, [recordId]);\n\n  return (\n    <>\n      <Row style={{ marginTop: 20 }}>\n        {getNote &&\n          getNote.map((e, i) => {\n            return (\n              <>\n                {i % 2 === 0 ? (\n                  <Media className=\"d-flex\" key={e.comment_id.toString()}>\n                    <Media left href=\"#\">\n                      <Media\n                        object\n                        src={img1}\n                        alt=\"Generic placeholder image\"\n                        width=\"40\"\n                        style={{ borderRadius: 50 }}\n                      />\n                    </Media>\n\n                    <Media body className=\"ms-3\" style={body}>\n                      <Media heading>\n                        <div style={{ position: 'relative' }}>\n                          Hello {e.name}\n                          <p style={{ position: 'absolute', top: 0, right: 0, fontSize: 12 }}>\n                            {e.creation_date}\n                            <button\n                              type=\"button\"\n                              className=\"btn\"\n                              onClick={() => {\n                                deleteNotes(e.comment_id);\n                              }}\n                            >\n                              <Icon.Trash2 style={{ width: 20 }} />{' '}\n                            </button>\n                          </p>\n                        </div>\n                      </Media>\n                      {e.comments}\n                    </Media>\n                  </Media>\n                ) : (\n                  <Media className=\"ms-3\" key={e.comment_id.toString()}>\n                    <Media className=\"d-flex my-4\">\n                      <Media left href=\"#\">\n                        <Media\n                          object\n                          src={img2}\n                          alt=\"Generic placeholder image\"\n                          width=\"40\"\n                          style={{ borderRadius: 50 }}\n                        />\n                      </Media>\n                      <Media body className=\"ms-3\" style={{ width: '100%' }}>\n                        <Media heading>\n                          <div style={{ position: 'relative' }}>\n                            Hello {e.name}\n                            <p\n                              style={{\n                                position: 'absolute',\n                                top: 0,\n                                right: 0,\n                                fontSize: 12,\n                              }}\n                            >\n                              {e.creation_date}\n                              <button\n                                type=\"button\"\n                                className=\"btn\"\n                                onClick={() => {\n                                  deleteNotes(e.comment_id);\n                                }}\n                              >\n                                <Icon.Trash2 style={{ width: 20 }} />{' '}\n                              </button>\n                            </p>\n                          </div>\n                        </Media>\n                        {e.comments}\n                      </Media>\n                    </Media>\n                  </Media>\n                )}\n              </>\n            );\n          })}\n      </Row>\n    </>\n  );\n}\n\nexport default ViewNote;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }));\n});\nTrash.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash.displayName = 'Trash';\nexport default Trash;"],"sourceRoot":""}