{"version":3,"sources":["views/form-editor/FormEditor.js","layouts/breadcrumbs/BreadCrumbs.js","components/dashboard/dashboardCards/DashCard.js"],"names":["content","entityMap","blocks","key","text","type","depth","inlineStyleRanges","entityRanges","data","FormEditor","useState","convertFromRaw","contentState","setEditorState","title","subtitle","wrapperClassName","editorClassName","onContentStateChange","c","raw","disabled","value","JSON","stringify","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","DashCard","children","actions"],"mappings":"8MASMA,EAAU,CACdC,UAAW,GACXC,OAAQ,CACN,CACEC,IAAK,QACLC,KAAM,kCACNC,KAAM,WACNC,MAAO,EACPC,kBAAmB,GACnBC,aAAc,GACdC,KAAM,MAyBGC,UApBI,WACjB,MAAuCC,mBAASC,yBAAeZ,IAA/D,mBAAOa,EAAP,KAAqBC,EAArB,KAIA,OACE,qCACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAUC,MAAM,iBAAiBC,SAAS,oCAA1C,UACE,cAAC,SAAD,CACEC,iBAAiB,oBACjBC,gBAAgB,qCAChBC,qBAVqB,SAACC,GAC5BN,EAAeM,MAWX,cAAC,IAAD,CAAOf,KAAK,WAAWgB,IAAK,EAAGC,UAAQ,EAACC,MAAOC,KAAKC,UAAUZ,EAAc,KAAM,a,iCCtC1F,mCAwBea,IApBK,SAACC,GACnB,IAAMC,EAAWC,cACXC,EAAWF,EAASG,SAASC,MAAM,KAAK,GACxCC,EAAYL,EAASG,SAASC,MAAM,KAAK,GAE/C,OACE,qCAEE,6BAAKL,EAAKO,UACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,GAAG,IAAIC,IAAKC,IAAMC,UAAU,uBAA5C,kBAGCR,EAAW,cAAC,IAAD,CAAgBS,QAAM,EAAtB,SAAwBT,IAA6B,GAChEG,EAAY,cAAC,IAAD,CAAgBM,QAAM,EAAtB,SAAwBN,IAA8B,W,6EClB3E,mBA2BeO,IAxBE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAU1B,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAU0B,EAAc,EAAdA,QAC7C,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAUJ,UAAU,MAApB,UACE,sBAAKA,UAAU,SAAf,UACE,gCACE,cAAC,IAAD,CAAWF,IAAI,KAAf,SAAqBrB,IACrB,cAAC,IAAD,CAAcuB,UAAU,aAAxB,SAAsCtB,OAExC,qBAAKsB,UAAU,UAAf,SAA0BI,OAE5B,qBAAKJ,UAAU,OAAf,SAAuBG","file":"static/js/113.c7971df9.chunk.js","sourcesContent":["import { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { useState } from 'react';\nimport { convertFromRaw } from 'draft-js';\nimport { Input } from 'reactstrap';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport DashCard from '../../components/dashboard/dashboardCards/DashCard';\nimport './editor.scss';\n\nconst content = {\n  entityMap: {},\n  blocks: [\n    {\n      key: '637gr',\n      text: 'Initialized from content state.',\n      type: 'unstyled',\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {},\n    },\n  ],\n};\n\nconst FormEditor = () => {\n  const [contentState, setEditorState] = useState(convertFromRaw(content));\n  const onContentStateChange = (c) => {\n    setEditorState(c);\n  };\n  return (\n    <>\n      <BreadCrumbs />\n      <DashCard title=\"Wysiwyg Editor\" subtitle=\"you can use this editor component\">\n        <Editor\n          wrapperClassName=\"demo-wrapper mb-0\"\n          editorClassName=\"demo-editor border mb-4 edi-height\"\n          onContentStateChange={onContentStateChange}\n        />\n        <Input type=\"textarea\" raw={4} disabled value={JSON.stringify(contentState, null, 4)} />\n      </DashCard>\n    </>\n  );\n};\n\nexport default FormEditor;\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst DashCard = ({ children, title, subtitle, actions }) => {\n  return (\n    <Card>\n      <CardBody className=\"p-4\">\n        <div className=\"d-flex\">\n          <div>\n            <CardTitle tag=\"h4\">{title}</CardTitle>\n            <CardSubtitle className=\"text-muted\">{subtitle}</CardSubtitle>\n          </div>\n          <div className=\"ms-auto\">{actions}</div>\n        </div>\n        <div className=\"mt-3\">{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nDashCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  actions: PropTypes.node,\n};\n\nexport default DashCard;\n"],"sourceRoot":""}