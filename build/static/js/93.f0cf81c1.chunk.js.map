{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","components/StaffTable/KeyStaffDetails.js","components/StaffTable/KeyStaffAddress.js","components/StaffTable/StaffButton.js","views/EditData/StaffEdit.js","components/ComponentCardV2.js","components/ProjectModal/ViewFileComponentV2.js","constants/creationdatetime.js","components/Tender/AttachmentModalV2.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","KeyStaffDetails","stafftypedetails","staffeditdetails","handleInputs","userdetails","staffteamdetails","md","onChange","value","first_name","name","email","pass_word","status","defaultValue","user_group_id","map","ele","team","staff_type","staff_rate","defaultChecked","published","KeyStaffAddress","allCountries","address_street","address_town","address_state","address_country","country","country_code","StaffButton","saveChanges","applyChanges","backToList","editStaffData","navigate","ComponentCardV2","color","onClick","window","confirm","StaffEdit","useState","setStaffEditDetails","setStaffTypetDetails","setStaffTeamDetails","setUserDetails","RoomName","setRoomName","fileTypes","setFileTypes","attachmentModal","setAttachmentModal","setallCountries","modelType","pictureData","setDataForPicture","id","useParams","useNavigate","e","target","editStaffById","api","post","staff_id","then","res","resObj","data","catch","useEffect","get","test","reload","creationdatetime","deleteStaffData","xs","width","AttachmentModalV2","moduleId","roomName","altTagData","desc","recordType","mediaType","ViewFileComponentV2","pStyle","textAlign","marginRight","oStyle","outline","border","style","updateFile","tableStyle","getFile","setGetFile","getFiles","record_id","room_name","href","rel","fileId","media_id","prevFiles","filter","file","moment","format","setUpdateFile","setFile","handleValue","setHandleValue","uploaded","setUploaded","isOpen","multiple","handleChange","fiels","arrayOfObj","Object","entries","console","log","types","role","keys","length","FormData","forEach","append","onUploadProgress","filedata","Math","round","loaded","total","setTimeout","uploadFile"],"mappings":"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","file":"static/js/93.f0cf81c1.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport ComponentCard from '../ComponentCard';\n\nexport default function KeyStaffDetails({\n  stafftypedetails,\n  staffeditdetails,\n  handleInputs,\n  userdetails,\n  staffteamdetails,\n}) {\n  KeyStaffDetails.propTypes = {\n    staffeditdetails: PropTypes.any,\n    handleInputs: PropTypes.func,\n    userdetails: PropTypes.array,\n    staffteamdetails: PropTypes.array,\n    stafftypedetails: PropTypes.array,\n  };\n  return (\n    <Form>\n      <FormGroup>\n      <ComponentCard\n            title=\"Staff Details\"\n            creationModificationDate={staffeditdetails}\n          \n          > \n          <Row>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>\n                  Name <span className=\"required\"> *</span>\n                </Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.first_name}\n                  name=\"first_name\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>\n                  Email <span className=\"required\"> *</span>\n                </Label>\n                <Input\n                  type=\"email\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.email}\n                  name=\"email\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Password</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.pass_word}\n                  name=\"pass_word\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Status</Label>\n                <Input\n                  type=\"select\"\n                  name=\"status\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.status}\n                >\n                  <option value=\"\">Please Select</option>\n                  <option defaultValue=\"Current\">\n                    Current\n                  </option>\n                  <option value=\"Archive\">Archive</option>\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>User Group</Label>\n                <Input\n                  type=\"select\"\n                  name=\"user_group_id\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.user_group_id}\n                >\n                  <option defaultValue=\"selected\">\n                    Please Select\n                  </option>\n                  {userdetails &&\n                    userdetails.map((ele) => {\n                      return <option key={ele.user_group_id} value={ele.user_group_id}>{ele.title}</option>;\n                    })}\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Staff Team</Label>\n                <Input\n                  type=\"select\"\n                  name=\"team\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.team}\n                >\n                  <option defaultValue=\"selected\">\n                    Please Select\n                  </option>\n                  {staffteamdetails &&\n                    staffteamdetails.map((ele) => {\n                      return <option key={ele.value} value={ele.value}>{ele.value}</option>;\n                    })}\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Staff Type</Label>\n                <Input\n                  type=\"select\"\n                  name=\"staff_type\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.staff_type}\n                >\n                  <option defaultValue=\"selected\">\n                    Please Select\n                  </option>\n                  {stafftypedetails &&\n                    stafftypedetails.map((ele) => {\n                      return <option key={ele.value} value={ele.value}>{ele.value}</option>;\n                    })}\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Staff Rate</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.staff_rate}\n                  name=\"staff_rate\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Position</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.position}\n                  name=\"position\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Published</Label>\n                <br></br>\n                <Input\n                  name=\"published\"\n                  value=\"1\"\n                  type=\"radio\"\n                  defaultChecked={staffeditdetails && staffeditdetails.published === 1 && true}\n                  onChange={handleInputs}\n                />\n                <Label>Yes</Label>\n                <Input\n                  name=\"published\"\n                  value=\"0\"\n                  type=\"radio\"\n                  defaultChecked={staffeditdetails && staffeditdetails.published === 0 && true}\n                  onChange={handleInputs}\n                />\n                <Label>No</Label>\n              </FormGroup>\n            </Col>\n          </Row>\n        </ComponentCard>\n      </FormGroup>\n    </Form>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport ComponentCard from '../ComponentCard';\n\nexport default function KeyStaffAddress({ staffeditdetails, handleInputs, allCountries }) {\n  KeyStaffAddress.propTypes = {\n    staffeditdetails: PropTypes.any,\n    handleInputs: PropTypes.func,\n    allCountries: PropTypes.array,\n  };\n  return (\n    <Form>\n      <FormGroup>\n        <ComponentCard title=\"Address\">\n          <Row>\n            <Col md=\"6\">\n              <FormGroup>\n                <Label>Street Address</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.address_street}\n                  name=\"address_street\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\">\n              <FormGroup>\n                <Label>Town/Suburb</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.address_town}\n                  name=\"address_town\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\">\n              <FormGroup>\n                <Label>State</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.address_state}\n                  name=\"address_state\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\">\n              <FormGroup>\n                <Label>Country</Label>\n                <Input\n                  type=\"select\"\n                  name=\"address_country\"\n                  onChange={handleInputs}\n                  value={staffeditdetails && staffeditdetails.address_country}\n                >\n                  <option defaultValue=\"selected\" >\n                    Please Select\n                  </option>\n                  {allCountries &&\n                    allCountries.map((country) => (\n                      <option key={country.country_code} value={country.country_code}>{country.name}</option>\n                    ))}\n                </Input>\n              </FormGroup>\n            </Col>\n          </Row>\n        </ComponentCard>\n      </FormGroup>\n    </Form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Form, FormGroup } from 'reactstrap';\nimport ComponentCardV2 from '../ComponentCardV2';\n\n\nexport default function StaffButton({\n  saveChanges,\n  applyChanges,\n  backToList,\n  editStaffData,\n  navigate,\n}) {\n  StaffButton.propTypes = {\n    saveChanges: PropTypes.func,\n    applyChanges: PropTypes.func,\n    backToList: PropTypes.func,\n    editStaffData: PropTypes.func,\n    navigate: PropTypes.any,\n  };\n  return (\n    <Form>\n      <FormGroup>\n        <ComponentCardV2>\n          <Row>\n            <Col>\n              <Button  className='shadow-none'\n                color=\"primary\"\n                onClick={() => {\n                  editStaffData();\n                  saveChanges();\n                }}\n              >\n                Save\n              </Button>\n            </Col>\n            <Col>\n              <Button  className='shadow-none'\n                color=\"primary\"\n                onClick={() => {\n                  editStaffData();\n                  applyChanges();\n                }}\n              >\n                Apply\n              </Button>\n            </Col>\n            <Col>\n              <Button  className='shadow-none'\n                color=\"dark\"\n                onClick={() => {\n                  if (\n                    window.confirm(\n                      'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\n                    )\n                  ) {\n                    navigate('/Staff');\n                  } else {\n                    applyChanges();\n                  }\n                }}\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button  className='shadow-none'\n                color=\"dark\"\n                onClick={() => {\n                  backToList();\n                }}\n              >\n                Back to List\n              </Button>\n            </Col>\n          </Row>\n        </ComponentCardV2>\n      </FormGroup>\n    </Form>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport '../form-editor/editor.scss';\nimport * as Icon from 'react-feather';\nimport { ToastContainer } from 'react-toastify';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\nimport message from '../../components/Message';\nimport api from '../../constants/api';\nimport KeyStaffDetails from '../../components/StaffTable/KeyStaffDetails';\nimport KeyStaffAddress from '../../components/StaffTable/KeyStaffAddress';\nimport StaffButton from '../../components/StaffTable/StaffButton';\nimport creationdatetime from '../../constants/creationdatetime';\n\nconst StaffEdit = () => {\n  // All state variables\n  const [staffeditdetails, setStaffEditDetails] = useState('');\n  const [stafftypedetails, setStaffTypetDetails] = useState();\n  const [staffteamdetails, setStaffTeamDetails] = useState();\n  const [userdetails, setUserDetails] = useState();\n  const [RoomName, setRoomName] = useState('');\n  const [fileTypes, setFileTypes] = useState('');\n  const [attachmentModal, setAttachmentModal] = useState(false);\n  const [allCountries, setallCountries] = useState([]);\n  const [pictureData, setDataForPicture] = useState({\n    modelType: '',\n  });\n  // Navigation and Parameter Constants\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  //All Functions/Methods\n\n  //Setting Data in Staff Details\n  const handleInputs = (e) => {\n    setStaffEditDetails({ ...staffeditdetails, [e.target.name]: e.target.value });\n  };\n  //Setting Picture Data\n  const dataForPicture = () => {\n    setDataForPicture({\n      modelType: 'picture',\n    });\n  };\n\n  // Route Change\n  const applyChanges = () => {};\n  const saveChanges = () => {\n    if (!staffeditdetails.email) {\n      message('Email is required', 'warning');\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(staffeditdetails.email)) {\n      message('Enter valid email', 'warning');\n    } else if (staffeditdetails.email !== '' && staffeditdetails.first_name !== '') {\n      navigate('/Staff');\n    }\n    window.location.reload();\n  };\n  const backToList = () => {\n    navigate('/Staff');\n  };\n\n  //Api call for getting Staff Data By ID\n  const editStaffById = () => {\n    api\n      .post('/staff/getStaffById', { staff_id: id })\n      .then((res) => {\n        const resObj = res.data.data;\n        if (!resObj.status) {\n          resObj.status = 'Current';\n        }\n        if (!resObj.user_group_id) {\n          resObj.user_group_id = '1';\n        }\n        setStaffEditDetails(resObj);\n      })\n      .catch(() => {\n        message('Staff Data Not Found', 'info');\n      });\n  };\n\n  //Api call for Editing Staff Details\n\n  const editStaffData = () => {\n    staffeditdetails.modification_date = creationdatetime;\n    if (!staffeditdetails.email) {\n      message('Email is required', 'warning');\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(staffeditdetails.email)) {\n      message('Enter valid email', 'warning');\n    } else if (staffeditdetails.email !== '' && staffeditdetails.first_name !== '') {\n      api\n        .post('/staff/editStaff', staffeditdetails)\n        .then(() => {\n          message('Record editted successfully', 'success');\n          editStaffById();\n        })\n        .catch(() => {\n          message('Unable to edit record.', 'error');\n        });\n    } else {\n      message('Please fill all required fields', 'warning');\n    }\n  };\n\n  //Api call for getting Staff Type From Valuelist\n  const getStaffType = () => {\n    api\n      .get('/staff/getStaffTypeFromValueList')\n      .then((res) => {\n        setStaffTypetDetails(res.data.data);\n      })\n      .catch(() => {\n        message('Staff Data Not Found', 'info');\n      });\n  };\n\n  //Api call for getting Staff Team From Valuelist\n  const getStaffTeam = () => {\n    api\n      .get('/staff/getStaffTeamFromValueList')\n      .then((res) => {\n        setStaffTeamDetails(res.data.data);\n      })\n      .catch(() => {\n        message('Staff Data Not Found', 'info');\n      });\n  };\n\n  //Api call for getting User Group Data\n  const getUserGroup = () => {\n    api\n      .get('/staff/getUserGroup')\n      .then((res) => {\n        setUserDetails(res.data.data);\n      })\n      .catch(() => {\n        message('Staff Data Not Found', 'info');\n      });\n  };\n\n  //Api call for Deleting Staff Data\n  const deleteStaffData = () => {\n    api\n      .post('/staff/deleteStaff', { staff_id: id })\n      .then(() => {\n        message('Record editted successfully', 'success');\n      })\n      .catch(() => {\n        message('Unable to edit record.', 'error');\n      });\n  };\n  //Api for getting all countries\n  const getAllCountries = () => {\n    api\n      .get('/staff/getCountry')\n      .then((res) => {\n        setallCountries(res.data.data);\n      })\n      .catch(() => {\n        message('Country Data Not Found', 'info');\n      });\n  };\n\n  useEffect(() => {\n    getStaffType();\n    getStaffTeam();\n    getUserGroup();\n    editStaffById();\n    getAllCountries();\n  }, [id]);\n\n  return (\n    <>\n      <BreadCrumbs />\n      <ToastContainer />\n\n      {/* Staff Edit Buttons */}\n      <StaffButton\n        navigate={navigate}\n        saveChanges={saveChanges}\n        applyChanges={applyChanges}\n        backToList={backToList}\n        editStaffData={editStaffData}\n        deleteStaffData={deleteStaffData}\n        id={id}\n      ></StaffButton>\n\n      {/* KeyStaffDetails */}\n      <BreadCrumbs heading={staffeditdetails && staffeditdetails.staff_id} />\n      <KeyStaffDetails\n        stafftypedetails={stafftypedetails}\n        staffeditdetails={staffeditdetails}\n        handleInputs={handleInputs}\n        userdetails={userdetails}\n        staffteamdetails={staffteamdetails}\n      ></KeyStaffDetails>\n\n      {/* KeyStaffAddress */}\n      <KeyStaffAddress\n        staffeditdetails={staffeditdetails}\n        handleInputs={handleInputs}\n        allCountries={allCountries}\n      ></KeyStaffAddress>\n\n      {/* Picture Attachment */}\n      <Form>\n        <FormGroup>\n          <ComponentCard title=\"Picture\">\n            <Row>\n              <Col xs=\"12\" md=\"3\" className=\"mb-3\">\n                <Button\n                  className=\"shadow-none\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setRoomName('StaffPic');\n                    setFileTypes(['JPG', 'PNG', 'GIF']);\n                    dataForPicture();\n                    setAttachmentModal(true);\n                  }}\n                >\n                  <Icon.Image className=\"rounded-circle\" width=\"20\" />\n                </Button>\n              </Col>\n            </Row>\n            <AttachmentModalV2\n              moduleId={id}\n              attachmentModal={attachmentModal}\n              setAttachmentModal={setAttachmentModal}\n              roomName={RoomName}\n              fileTypes={fileTypes}\n              altTagData=\"Staff Data\"\n              desc=\"Staff Data\"\n              recordType=\"Picture\"\n              mediaType={pictureData.modelType}\n            />\n            <ViewFileComponentV2 moduleId={id} roomName=\"StaffPic\" recordType=\"Picture\" />\n          </ComponentCard>\n        </FormGroup>\n      </Form>\n    </>\n  );\n};\n\nexport default StaffEdit;\n","import { Card, CardBody } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst pStyle = {\n  textAlign: 'right',\n  marginRight: '10px',\n};\nconst oStyle={\noutline:'none',\nborder:'none'\n};\n\nconst ComponentCardV2 = ({ children }) => {\n  return (\n    <Card className='shadow-none'>\n      <CardBody style={pStyle} >\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCardV2.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ComponentCardV2;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Icon from 'react-feather';\nimport message from '../Message';\nimport api from '../../constants/api';\n\nfunction ViewFileComponentV2({ moduleId, roomName,updateFile}) {\n  ViewFileComponentV2.propTypes = {\n    moduleId: PropTypes.string,\n    roomName: PropTypes.string,\n    updateFile:PropTypes.bool,\n  };\n\n  const tableStyle = {};\n\n  const [getFile, setGetFile] = useState(null);\n\n  const getFiles = () => {\n    api\n      .post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName })\n      .then((res) => {\n        setGetFile(res.data);\n      })\n      .catch(() => {\n        message('Unable to fetch files', 'info');\n      });\n  };\n\n  const deleteFile = (fileId) => {\n     \n        api\n          .post('/file/deleteFile', { media_id: fileId })\n          .then(() => {\n            setGetFile((prevFiles) => prevFiles.filter((file) => file.media_id !== fileId));\n          })\n          .catch(() => {\n            message('Unable to Delete Media', 'info');\n          });\n      }\n      useEffect(() => {\n        getFiles();\n      }, [updateFile]); \n\n  useEffect(() => {\n    getFiles();\n  }, []);\n\n  return (\n    <>\n      <table style={tableStyle}>\n        <thead>\n          <tr style={tableStyle}>\n            <th style={tableStyle}></th>\n            <th width=\"5%\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {getFile ? (\n            getFile.map((res) => {\n              return (\n                <tr key={res.media_id}>\n                  <td style={tableStyle}>\n                    <a href={`http://43.228.126.245/pms-shimi/storage/uploads/${res.name}`} target=\"_blank\" rel=\"noreferrer\">\n                      {res.name}\n                    </a>\n                    {/* {setTimeout(getFiles, 100)} */}\n                  </td>\n                  <td style={tableStyle}>\n                    <button\n                      type=\"button\"\n                      className=\"btn shadow-none\"\n                      onClick={() => {\n                        deleteFile(res.media_id);\n                      }}\n                    >\n                      <Icon.Trash2 />{' '}\n                    </button>\n                  </td>\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td>\n                <p>no files uploaded yet</p>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default ViewFileComponentV2;\n","import moment from \"moment\"\n\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\nexport default creationdatetime \n","import React, { useState  } from 'react';\nimport { FormGroup, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { FileUploader } from 'react-drag-drop-files';\nimport api from '../../constants/api';\nimport message from '../Message';\nimport ViewFileComponentV2 from '../ProjectModal/ViewFileComponentV2';\n\nconst AttachmentModalV2 = ({\n  attachmentModal,\n  setAttachmentModal,\n  moduleId,\n  roomName,\n  fileTypes,\n  altTagData,\n  desc,\n  updateFile,\n    setUpdateFile\n}) => {\n  AttachmentModalV2.propTypes = {\n    attachmentModal: PropTypes.bool,\n    setAttachmentModal: PropTypes.func,\n    moduleId: PropTypes.string,\n    roomName: PropTypes.string,\n    altTagData: PropTypes.string,\n    desc: PropTypes.string,\n    fileTypes: PropTypes.any,\n    updateFile:PropTypes.bool,\n    setUpdateFile:PropTypes.func\n  };\n\n  const [file, setFile] = useState([]);\n  const [handleValue, setHandleValue] = useState();\n  const [uploaded, setUploaded] = useState(null);\n\n  const [getFile, setGetFile] = useState(null);\n\n  const getFiles = () => {\n    api\n      .post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName })\n      .then((res) => {\n        setGetFile(res.data);\n        // setTimeout(getFiles, 100);\n      })\n      .catch(() => {\n        message('Unable to fetch files', 'info');\n      });\n  };\n\n  const handleChange = (fiels) => {\n    const arrayOfObj = Object.entries(fiels).map((e) => e[1]);\n\n    setFile(fiels);\n    setHandleValue(arrayOfObj);\n    console.log(fiels);\n  };\n\n  const uploadFile = () => {\n    if (file && Object.keys(file).length !== 0) {\n      const data = new FormData();\n      const arrayOfObj = Object.entries(file).map((e) => e[1]);\n      arrayOfObj.forEach((ele) => {\n        data.append(`files`, ele);\n      });\n      data.append('record_id', moduleId);\n      data.append('room_name', roomName);\n      data.append('alt_tag_data', altTagData);\n      data.append('description', desc);\n\n      api\n        .post('/file/uploadFiles', data, {\n          onUploadProgress: (filedata) => {\n            console.log(Math.round((filedata.loaded / filedata.total) * 100));\n            setUploaded(Math.round((filedata.loaded / filedata.total) * 100));\n          },\n        })\n        .then(() => {\n          message('Files Uploaded Successfully', 'success');\n          setUpdateFile(!updateFile);\n          setTimeout(() => {\n            setAttachmentModal(false);\n            getFiles()\n          }, 100);\n          \n        })\n        .catch(() => {\n          message('Unable to upload File', 'error');\n        });\n    } else {\n      message('No files selected', 'info');\n    }\n  };\n\n\n  \n  return (\n    <div>\n      <Modal isOpen={attachmentModal}>\n        <ModalHeader>Upload Media</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n          \n            <FileUploader multiple handleChange={handleChange} name=\"file\" types={fileTypes} />\n            {handleValue ? (\n              handleValue.map((e) => (\n                <div>\n                  <span> Name: {e.name} </span>\n                </div>\n              ))\n            ) : (\n              <span>No file selected</span>\n            )}\n          </FormGroup>\n          {uploaded && (\n            <div className=\"progress mt-2\">\n              <div\n                className=\"progress-bar h-4\"\n                role=\"progressbar\"\n                aria-valuenow={uploaded}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ width: `${uploaded}%` }}\n              >\n                {`${uploaded}% uploaded`}\n              </div>\n            </div>\n          )}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            className=\"shadow-none\"\n            onClick={() => {\n              uploadFile();\n            }}\n          >\n            Upload\n          </Button>\n          <Button\n            color=\"secondary\"\n            className=\"shadow-none\"\n            onClick={() => {\n              setAttachmentModal(false);\n            }}\n          >\n            Cancel\n          </Button>\n        \n        </ModalFooter>\n      </Modal>\n      <ViewFileComponentV2\n      getFile={getFile} \n      getFiles={getFiles} />\n    </div>\n  );\n};\n\nexport default AttachmentModalV2;\n"],"sourceRoot":""}