{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/ProjectTaskDetails.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","ProjectTaskDetails","useState","projectdetails","setProjectDetails","milestoneDetails","setMilestone","task_title","project_id","project_milestone_id","taskdetails","setTaskDetails","navigate","useNavigate","handleInputs","e","target","name","value","getMilestone","projectId","api","post","then","res","data","catch","useEffect","get","selectedProjectId","md","xs","onChange","selectedProject","map","ele","milestone_title","color","onClick","insertedDataId","insertId","setTimeout"],"mappings":"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","file":"static/js/162.cc95b2bd.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\nimport api from '../../constants/api';\nimport message from '../../components/Message';\n\nconst ProjectTaskDetails = () => {\n  // All state variables\n  const [projectdetails, setProjectDetails] = useState([]);\n  const [milestoneDetails, setMilestone] = useState([]);\n  const [taskdetails, setTaskDetails] = useState({\n    task_title: '',\n    project_id: '',\n    project_milestone_id: ''\n  });\n\n  // Navigation and Parameters\n  const navigate = useNavigate();\n\n  // Milestone data in taskdetails\n  const handleInputs = (e) => {\n    setTaskDetails({ ...taskdetails, [e.target.name]: e.target.value });\n  };\n\n  // Api call for getting project name dropdown\n  const getProjectname = () => {\n    api\n      .get('/projecttask/getProjectTitle')\n      .then((res) => {\n        setProjectDetails(res.data.data);\n      })\n      .catch(() => {\n        message('Projects not found', 'info');\n      });\n  };\n\n  // Api call for getting milestone dropdown based on project ID\n  const getMilestone = (projectId) => {\n    api\n      .post('/projecttask/getMilestoneById', { project_id: projectId })\n      .then((res) => {\n        setMilestone(res.data.data);\n      })\n      .catch(() => {\n        message('Milestones not found', 'info');\n      });\n  };\n\n  // Insert Milestone\n  const insertTaskDetails = () => {\n    if (taskdetails.task_title !== '') {\n      api\n        .post('/projecttask/insertTask', taskdetails)\n        .then((res) => {\n          const insertedDataId = res.data.data.insertId;\n          message('Task inserted successfully.', 'success');\n          setTimeout(() => {\n            navigate(`/TaskEdit/${insertedDataId}`);\n          }, 300);\n        })\n        .catch(() => {\n          message('Network connection error.', 'error');\n        });\n    } else {\n      message('Please fill all required fields.', 'warning');\n    }\n  };\n\n  useEffect(() => {\n    getProjectname();\n  }, []);\n\n  // Fetch milestones when project ID changes\n    useEffect(() => {\n      if (taskdetails.project_id) {\n        // Use taskdetails.project_id directly to get the selected project ID\n        const selectedProjectId = taskdetails.project_id;\n        getMilestone(selectedProjectId);\n      }\n    }, [taskdetails.project_id]);\n\n  return (\n    <div>\n      <BreadCrumbs />\n      <ToastContainer />\n      <Row>\n        <Col md=\"6\" xs=\"12\">\n          {/* Key Details */}\n          <ComponentCard title=\"Details\">\n            <Form>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <FormGroup>\n                      <Label>Title <span className=\"required\">*</span></Label>\n                      <Input type=\"text\" name=\"task_title\" onChange={handleInputs} />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"12\">\n                    <FormGroup>\n                      <Label>Project Title</Label>\n                      <Input type=\"select\" name=\"project_id\"   onChange={(e) => {\n                        handleInputs(e)\n                  const selectedProject = e.target.value;\n                  getMilestone(selectedProject);\n                }}>\n                        <option>Select Project</option>\n                        {projectdetails &&\n                          projectdetails.map((e) => (\n                            <option key={e.project_id} value={e.project_id}>\n                              {e.title}\n                            </option>\n                          ))}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"12\">\n                    <FormGroup>\n                      <Label>Milestone</Label>\n                      <Input type=\"select\" name=\"project_milestone_id\" onChange={handleInputs}>\n                        <option>Select Milestone</option>\n                        {milestoneDetails &&\n                          milestoneDetails.map((ele) => (\n                            <option\n                              key={ele.project_id}\n                              value={ele.project_milestone_id}\n                            >\n                              {ele.milestone_title}\n                            </option>\n                          ))}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n                    <Button\n                      color=\"primary\"\n                      onClick={insertTaskDetails}\n                      type=\"button\"\n                      className=\"btn mr-2 shadow-none\"\n                    >\n                      Save & Continue\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        navigate('/TaskList');\n                      }}\n                      type=\"button\"\n                      className=\"btn btn-dark shadow-none\"\n                    >\n                      Go to List\n                    </Button>\n                  </div>\n                </Row>\n              </FormGroup>\n            </Form>\n          </ComponentCard>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default ProjectTaskDetails;\n"],"sourceRoot":""}