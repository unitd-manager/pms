{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","components/SubCategoryTable/SubCategoryButton.js","components/SubCategoryTable/SubCategoryEditDetails.js","components/SubCategoryTable/SubCategoryPageMetaData.js","views/EditData/SubCategoryEdit.js","components/ComponentCardV2.js","constants/creationdatetime.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","SubCategoryButton","saveChanges","applyChanges","backToList","editSubCategoryData","ComponentCardV2","color","onClick","SubCategoryEditDetails","subcategoryeditdetails","handleInputs","category","md","onChange","value","sub_category_title","name","category_id","defaultValue","map","ele","concattitle","sub_category_type","external_link","internal_link","defaultChecked","published","SubCategoryPageMetaData","meta_title","meta_description","meta_keyword","seo_title","SubCategoryEdit","useState","setCategory","setSubCategoryEditDetails","subcategorytypedetails","setSubCategoryTypetDetails","id","useParams","navigate","useNavigate","e","target","editSubCategoryById","api","post","sub_category_id","then","res","resObj","data","catch","useEffect","get","window","reload","moment","format","creationdatetime","deleteSubCategoryData","pStyle","textAlign","marginRight","oStyle","outline","border","style"],"mappings":"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","file":"static/js/95.1487877d.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Form, FormGroup } from 'reactstrap';\nimport ComponentCardV2 from '../ComponentCardV2';\n\n\nexport default function SubCategoryButton({\n  saveChanges,\n  applyChanges,\n  backToList,\n  editSubCategoryData,\n}) {\n  SubCategoryButton.propTypes = {\n    saveChanges: PropTypes.func,\n    applyChanges: PropTypes.func,\n    backToList: PropTypes.func,\n    editSubCategoryData: PropTypes.func,\n   \n  };\n  return (\n    <Form>\n      <FormGroup>\n        <ComponentCardV2>\n          <Row>\n            <Col>\n              <Button  className='shadow-none'\n                color=\"primary\"\n                onClick={() => {\n                  editSubCategoryData();\n                  saveChanges();\n                }}\n              >\n                Save\n              </Button>\n            </Col>\n            <Col>\n              <Button  className='shadow-none'\n                color=\"primary\"\n                onClick={() => {\n                  editSubCategoryData();\n                  applyChanges();\n                }}\n              >\n                Apply\n              </Button>\n            </Col>\n          \n            <Col>\n              <Button  className='shadow-none'\n                color=\"dark\"\n                onClick={() => {\n                  backToList();\n                }}\n              >\n                Back to List\n              </Button>\n            </Col>\n          </Row>\n        </ComponentCardV2>\n      </FormGroup>\n    </Form>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport ComponentCard from '../ComponentCard';\n\nexport default function SubCategoryEditDetails({ subcategoryeditdetails, handleInputs, category }) {\n  SubCategoryEditDetails.propTypes = {\n    subcategoryeditdetails: PropTypes.object,\n    handleInputs: PropTypes.func,\n    category: PropTypes.array,\n  };\n  return (\n    <Form>\n      <FormGroup>\n        {/* Sub Category  Details */}\n        <ComponentCard\n          title=\"Sub Category Details\"\n          creationModificationDate={subcategoryeditdetails}\n        >\n          <Row>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Title</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={subcategoryeditdetails && subcategoryeditdetails.sub_category_title}\n                  name=\"sub_category_title\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Category</Label>\n                <Input\n                  type=\"select\"\n                  name=\"category_id\"\n                  onChange={handleInputs}\n                  value={subcategoryeditdetails && subcategoryeditdetails.category_id}\n                >\n                  <option defaultValue=\"selected\">Please Select</option>\n                  {category &&\n                    category.map((ele) => {\n                      return (\n                        <option key={ele.category_id} value={ele.category_id}>\n                          {ele.concattitle}\n                        </option>\n                      );\n                    })}\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Sub Category Type</Label>\n                <Input\n                  type=\"select\"\n                  name=\"sub_category_type\"\n                  onChange={handleInputs}\n                  value={subcategoryeditdetails && subcategoryeditdetails.sub_category_type}\n                >\n                  <option> Please Select </option>\n                  <option defaultValue=\"Content\">Content</option>\n                  <option value=\"Enquiry Form\">Enquiry Form </option>\n                  <option value=\"Regisration\">Regisration</option>\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>External Link</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={subcategoryeditdetails && subcategoryeditdetails.external_link}\n                  name=\"external_link\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Internal Link</Label>\n                <Input\n                  type=\"text\"\n                  onChange={handleInputs}\n                  value={subcategoryeditdetails && subcategoryeditdetails.internal_link}\n                  name=\"internal_link\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Published</Label>\n                <br></br>\n                <Input\n                  name=\"published\"\n                  value=\"1\"\n                  type=\"radio\"\n                  defaultChecked={\n                    subcategoryeditdetails && subcategoryeditdetails.published === 1 && true\n                  }\n                  onChange={handleInputs}\n                />\n                <Label> Yes </Label>\n                <Input\n                  name=\"published\"\n                  value=\"0\"\n                  type=\"radio\"\n                  defaultChecked={\n                    subcategoryeditdetails && subcategoryeditdetails.published === 0 && true\n                  }\n                  onChange={handleInputs}\n                />\n                <Label>No</Label>\n              </FormGroup>\n            </Col>\n          </Row>\n        </ComponentCard>\n      </FormGroup>\n    </Form>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport ComponentCard from '../ComponentCard';\n\nexport default function SubCategoryPageMetaData({ subcategoryeditdetails, handleInputs }) {\n  SubCategoryPageMetaData.propTypes = {\n    subcategoryeditdetails: PropTypes.object,\n    handleInputs: PropTypes.func,\n  };\n  return (\n    <>\n      <Form>\n        <FormGroup>\n          {/* Page Meta Data Details */}\n          <ComponentCard title=\"Page Meta Data\">\n            <Row>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Label>Page Title</Label>\n                  <Input\n                    type=\"text\"\n                    onChange={handleInputs}\n                    value={subcategoryeditdetails && subcategoryeditdetails.meta_title}\n                    name=\"meta_title\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Label>Page Description</Label>\n                  <Input\n                    type=\"textarea\"\n                    name=\"meta_description\"\n                    onChange={handleInputs}\n                    value={subcategoryeditdetails && subcategoryeditdetails.meta_description}\n                  ></Input>\n                </FormGroup>\n              </Col>\n              <Col md=\"4\">\n                <FormGroup>\n                  <Label>Page Keywords</Label>\n                  <Input\n                    type=\"textarea\"\n                    name=\"meta_keyword\"\n                    onChange={handleInputs}\n                    value={subcategoryeditdetails && subcategoryeditdetails.meta_keyword}\n                  ></Input>\n                </FormGroup>\n              </Col>\n            </Row>\n          </ComponentCard>\n        </FormGroup>\n      </Form>\n      <Form>\n        <FormGroup>\n          <Row>\n            <Col md=\"4\">\n              <Label>SEO Title </Label>\n              <Input\n                type=\"text\"\n                onChange={handleInputs}\n                value={subcategoryeditdetails && subcategoryeditdetails.seo_title}\n                name=\"seo_title\"\n              />\n            </Col>\n          </Row>\n        </FormGroup>\n      </Form>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport '../form-editor/editor.scss';\nimport { ToastContainer } from 'react-toastify';\nimport moment from 'moment';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport SubCategoryButton from '../../components/SubCategoryTable/SubCategoryButton';\nimport SubCategoryEditDetails from '../../components/SubCategoryTable/SubCategoryEditDetails';\nimport SubCategoryPageMetaData from '../../components/SubCategoryTable/SubCategoryPageMetaData';\nimport message from '../../components/Message';\nimport api from '../../constants/api';\nimport creationdatetime from '../../constants/creationdatetime';\n\nconst SubCategoryEdit = () => {\n  // All state variables\n  const [category, setCategory] = useState();\n  const [subcategoryeditdetails, setSubCategoryEditDetails] = useState();\n  const [subcategorytypedetails, setSubCategoryTypetDetails] = useState();\n\n  // Navigation and Parameter Constants\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  //All Functions/Methods\n\n  //Setting Data in SubCategory Edit Details\n  const handleInputs = (e) => {\n    setSubCategoryEditDetails({ ...subcategoryeditdetails, [e.target.name]: e.target.value });\n  };\n\n  // Route Change\n  const applyChanges = () => {};\n  const saveChanges = () => {\n    if (subcategoryeditdetails.sub_category_title !== '') {\n      navigate('/SubCategory');\n    }\n    window.location.reload();\n  };\n  const backToList = () => {\n    navigate('/SubCategory');\n  };\n\n  //Api call for Category Dropdown data\n  const getCategory = () => {\n    api\n      .get('/subcategory/getCategory')\n      .then((res) => {\n        setCategory(res.data.data);\n      })\n      .catch(() => {\n        message('SubCategory Data Not Found', 'info');\n      });\n  };\n\n  //Api call for Editting SubCategory By Id\n  const editSubCategoryById = () => {\n    api\n      .post('/subcategory/getSubCategoryById', { sub_category_id: id })\n      .then((res) => {\n        const resObj = res.data.data[0];\n        if (!resObj.sub_category_type) {\n          resObj.sub_category_type = 'Content';\n        }\n        setSubCategoryEditDetails(resObj);\n      })\n      .catch(() => {\n        message('SubCategory Data Not Found', 'info');\n      });\n  };\n\n  //Api call for getting Staff Type From Valuelist\n  const getSubCategoryType = () => {\n    api\n      .get('/subcategory/getSubCategoryTypeFromValueList')\n      .then((res) => {\n        setSubCategoryTypetDetails(res.data.data);\n      })\n      .catch(() => {\n        message('SubCategory Type Data Not Found', 'info');\n      });\n  };\n\n  //Api call for Editing SubCategory Details\n  const editSubCategoryData = () => {\n    subcategoryeditdetails.modification_date = moment().format('DD-MM-YYYY');\n    if (subcategoryeditdetails.sub_category_title !== '') {\n      subcategoryeditdetails.modification_date = creationdatetime;\n      api\n        .post('/subcategory/editSubCategory', subcategoryeditdetails)\n        .then(() => {\n          message('Record editted successfully', 'success');\n          editSubCategoryById()\n        })\n        .catch(() => {\n          message('Unable to edit record.', 'error');\n        });\n    } else {\n      message('Please fill all required fields', 'warning');\n    }\n  };\n\n  //Api call for Deleting SubCategory Details\n  const deleteSubCategoryData = () => {\n    api\n      .post('/subcategory/deleteSubCategory', { sub_category_id: id })\n      .then(() => {\n        message('Record editted successfully', 'success');\n      })\n      .catch(() => {\n        message('Unable to edit record.', 'error');\n      });\n  };\n\n  useEffect(() => {\n    editSubCategoryById();\n    getCategory();\n    getSubCategoryType();\n  }, [id]);\n\n  return (\n    <>\n      <BreadCrumbs />\n      <ToastContainer />\n      {/* SubCategory Button Details */}\n      <SubCategoryButton\n        saveChanges={saveChanges}\n        applyChanges={applyChanges}\n        backToList={backToList}\n        editSubCategoryData={editSubCategoryData}\n        deleteSubCategoryData={deleteSubCategoryData}\n        navigate={navigate}\n        id={id}\n      ></SubCategoryButton>\n\n      {/* Sub Category  Details */}\n      <BreadCrumbs />\n      <SubCategoryEditDetails\n        subcategoryeditdetails={subcategoryeditdetails}\n        handleInputs={handleInputs}\n        category={category}\n        subcategorytypedetails={subcategorytypedetails}\n      ></SubCategoryEditDetails>\n\n      {/* Page Meta Data Details */}\n      <SubCategoryPageMetaData\n        subcategoryeditdetails={subcategoryeditdetails}\n        handleInputs={handleInputs}\n      ></SubCategoryPageMetaData>\n\n    </>\n  );\n};\n\nexport default SubCategoryEdit;\n","import { Card, CardBody } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst pStyle = {\n  textAlign: 'right',\n  marginRight: '10px',\n};\nconst oStyle={\noutline:'none',\nborder:'none'\n};\n\nconst ComponentCardV2 = ({ children }) => {\n  return (\n    <Card className='shadow-none'>\n      <CardBody style={pStyle} >\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCardV2.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ComponentCardV2;\n","import moment from \"moment\"\n\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\nexport default creationdatetime \n"],"sourceRoot":""}