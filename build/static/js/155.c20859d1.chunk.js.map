{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/EmployeeDetails.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","EmployeeDetails","useState","empcode","setEmpcode","first_name","citizen","nric_no","fin_no","work_permit_no","status","emp_code","date_of_birth","moment","date_of_expiry","fin_no_expiry_date","work_permit_expiry_date","year_of_completion1","year_of_completion2","year_of_completion3","employeeData","setEmployeeData","passtype","setPasstype","navigate","useNavigate","handleInputs","e","target","name","value","useEffect","api","get","then","res","data","empc","md","style","color","onChange","handlePasstype","selected","onClick","parseFloat","console","log","post","insertedDataId","insertId","setTimeout","catch"],"mappings":"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","file":"static/js/155.c20859d1.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React,{useEffect, useState} from 'react';\nimport {Row,Col,FormGroup,Label,Input,Button } from 'reactstrap';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport moment from 'moment';\nimport api from '../../constants/api'\nimport message from '../../components/Message';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport ComponentCard from '../../components/ComponentCard';\n\n\nconst EmployeeDetails = () => {\n\n //state variables \n const [empcode, setEmpcode] = useState();\nconst [employeeData,setEmployeeData]=useState({\n  first_name:\"\",\n  citizen:\"\",\n  nric_no:\"\",\n  fin_no:\"\",\n  work_permit_no:\"\",\n  status:\"\",\n  emp_code:\"\",\n  date_of_birth:moment(),\n  date_of_expiry:moment(),\n  fin_no_expiry_date:moment(),\n  work_permit_expiry_date:moment(),\n  year_of_completion1:moment(),\n  year_of_completion2:moment(),\n  year_of_completion3:moment()\n});\nconst [passtype,setPasstype]=useState('');\n//routing\nconst navigate=useNavigate();\n\n  const handleInputs=(e)=>{\n    setEmployeeData({...employeeData, [e.target.name]:e.target.value})\n  }\n  const handlePasstype=(e)=>{\n    setPasstype(e.target.value)\n  }\n//getting maximum of Employeecode\nconst getMaxEmpcode = () => {\n  api.get('/employeeModule/getMaxEmpCode')\n    .then((res) => {\n      setEmpcode(res.data.data[0].empc)\n      \n    })\n}\n   //Insert Employee Data\n   const insertEmployee = () => {\n    employeeData.emp_code= parseFloat(empcode)+ 1;\n    employeeData.date_of_birth=moment()\n  employeeData.date_of_expiry=moment()\n  employeeData.fin_no_expiry_date=moment()\n  employeeData.work_permit_expiry_date=moment()\n  employeeData.year_of_completion1=moment()\n  employeeData.year_of_completion2=moment()\n  employeeData.year_of_completion3=moment()\n    console.log('employeeData',employeeData)\n    if(employeeData.first_name!==\"\" && employeeData.status!==\"\" && employeeData.citizen!==\"\"){\n      if(employeeData.nric_no!==\"\" || employeeData.fin_no!==\"\"){\n    api.post('/employeemodule/insertEmployee', employeeData)\n    .then((res) => {\n      const insertedDataId= res.data.data.insertId\n      console.log(insertedDataId)\n      message('Employee inserted successfully.','success')\n      setTimeout(()=> {\n        navigate(`/EmployeeDetailsData/${insertedDataId}`)\n      },300);     \n    })\n    .catch(() => {\n      message('Unable to create employee.', 'error')\n    })\n  }else {\n    message('Please fill all required fields.', 'warning');\n  }}else{\n    message('Please fill all required fields.', 'warning');\n  }\n}\nuseEffect(()=>{getMaxEmpcode();},[])\n  return (\n    <div>\n      <ToastContainer></ToastContainer>\n      <BreadCrumbs />\n      <Row>\n        <Col md=\"6\">\n          <ComponentCard title=\"Key Details\">\n            \n            <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Label>Full Name  <span style={{color: 'red'}}>*</span></Label>\n                    <Input name=\"first_name\" value={employeeData && employeeData.first_name} onChange={handleInputs} type=\"text\"/>\n                </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Label>Pass Type  <span style={{color: 'red'}}>*</span></Label>\n                    <Input name=\"citizen\" value={employeeData && employeeData.citizen} onChange={(e)=>{handleInputs(e);handlePasstype(e)}} type=\"select\">\n                        <option value=\"\" selected=\"selected\">Please Select</option>\n                        <option value=\"Citizen\">Citizen</option>\n                        <option value=\"PR\">PR</option>\n                        <option value=\"EP\">EP</option>\n                        <option value=\"SP\">SP</option>\n                        <option value=\"WP\">WP</option>\n                        <option value=\"DP\">DP</option>\n                    </Input>\n                </Col>\n                </Row>\n              </FormGroup>\n              {(passtype === \"Citizen\" || passtype === 'PR') && (<FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Label>NRIC No  <span style={{color: 'red'}}>*</span></Label>\n                    <Input name=\"nric_no\" value={employeeData && employeeData.nric_no} onChange={handleInputs} type=\"number\"/>\n                  </Col>\n                </Row>\n              </FormGroup>) }\n               \n              {(passtype === \"EP\" || passtype === 'SP' || passtype === 'DP' || passtype === 'WP') &&  (<FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Label>Fin No  <span style={{color: 'red'}}>*</span></Label>\n                    <Input name=\"fin_no\" value={employeeData && employeeData.fin_no} onChange={handleInputs} type=\"number\"/>\n                  </Col>\n                </Row>\n              </FormGroup>)}\n             \n              {/* <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Label>Passport Expiry *</Label>\n                    <Input name=\"first_name\" value={employeeData && employeeData.first_name} onChange={handleInputs} type=\"text\"/>\n                </Col>\n                </Row>\n              </FormGroup> */}\n             \n              {passtype === \"WP\" && \n              <>\n              \n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Label>Work Permit No</Label>\n                    <Input name=\"work_permit_no\" value={employeeData && employeeData.work_permit_no} onChange={handleInputs} type=\"number\"/>\n                  </Col>\n                </Row>\n              </FormGroup>\n              </>\n              }\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Label>Status  <span style={{color: 'red'}}>*</span></Label>\n                    <Input name=\"status\" value={employeeData && employeeData.status} onChange={handleInputs} type=\"select\">\n                        <option selected=\"selected\" value=\"Current\">Current</option>\n                        <option value=\"Archive\">Archive</option>\n                        <option value=\"Cancel\">Cancel</option>\n                    </Input>\n                </Col>\n                </Row>\n                <Row>\n                    <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\n                        <Button type=\"submit\" color=\"primary\" className=\"btn mr-2 shadow-none\" onClick={insertEmployee}>\n                        Save & Continue\n                        </Button>\n                        <Button type=\"submit\" className=\"btn btn-dark shadow-none\" onClick={()=>{navigate('/Employee')}}>\n                        Cancel\n                        </Button>\n                     </div>\n                </Row>\n              </FormGroup>\n            \n          </ComponentCard>\n        </Col>\n        \n      </Row>\n      \n    </div>\n  );\n};\n\nexport default EmployeeDetails;\n"],"sourceRoot":""}