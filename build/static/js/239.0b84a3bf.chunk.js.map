{"version":3,"sources":["components/projectReportTop/ProjectReportSection.js","views/cubosale/Reports.js"],"names":["ProjectReportSection","style","padding","className","marginRight","type","name","alignItems","value","background","border","marginLeft","fontfamily","textAlign","colSpan","Reports","useState","projectTableData","setProjectTableData","csvData","setcsvData","completeData","setCompleteData","status","setStatus","tableRef","useRef","getTableData","api","get","then","res","console","log","data","projectDaa","tempData","forEach","e","push","project_code","title","company_name","contact_name","category","catch","err","useEffect","md","to","color","marginTop","onClick","doc","Jspdf","setFontSize","content","startY","head","body","map","text","autoTable","save","exportPDF","onChange","target","selectedvalue","completeDataSet","elm","ref","project_id"],"mappings":"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","file":"static/js/239.0b84a3bf.chunk.js","sourcesContent":["import React from 'react';\nimport * as Icon from 'react-feather';\n\nimport { Input, Card, Row, Col, Button,FormGroup, Table } from 'reactstrap';\n// import DashCard from '../dashboard/dashboardCards/DashCard';\n\nfunction ProjectReportSection() {\n  return (\n    <div>\n      <Card style={{ padding: '10px' }}>\n        <Row className=\"mb-1\">\n          <Col className=\"d-flex \">\n            <Icon.Home />\n            <h2 className=\"ms-3 fw-bolder\">Reports</h2>\n          </Col>\n          <Col className=\"d-flex justify-content-end \">\n            <p style={{marginRight: '10px'}} className=\"fw-bolder\">Choose Report Name</p>\n\n            <FormGroup >\n              <Input type=\"select\" name=\"Select Category\" style={{padding: '5px 120px' , alignItems: 'left'}}>\n                <option>Sales by Model [by Qty]</option>\n                \n              </Input>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row className='mb-1'>\n          <Col className=\"d-flex justify-content-end px-10\">\n            <div>\n              <Input type=\"select\" className=\"custom-select\">\n                <option value=\"0\">Start Month</option>\n                <option value=\"1\">January</option>\n                <option value=\"2\">February</option>\n                <option value=\"3\">March</option>\n                <option value=\"4\">April</option>\n                <option value=\"5\">May</option>\n                <option value=\"6\">June</option>\n                <option value=\"7\">July</option>\n                <option value=\"8\">August</option>\n                <option value=\"9\">September</option>\n                <option value=\"10\">October</option>\n                <option value=\"11\">November</option>\n                <option value=\"12\">December</option>\n              </Input>\n            </div>\n            <div className=\"ms-2\">\n              <Input type=\"select\" className=\"custom-select\">\n                <option value=\"0\">Start Month</option>\n                <option value=\"1\">January</option>\n                <option value=\"2\">February</option>\n                <option value=\"3\">March</option>\n                <option value=\"4\">April</option>\n                <option value=\"5\">May</option>\n                <option value=\"6\">June</option>\n                <option value=\"7\">July</option>\n                <option value=\"8\">August</option>\n                <option value=\"9\">September</option>\n                <option value=\"10\">October</option>\n                <option value=\"11\">November</option>\n                <option value=\"12\">December</option>\n              </Input>\n            </div>\n\n            <Button\n              style={{ background: '#4684B3', border: '1px solid #CEE1EF', marginLeft: '5px' }}\n            >\n              <Icon.Search /> Show Report\n            </Button>\n            <Icon.MoreVertical className=\"mt-2\" />\n            <Button style={{ background: '#2CB562', border: '1px solid #CEE1EF' }}>\n              <Icon.FileText />\n            </Button>\n          </Col>\n        </Row>\n        <Row className=\"fw-bolder\" style={{ fontfamily: 'Square Peg' }}>\n          <h2>Sales by Model [by Qty]</h2>\n          <p>Start Month: </p>\n          <p>End Month: </p>\n        </Row>\n\n        <Table className='border'>\n          <thead className='text-center'>\n            <th className='border' md-2>#</th>\n            <th>Sub Model</th>\n          </thead>\n          <tbody className='text-light bg-dark' style={{textAlign : 'right'}} >\n            <tr >\n              <td colSpan='2' >Total Qty</td>\n            </tr>\n          </tbody>\n        </Table>\n\n\n\n      </Card>\n    </div>\n  );\n}\n\nexport default ProjectReportSection;\n\n","import React, { useState, useEffect,useRef } from 'react';\n// import treeTableHOC from 'react-table-v6/lib/hoc/treeTable';\nimport * as Icon from 'react-feather';\nimport { Link } from 'react-router-dom';\nimport 'react-table-v6/react-table.css';\nimport { Card,\n  CardBody,Table,Row,Col,Button,FormGroup,Label,Input } from 'reactstrap';\n  import { CSVLink } from \"react-csv\";\n  import Jspdf from \"jspdf\";\n  import \"jspdf-autotable\";\nimport api from '../../constants/api';\n\nimport ProjectReportSection from '../../components/projectReportTop/ProjectReportSection';\n\n// import BreadCrumbs from '../layouts/breadcrumbs/BreadCrumbs';\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\";\nconst Reports = () => {\n  const [projectTableData, setProjectTableData] = useState([]);\n  const [csvData, setcsvData] = useState('')\n  const [completeData, setCompleteData] = useState([])\n  const [status, setStatus] = useState('')\n  const tableRef = useRef(null);\n  const getTableData = () => {\n    api \n      .get('/api/getProjects')\n      .then((res) => {\n        console.log(res.data);\n        // console.log(res.data);\n        setProjectTableData(res.data.data);\n        setCompleteData(res.data.data)\n        const projectDaa = res.data.data;\n        const tempData = [\n          [\"S.no\", \"Code\", \"Title\",\"Company\",\"Contact\",\"Category\",\"STATUS\"]\n        ];\n        \n        projectDaa.forEach(e => {\n          tempData.push([\"\",e.project_code,e.title,e.company_name,e.contact_name,e.category,e.status])\n        });\n        console.log(tempData)\n        setcsvData(tempData)\n        \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const exportPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"portrait\"; // portrait or landscape\n\n    const marginLeft = 40;\n    const doc = new Jspdf(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"Project Report\";\n    const headers = [[\"S.no\", \"Code\", \"Title\",\"Company\",\"Contact\",\"Category\",\"STATUS\"]];\n\n    const data = projectTableData.map(e=> [\"\",e.project_code,e.title,e.company_name,e.contact_name,e.category,e.status]);\n\n    const content = {\n      startY: 50,\n      head: headers,\n      body: data\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"report.pdf\")\n  }\n  const filterBystatus = (e) =>{\n    setStatus(e.target.value)\n    console.log(status)\n    const selectedvalue = e.target.value\n    const tempData = [\n      [\"S.no\", \"Code\", \"Title\",\"Company\",\"Contact\",\"Category\",\"STATUS\"]\n    ];\n    const completeDataSet = []\n    completeData.forEach(elm => {\n      if(elm.status === selectedvalue){\n        completeDataSet.push(elm)\n        tempData.push([\"\",elm.project_code,elm.title,elm.company_name,elm.contact_name,elm.category,elm.status])\n      }\n    });\n    console.log(tempData)\n    setcsvData(tempData)\n   \n    setProjectTableData(completeDataSet)\n  }\n  useEffect(() => {\n    getTableData();\n\n    return () => {\n      getTableData();\n    };\n  }, []);\n\n  return (\n    <>\n    <ProjectReportSection />\n      {/* {<p>{projectTableData}</p>} */}\n      {/* <BreadCrumbs /> */}\n      {/* Start Action table*/}\n      {/*--------------------------------------------------------------------------------*/}\n      {/* <ComponentCard> */}\n      {/* <DataTable columns={columns} data={data} /> */}\n      {/* {<p>{projectTableData}</p>} */}\n      <Row>\n      <Col>\n      <Card>\n        <CardBody>\n          <Row>\n          <Col md=\"6\">\n          <Link to=\"/projects/addproject\">\n          <Button  color=\"primary\" className=\"mt-3\">\n            Add Project\n          </Button>\n          </Link>\n          <CSVLink style={{marginTop:18,marginRight:10,marginLeft:10}} className='btn btn-block btn-success' data={csvData}>Excel</CSVLink>\n          <Button onClick={()=>{exportPDF()}} color=\"danger btn-outline\" className=\"mt-3\">\n            PDF\n          </Button>\n                  </Col>\n                  <Col md=\"2\"></Col>\n          <Col md=\"4\">\n                    <FormGroup>\n                      <Label>Status</Label>\n                      <Input onChange={filterBystatus} type=\"select\" name=\"Select Category\">\n                        <option value=\"\">All</option>\n                        <option value=\"WIP\">WIP</option>\n                        <option value=\"Closed\">Closed</option>\n                        <option value=\"Hold\">Hold</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n          </Row>\n         \n        <Table ref={tableRef}>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th></th>\n            <th>\n              <Icon.Trash2 />\n            </th>\n            <th>Code</th>\n            <th>Title</th>\n            <th>Company</th>\n            <th>Contact</th>\n            <th>Category</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        {projectTableData.map((e) => {\n          return (\n            <tbody>\n              <tr>\n                <td>{e.project_id}</td>\n                <td>\n                  <Link to={`editproject/${e.project_id}`}>\n                  <Icon.Edit />\n                  </Link>\n                  \n                </td>\n                <td>\n                  <Icon.Trash2 />\n                </td>\n                <td>{e.project_code}</td>\n                <td>{e.title}</td>\n                <td>{e.company_name}</td>\n                <td>{e.contact_name}</td>\n                <td>{e.category}</td>\n                <td>{e.status}</td>\n              </tr>\n            </tbody>\n          );\n        })}\n        \n      </Table>\n        </CardBody>\n      </Card>\n      \n      </Col>\n      </Row>\n    \n      {/* <Row>\n        {randomData &&\n          randomData.map((blg) => (\n            <Col sm=\"6\" lg=\"6\" xl=\"3\" key={blg.avatar}>\n              <Blog\n                image={blg.avatar}\n                title={blg.first_name}\n                subtitle={blg.last_name}\n                text={blg.username}\n                color=\"#000000\"\n              />\n            </Col>\n          ))}\n      </Row> */}\n      {/* </ComponentCard> */}\n    </>\n  );\n};\n\nexport default Reports;\n\n// `${blg.name.title + blg.name.first + blg.name.last}\n"],"sourceRoot":""}