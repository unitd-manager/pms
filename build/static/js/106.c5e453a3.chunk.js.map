{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","components/userGroup/UserGroupButtons.js","views/EditData/UserGroupEdit.js","components/ComponentCardV2.js","constants/creationdatetime.js","../node_modules/react-feather/dist/icons/trash-2.js","components/DeleteButton.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","UserGroupButtons","id","applyChanges","backToList","editUserGroupData","editRoomUserGroup","navigate","ComponentCardV2","color","onClick","setTimeout","window","confirm","DeleteButton","columnname","tablename","UserGroupEdit","useState","userGroupDetails","setUserGroupDetails","roomUser","setRoomUser","loggedInuser","React","useContext","AppContext","setUser","usePermify","useParams","useNavigate","handleInputs","e","target","name","value","getRoomUserGroup","api","post","user_group_id","then","res","data","apiData","permissionArray","forEach","element","edit","push","section_title","detail","duplicate","export","import","list","new","print","publish","remove","roles","permissions","catch","elem","handleOnChange","item","creationdatetime","checked","console","log","room_user_group_id","insertRoomUserGroup","useEffect","deleteUserGroupData","result","$","each","allValues","find","fieldName","attr","val","obj","md","onChange","user_group_type","defaultValue","map","cell","disabled","check","defaultChecked","unpublish","section_id","pStyle","textAlign","marginRight","oStyle","outline","border","style","moment","format","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Trash2","forwardRef","_ref","ref","_ref$color","_ref$size","size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","ifpiture","ifAttachment","pictureroom","attachmentroom","deletePicture","formalId","roomName","room_name","record_id","status","deleteRecord","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","idvalue"],"mappings":"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","file":"static/js/106.c5e453a3.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Form, FormGroup } from 'reactstrap';\nimport ComponentCardV2 from '../ComponentCardV2';\nimport DeleteButton from '../DeleteButton';\n\nfunction UserGroupButtons({\n  id,\n    applyChanges,\n    backToList,\n    editUserGroupData,\n    editRoomUserGroup,\n    navigate\n}) {\n\n  UserGroupButtons.propTypes = {\n        id: PropTypes.string,\n        applyChanges: PropTypes.func,\n        backToList: PropTypes.func,\n        editUserGroupData: PropTypes.func,\n        editRoomUserGroup: PropTypes.func,\n        navigate: PropTypes.any\n      };\n\n  return (\n    <div>\n         <Form>\n      <FormGroup>\n        <ComponentCardV2>\n          <Row>\n            <Col>\n              <Button className='shadow-none'\n                color=\"primary\"\n                onClick={() => {\n                  editUserGroupData();\n                  editRoomUserGroup();\n                  setTimeout(()=>{\n                    navigate('/UserGroup');\n                  },300)\n                 \n                }}\n              >\n                Save\n              </Button>\n            </Col>\n            <Col>\n              <Button className='shadow-none'\n                color=\"primary\"\n                onClick={() => {\n                  editUserGroupData();\n                  editRoomUserGroup();\n                  applyChanges();\n                }}\n              >\n                Apply\n              </Button>\n            </Col>\n            <Col>\n              <Button className='shadow-none'\n                color=\"dark\"\n                onClick={() => {\n                  if (\n                    window.confirm(\n                      'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\n                    )\n                  ) {\n                    navigate('/UserGroup');\n                  } else {\n                    applyChanges();\n                  }\n                }}\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n            <DeleteButton\n              id={id} \n              columnname=\"user_group_id\"\n              tablename=\"user_group\"\n            ></DeleteButton>\n            </Col>\n            <Col>\n              <Button className='shadow-none'\n                color=\"dark\"\n                onClick={() => {\n                  backToList();\n                }}\n              >\n                Back to List\n              </Button>\n            </Col>\n          </Row>\n        </ComponentCardV2>\n      </FormGroup>\n    </Form>\n    </div>\n  )\n}\n\nexport default UserGroupButtons","import React, { useState, useEffect } from 'react';\nimport { Row, Col, FormGroup, Label, Input, Form, Table } from 'reactstrap';\nimport * as $ from 'jquery';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { usePermify } from '@permify/react-role';\nimport ComponentCard from '../../components/ComponentCard';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport api from '../../constants/api';\nimport creationdatetime from '../../constants/creationdatetime';\nimport message from '../../components/Message';\nimport UserGroupButtons from '../../components/userGroup/UserGroupButtons';\nimport AppContext from '../../context/AppContext';\n\nconst UserGroupEdit = () => {\n  //state variables\n  const [userGroupDetails, setUserGroupDetails] = useState({});\n  const [roomUser, setRoomUser] = useState([]);\n  const { loggedInuser } = React.useContext(AppContext);\n  const { setUser } = usePermify();\n  //params and routing\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  // Route Change\n  const applyChanges = () => {};\n  const backToList = () => {\n    navigate('/UserGroup');\n  };\n\n  //Setting data in userGroupDetails\n  const handleInputs = (e) => {\n    setUserGroupDetails({ ...userGroupDetails, [e.target.name]: e.target.value });\n  };\n\n  // Get Product data By product id\n  const getUserGroupById = () => {\n    api\n      .post('/usergroup/getusergroupById', { user_group_id: id })\n      .then((res) => {\n        setUserGroupDetails(res.data.data[0]);\n      })\n      .catch(() => {\n        message('userGroupDetails Data Not Found', 'info');\n      });\n  };\n\n  //get roomusergroup data by id\n  const getRoomUserGroup = () => {\n    api\n      .post('/usergroup/getroomusergroupById', { user_group_id: id })\n      .then((res) => {\n        setRoomUser(res.data.data);\n        if (id === loggedInuser.user_group_id) {\n          const apiData = res.data.data;\n          const permissionArray = [];\n          apiData.forEach((element) => {\n            if (element.edit) permissionArray.push(`${element.section_title}-edit`);\n            if (element.detail) permissionArray.push(`${element.section_title}-detail`);\n            if (element.duplicate) permissionArray.push(`${element.section_title}-duplicate`);\n            if (element.export) permissionArray.push(`${element.section_title}-export`);\n            if (element.import) permissionArray.push(`${element.section_title}-import`);\n            if (element.list) permissionArray.push(`${element.section_title}-list`);\n            if (element.new) permissionArray.push(`${element.section_title}-new`);\n            if (element.print) permissionArray.push(`${element.section_title}-print`);\n            if (element.publish) permissionArray.push(`${element.section_title}-publish`);\n            if (element.remove) permissionArray.push(`${element.section_title}-remove`);\n          });\n          setUser({\n            id: '1',\n            roles: ['admin'],\n            permissions: permissionArray,\n          });\n        }\n      })\n      .catch(() => {\n        message('Unable to get room user record.', 'error');\n      });\n  };\n  //update room user\n  const editRoomUserGroup = (elem) => {\n    api\n      .post('/usergroup/edit-roomusergroup', elem)\n      .then(() => {\n        message('Record edited successfully', 'success');\n        getRoomUserGroup();\n      })\n      .catch(() => {\n        message('Unable to edit record.', 'error');\n      });\n  };\n  //update userGroup\n  const editUserGroupData = () => {\n    api\n      .post('/usergroup/edit-usergroup', userGroupDetails)\n      .then(() => {\n        message('Record edited successfully', 'success');\n      })\n      .catch(() => {\n        message('Unable to edit record.', 'error');\n      });\n  };\n  //insert userGroup\n  const insertRoomUserGroup = (item) => {\n    api\n      .post('/usergroup/insertRoomUserGroup', item)\n      .then(() => {\n        message('Record edited successfully', 'success');\n        getRoomUserGroup();\n      })\n      .catch(() => {\n        message('Unable to edit record.', 'error');\n      });\n  };\n\n  //Api call for Deleting UserGroup Data\n  const deleteUserGroupData = () => {\n    api\n      .post('/usergroup/deleteUserGroup', { user_group_id: id })\n      .then(() => {\n        message('Record deleted successfully', 'success');\n      })\n      .catch(() => {\n        message('Unable to delete record.', 'error');\n      });\n  };\n  const handleOnChange = (e, item) => {\n    item = { ...item, modification_date: creationdatetime };\n    item = { ...item, [e.target.name]: e.target.checked === true ? 1 : 0 };\n    console.log(item);\n    if (item.room_user_group_id) {\n      editRoomUserGroup(item);\n    } else {\n      item = { ...item, user_group_id: id };\n      insertRoomUserGroup(item);\n    }\n  };\n  const getAllValues = () => {\n    const result = [];\n    $('#example tbody tr').each(() => {\n      const allValues = {};\n      $(this)\n        .find('input')\n        .each(() => {\n          const fieldName = $(this).attr('name');\n          allValues.user_group_id = id;\n          allValues[fieldName] = $(this).val();\n        });\n\n      result.push(allValues);\n    });\n    console.log(result);\n    result.forEach((obj) => {\n      editRoomUserGroup(obj);\n    });\n  };\n\n  const accessColumns = [\n    {\n      name: 'room name',\n    },\n\n    {\n      name: 'list',\n    },\n    {\n      name: 'detail',\n    },\n    {\n      name: 'new',\n    },\n    {\n      name: 'edit',\n    },\n    {\n      name: 'delete',\n    },\n    {\n      name: 'publish',\n    },\n    {\n      name: 'un-publish',\n    },\n    {\n      name: 'print',\n    },\n    {\n      name: 'import',\n    },\n    {\n      name: 'export',\n    },\n  ];\n\n  //useEffect\n  useEffect(() => {\n    getUserGroupById();\n    getRoomUserGroup();\n  }, [id]);\n\n  return (\n    <>\n      <div className=\"MainDiv\">\n        <div className=\"\">\n          <ToastContainer></ToastContainer>\n          <Row>\n            <BreadCrumbs heading={userGroupDetails && userGroupDetails.title} />\n            <UserGroupButtons\n              id={id}\n              applyChanges={applyChanges}\n              backToList={backToList}\n              deleteUserGroupData={deleteUserGroupData}\n              editUserGroupData={editUserGroupData}\n              editRoomUserGroup={getAllValues}\n              navigate={navigate}\n            />\n            <Form>\n              <FormGroup>\n                <ComponentCard title=\"UserGroup Details\">\n                  <Row>\n                    <Col md=\"6\">\n                      <FormGroup>\n                        <Label>Title</Label>\n                        <Input\n                          type=\"text\"\n                          value={userGroupDetails && userGroupDetails.section_title}\n                          onChange={handleInputs}\n                          name=\"title\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"6\">\n                      <FormGroup>\n                        <Label>UserGroup Type</Label>\n                        <Input\n                          type=\"select\"\n                          value={userGroupDetails && userGroupDetails.user_group_type}\n                          onChange={handleInputs}\n                          name=\"user_group_type\"\n                        >\n                          <option value=\"Super Administrator\" defaultValue=\"selected\">\n                            Super Administrator\n                          </option>\n                          <option value=\"Administrator\">Administrator</option>\n                          <option value=\"User\">User</option>\n                        </Input>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </ComponentCard>\n              </FormGroup>\n            </Form>\n          </Row>\n\n          <ComponentCard title=\"Actions\">\n            <Table id=\"example\" className=\"display border border-secondary rounded\">\n              <thead>\n                <tr>\n                  {accessColumns.map((cell) => {\n                    return <td key={cell.name}>{cell.name}</td>;\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"w-100 bg-primary text-white\">\n                  <td>Modules</td>\n                </tr>\n              </tbody>\n              <tbody>\n                {roomUser &&\n                  roomUser.map((element) => {\n                    return (\n                      <tr key={element.section_id}>\n                        <td>\n                          <Input\n                            type=\"text\"\n                            name=\"section_title\"\n                            value={element.section_title}\n                            disabled\n                          />\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"list\"\n                              // checked={isChecked}\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.list}\n                            />\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"detail\"\n                              // checked={isChecked}\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.detail}\n                            />\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"new\"\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.new}\n                            />\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"edit\"\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.edit}\n                            />\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"remove\"\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.remove}\n                            />\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"publish\"\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.publish}\n                            />\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"unpublish\"\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.unpublish}\n                            />\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"print\"\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.print}\n                            />\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"import\"\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.import}\n                            />\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <FormGroup check>\n                            <Input\n                              type=\"checkbox\"\n                              value=\"1\"\n                              name=\"export\"\n                              onChange={(e) => {\n                                handleOnChange(e, element);\n                              }}\n                              defaultChecked={element.export}\n                            />\n                          </FormGroup>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n              <tbody>\n                <tr className=\"bg-primary text-white w-100\">\n                  <td>Reports / Widgets</td>\n                </tr>\n              </tbody>\n            </Table>\n          </ComponentCard>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserGroupEdit;\n","import { Card, CardBody } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst pStyle = {\n  textAlign: 'right',\n  marginRight: '10px',\n};\nconst oStyle={\noutline:'none',\nborder:'none'\n};\n\nconst ComponentCardV2 = ({ children }) => {\n  return (\n    <Card className='shadow-none'>\n      <CardBody style={pStyle} >\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCardV2.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ComponentCardV2;\n","import moment from \"moment\"\n\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\nexport default creationdatetime \n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport Swal from 'sweetalert2';\nimport PropTypes from 'prop-types';\nimport * as Icon from 'react-feather';\nimport api from '../constants/api';\nimport message from './Message';\n\nconst DeleteButton = ({\n  id,\n  columnname,\n  tablename,\n  ifpiture = false,\n  ifAttachment = false,\n  pictureroom,\n  attachmentroom,\n}) => {\n  const navigate = useNavigate();\n  DeleteButton.propTypes = {\n    id: PropTypes.string,\n    columnname: PropTypes.string,\n    tablename: PropTypes.string,\n    ifpiture: PropTypes.bool,\n    ifAttachment: PropTypes.bool,\n    pictureroom: PropTypes.string,\n    attachmentroom: PropTypes.string,\n    //onSuccess:PropTypes.any\n  };\n  const deletePicture = (formalId, roomName) => {\n    api\n      .post('/file/deleteFileByRoomNameAndId', {\n        room_name: roomName,\n        record_id: formalId,\n      })\n      .then((res) => {\n        if (res.status === 200) {\n         \n            message('Media and Records files deleted.', 'error');\n            navigate(-1);\n          \n        } else {\n          message('Unable to delete record.', 'error');\n        }\n      })\n      .catch(() => {\n        message('Network connection error.');\n      });\n  };\n  const deleteApi = () => {\n    api\n      .post('/commonApi/deleteRecord', {\n        idvalue: id,\n        columnname,\n        tablename,\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          if (ifpiture) {\n            deletePicture(id, pictureroom);\n          } else {\n            /* eslint-disable */\n            if (ifAttachment) {\n              deletePicture(id, attachmentroom);\n            } else {\n              message('Record deleted successfully.');\n              navigate(-1);\n            }\n          }\n        } else {\n          message('Unable to delete record.', 'error');\n        }\n      })\n      .catch(() => {\n        message('Network connection error.');\n      });\n  };\n\n  const deleteRecord = () => {\n    Swal.fire({\n      title: `Are you sure?`,\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        deleteApi();\n      }\n    });\n  };\n\n  return (\n    <Button\n      color=\"danger\"\n      onClick={() => {\n        deleteRecord();\n      }}\n    >\n      Delete <Icon.Trash2 size={20} />\n    </Button>\n  );\n};\n\nexport default DeleteButton;\n"],"sourceRoot":""}