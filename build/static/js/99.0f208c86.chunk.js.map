{"version":3,"sources":["components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js","components/LoanTable/PreviousEarlierLoan.js","components/LoanTable/LoanMoreDetails.js","components/LoanTable/LoanDetailComp.js","components/LoanTable/LoanButton.js","views/EditData/LoanEdit.js","components/ComponentCardV2.js","components/ProjectModal/ViewFileComponentV2.js","components/Tender/AttachmentModalV2.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","title","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate","PreviousEarlierLoan","loan","id","name","map","cell","element","index","status","date","moment","format","loan_start_date","amount","month_amount","loan_closing_date","loan_id","LoanMoreDetails","activeTab","toggle","dataForAttachment","setAttachmentModal","attachmentModal","columns1","paymentdetails","attachmentData","addpaymentToggle","handlePaymentInputs","insertPayment","newpaymentData","addpaymentModal","useState","RoomName","setRoomName","fileTypes","setFileTypes","tabs","onClick","tabId","xs","md","color","width","AttachmentModalV2","moduleId","roomName","altTagData","desc","recordType","mediaType","modelType","ViewFileComponentV2","payment_date","loan_repayment_amount_per_month","remarks","loan__repayment_history_id","bind","size","isOpen","onChange","value","generated_date","LoanDetailComp","loanDetails","loanStatus","handleInputs","employee_name","defaultValue","disabled","amount_payable","notes","LoanButtons","editLoanData","editLoanStartData","editLoanClosingData","applyChanges","saveChanges","backToList","ComponentCardV2","console","log","LoanEdit","setLoan","setActiveTab","setLoanDetails","setPaymentDetails","setAddPaymentModal","setLoanStatus","setDataForAttachment","useParams","navigate","useNavigate","getPreviousEarlierLoan","empId","api","post","employee_id","then","res","data","catch","getLoanById","getPaymentById","setNewPaymentData","useEffect","deleteLoanData","e","target","tab","newLoanId","pStyle","textAlign","marginRight","oStyle","outline","border","style","updateFile","tableStyle","getFile","setGetFile","getFiles","record_id","room_name","href","rel","fileId","media_id","prevFiles","filter","file","setUpdateFile","setFile","handleValue","setHandleValue","uploaded","setUploaded","multiple","handleChange","fiels","arrayOfObj","Object","entries","types","role","keys","length","FormData","forEach","ele","append","onUploadProgress","filedata","Math","round","loaded","total","setTimeout","uploadFile"],"mappings":"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","file":"static/js/99.0f208c86.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst message = (msg,type) => {\n    if(type === 'success'){\n       return toast.success(msg, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"colored\",\n            });\n    } if(type === 'error'){\n        return toast.error(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n     } if(type === 'info'){\n        return toast.info(msg, {\n             position: \"top-right\",\n             autoClose: 5000,\n             hideProgressBar: false,\n             closeOnClick: true,\n             pauseOnHover: true,\n             draggable: true,\n             progress: undefined,\n             theme: \"colored\",\n             });\n            }if(type === 'warning'){\n               return toast.warning(msg, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"colored\",\n                    });\n                   }\n            return toast(msg);\n   \n  \n}\nexport default message\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { useLocation, Link } from 'react-router-dom';\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\n\nconst BreadCrumbs = (prop) => {\n  const location = useLocation();\n  const firstUrl = location.pathname.split('/')[1];\n  const secondUrl = location.pathname.split('/')[2];\n  \n  return (\n    <>\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\n      <h4>{prop.heading}</h4>\n      <Breadcrumb>\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\n          Home\n        </BreadcrumbItem>\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadCrumbs;\n","import React from 'react';\nimport { CardTitle, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nexport default function CreationModification({ details = null, title }) {\n  CreationModification.propTypes = {\n    details: PropTypes.object,\n    title: PropTypes.string,\n  };\n  return (\n    <>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        <Row>\n          <Col>{title}</Col>\n          {details && (\n            <Col>\n              <Row>\n                <small>Modification Date: {details && details.modification_date}</small>\n              </Row>\n              <Row className=\"d-flex\">\n                <small>Creation Date: {details && details.creation_date}</small>\n              </Row>\n            </Col>\n          )}\n        </Row>\n      </CardTitle>\n    </>\n  );\n}\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CreationModification from './CreationModification';\n\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\n  return (\n    <Card className='shadow-none'>\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\n     \n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node,\n  creationModificationDate:PropTypes.any\n};\n\nexport default ComponentCard;\n","import React from 'react';\nimport { Form, FormGroup, Table } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport ComponentCard from '../ComponentCard';\n\nexport default function PreviousEarlierLoan({ loan }) {\n  PreviousEarlierLoan.propTypes = {\n    loan: PropTypes.any,\n  };\n  const columns = [\n    {\n      name: '#',\n    },\n    {\n      name: 'Type of Loan',\n    },\n    {\n      name: 'Status',\n    },\n    {\n      name: 'Date',\n    },\n    {\n      name: 'Loan Start Date',\n    },\n    {\n      name: 'Total Loan Amount',\n    },\n    {\n      name: 'AmountPayable(permonth)',\n    },\n    {\n      name: 'Loan Closing Date',\n    },\n  ];\n  return (\n    <Form>\n      <FormGroup>\n        <ComponentCard title=\"PreviousLoan/EarlierLoan\">\n          <div className=\"MainDiv\">\n            <div className=\"container\">\n              <Table id=\"example\" className=\"display border border-secondary rounded\">\n                <thead>\n                  <tr>\n                    {columns.map((cell) => {\n                      return <td key={cell.name}>{cell.name}</td>;\n                    })}\n                  </tr>\n                </thead>\n                <tbody>\n                  {loan &&\n                    loan.map((element, index) => {\n                      return (\n                        <tr key={element.loan_id}>\n                          <td>{index + 1}</td>\n                          <td>{element.type}</td>\n                          <td>{element.status}</td>\n                          <td>{element.date ? moment(element.date).format('YYYY-MM-DD') : ''}</td>\n                          <td>\n                            {element.loan_start_date\n                              ? moment(element.loan_start_date).format('YYYY-MM-DD')\n                              : ''}\n                          </td>\n                          <td>{element.amount}</td>\n                          <td>{element.month_amount}</td>\n                          <td>{element.loan_closing_date\n                              ? moment(element.loan_closing_date).format('YYYY-MM-DD')\n                              : ''}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </ComponentCard>\n      </FormGroup>\n    </Form>\n  );\n}\n","import React,{useState} from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Form,\n  Table,\n  FormGroup,\n  Label,\n  Input,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Card,\n  CardBody,\n} from 'reactstrap';\nimport moment from 'moment';\nimport * as Icon from 'react-feather';\nimport ComponentCard from '../ComponentCard';\nimport PreviousEarlierLoan from './PreviousEarlierLoan';\nimport AttachmentModalV2 from '../Tender/AttachmentModalV2';\nimport ViewFileComponentV2 from '../ProjectModal/ViewFileComponentV2';\n\nexport default function LoanMoreDetails({\n  activeTab,\n  toggle,\n  dataForAttachment,\n  setAttachmentModal,\n  attachmentModal,\n  id,\n  columns1,\n  paymentdetails,\n  attachmentData,\n  addpaymentToggle,\n  handlePaymentInputs,\n  insertPayment,\n  newpaymentData,\n  addpaymentModal,\n  loan,\n}) {\n  LoanMoreDetails.propTypes = {\n    activeTab: PropTypes.string,\n    toggle: PropTypes.func,\n    dataForAttachment: PropTypes.func,\n    setAttachmentModal: PropTypes.func,\n    attachmentModal: PropTypes.bool,\n    id: PropTypes.any,\n    columns1: PropTypes.array,\n    paymentdetails: PropTypes.array,\n    attachmentData: PropTypes.any,\n    addpaymentToggle: PropTypes.func,\n    handlePaymentInputs: PropTypes.func,\n    insertPayment: PropTypes.func,\n    newpaymentData: PropTypes.any,\n    addpaymentModal: PropTypes.bool,\n    loan: PropTypes.any,\n  };\n\n  const [RoomName, setRoomName] = useState('')\n  const [fileTypes, setFileTypes] = useState('')\n  return (\n    <ComponentCard title=\"More Details\">\n      <ToastContainer></ToastContainer>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={activeTab === '1' ? 'active' : ''}\n            onClick={() => {\n              toggle('1');\n            }}\n          >\n            Attachment\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={activeTab === '2' ? 'active' : ''}\n            onClick={() => {\n              toggle('2');\n            }}\n          >\n            Payment History\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={activeTab === '3' ? 'active' : ''}\n            onClick={() => {\n              toggle('3');\n            }}\n          >\n            Previous/EarlierLoan\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent className=\"p-4\" activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n        <ComponentCard title=\"Attachments\">\n            <Row>\n              <Col xs=\"12\" md=\"3\" className=\"mb-3\">\n                <Button\n                  className=\"shadow-none\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setRoomName('Booking')\n                    setFileTypes([\"JPG\", \"PNG\", \"GIF\",\"PDF\"]);\n                    dataForAttachment();\n                    setAttachmentModal(true);\n                  }}><Icon.File className=\"rounded-circle\" width=\"20\" /></Button>\n              </Col>\n            </Row>\n            <AttachmentModalV2\n              moduleId={id}\n              attachmentModal={attachmentModal}\n              setAttachmentModal={setAttachmentModal}\n              roomName={RoomName}\n              fileTypes={fileTypes}\n              altTagData=\"BookingRelated Data\"\n              desc=\"BookingRelated Data\"\n              recordType=\"RelatedPicture\"\n              mediaType={attachmentData.modelType}\n            />\n            <ViewFileComponentV2 moduleId={id} roomName=\"Booking\" recordType=\"RelatedPicture\" />\n        \n          </ComponentCard>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <ComponentCard title=\"Payment History\">\n            <Row>\n              <div className=\"container\">\n                <Table id=\"example\" className=\"display border border-secondary rounded\">\n                  <thead>\n                    <tr>\n                      {columns1.map((cell) => {\n                        return <td key={cell.name}>{cell.name}</td>;\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {paymentdetails &&\n                      paymentdetails.map((element,index) => {\n                        return (\n                          <tr key={element.loan__repayment_history_id}>\n                            <td>{index + 1}</td>\n                            <td>{element.payment_date ? element.payment_date : ''}</td>\n                            <td>{element.loan_repayment_amount_per_month}</td>\n                            <td>{element.remarks}</td>\n                          </tr>\n                        );\n                      })}\n                  </tbody>\n                </Table>\n              </div>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <Button\n                  className=\"shadow-none\"\n                  color=\"primary\"\n                  to=\"\"\n                  onClick={addpaymentToggle.bind(null)}\n                >\n                  Payment History\n                </Button>\n              </Col>\n            </Row>\n            <Modal size=\"l\" isOpen={addpaymentModal} toggle={addpaymentToggle.bind(null)}>\n              <ModalHeader toggle={addpaymentToggle.bind(null)}>Payment Details</ModalHeader>\n              <ModalBody>\n                <Row>\n                  <Col md=\"12\">\n                    <Card>\n                      <CardBody>\n                        <Form>\n                          <Row>\n                            <FormGroup>\n                              <Label>Date</Label>\n                              <Input\n                                type=\"date\"\n                                name=\"generated_date\"\n                                onChange={handlePaymentInputs}\n                                value={\n                                  newpaymentData &&\n                                  moment(newpaymentData.generated_date).format('YYYY-MM-DD')\n                                }\n                              />\n                            </FormGroup>\n                            <FormGroup>\n                              <Label>Amount</Label>\n                              <Input\n                                type=\"number\"\n                                name=\"loan_repayment_amount_per_month\"\n                                onChange={handlePaymentInputs}\n                                value={\n                                  newpaymentData && newpaymentData.loan_repayment_amount_per_month\n                                }\n                              />\n                            </FormGroup>\n                            <FormGroup>\n                              <Label>Remarks</Label>\n                              <Input\n                                type=\"textarea\"\n                                name=\"remarks\"\n                                onChange={handlePaymentInputs}\n                                value={newpaymentData && newpaymentData.remarks}\n                              />\n                            </FormGroup>\n                          </Row>\n                        </Form>\n                      </CardBody>\n                    </Card>\n                  </Col>\n                </Row>\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  className=\"shadow-none\"\n                  color=\"primary\"\n                  onClick={() => {\n                    insertPayment();\n                  }}\n                >\n                  Save & Continue\n                </Button>\n                <Button\n                  className=\"shadow-none\"\n                  color=\"secondary\"\n                  onClick={addpaymentToggle.bind(null)}\n                >\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </ComponentCard>\n        </TabPane>\n        <TabPane tabId=\"3\">\n          <PreviousEarlierLoan loan={loan}></PreviousEarlierLoan>\n        </TabPane>\n      </TabContent>\n    </ComponentCard>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport ComponentCard from '../ComponentCard';\n\nexport default function LoanDetailComp({ loanDetails, loanStatus, handleInputs }) {\n  LoanDetailComp.propTypes = {\n    loanDetails: PropTypes.object,\n    handleInputs: PropTypes.func,\n    loanStatus: PropTypes.string,\n  };\n\n  return (\n    <Form>\n      <FormGroup>\n        <ComponentCard title=\"Loan Details\">\n          <Row>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Employee Name</Label>\n                <br />\n                <span> {loanDetails && loanDetails.employee_name} </span>\n              </FormGroup>\n            </Col>\n            {(loanStatus === 'Approved' ||\n              loanStatus === 'Hold' ||\n              loanStatus === 'Denied' ||\n              loanStatus === 'Waiting for Approval' ||\n              loanStatus === 'Applied') && (\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Status</Label>\n                  <Input\n                    value={loanDetails && loanDetails.status}\n                    type=\"select\"\n                    onChange={handleInputs}\n                    name=\"status\"\n                  >\n                    <option>Please Select</option>\n                    <option value=\"Approved\">Approved</option>\n                    <option value=\"Active\">Active</option>\n                    <option value=\"Hold\">Hold</option>\n                    <option value=\"Closed\">Closed</option>\n                    <option value=\"Denied\">Denied</option>\n                    <option value=\"Waiting for Approval\">Waiting for Approval</option>\n                    <option defaultValue=\"selected\" value=\"Applied\">\n                      Applied\n                    </option>\n                  </Input>\n                </FormGroup>\n              </Col>\n            )}\n            {(loanStatus === 'Active' || loanStatus === 'Closed') && (\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>Status</Label>\n                  <Input\n                  type=\"select\"\n                  defaultValue={loanDetails && loanDetails.status}\n                  disabled\n                  name=\"status\"\n                  >\n                    <option>Please Select</option>\n                    <option value=\"Approved\">Approved</option>\n                    <option value=\"Active\">Active</option>\n                    <option value=\"Hold\">Hold</option>\n                    <option value=\"Closed\">Closed</option>\n                    <option value=\"Denied\">Denied</option>\n                    <option value=\"Waiting for Approval\">Waiting for Approval</option>\n                    <option defaultValue=\"selected\" value=\"Applied\">\n                      Applied\n                    </option>\n                  </Input>\n                </FormGroup>\n              </Col>\n            )}\n\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>\n                  {' '}\n                  Type of Loan <span className=\"required\"> *</span>\n                </Label>\n                <Input\n                  value={loanDetails && loanDetails.type}\n                  type=\"select\"\n                  onChange={handleInputs}\n                  name=\"type\"\n                >\n                  <option>Please Select</option>\n                  <option value=\"Car Loan\">Car Loan</option>\n                  <option value=\"Personal Loan\">Personal Loan</option>\n                  <option value=\"Home Loan\">Home Loan</option>\n                  <option value=\"other\">Other</option>\n                </Input>\n              </FormGroup>\n            </Col>\n\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Loan Application Date</Label>\n                <Input\n                  value={loanDetails && moment(loanDetails.date).format('YYYY-MM-DD')}\n                  type=\"date\"\n                  onChange={handleInputs}\n                  name=\"date\"\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            {loanStatus !== 'Active' && loanStatus !== 'Closed' && (\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>\n                    Total Loan Amount<span className=\"required\"> *</span>\n                  </Label>\n                  <Input\n                    value={loanDetails && loanDetails.amount}\n                    type=\"number\"\n                    onChange={handleInputs}\n                    name=\"amount\"\n                  />\n                </FormGroup>\n              </Col>\n            )}\n            {(loanStatus === 'Active' || loanStatus === 'Closed') && (\n              <Col md=\"3\">\n                <FormGroup>\n                  <Label>\n                    Total Loan Amount<span className=\"required\"> *</span>\n                  </Label>\n                  <br />\n                  <span>{loanDetails && loanDetails.amount}</span>\n                </FormGroup>\n              </Col>\n            )}\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>\n                  Amount payable(permonth)<span className=\"required\"> *</span>\n                </Label>\n                <Input\n                  type=\"text\"\n                  defaultValue={loanDetails && loanDetails.month_amount}\n                  onChange={handleInputs}\n                  name=\"month_amount\"\n                />\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>\n                  Loan Start Date</Label>\n                <br />\n                {loanDetails && loanDetails.loan_start_date && (\n                  <span>\n                    {moment(loanDetails.loan_start_date && loanDetails.loan_start_date).format(\n                      'YYYY-MM-DD',\n                    )}\n                  </span>\n                )}\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Actual loan closing date</Label>\n                <br />\n                {loanDetails && loanDetails.loan_closing_date && (\n                  <span>\n                    {moment(loanDetails.loan_closing_date && loanDetails.loan_closing_date).format(\n                      'YYYY-MM-DD',\n                    )}\n                  </span>\n                )}\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Amount Payable</Label>\n                <br/>\n                <span>{loanDetails && loanDetails.amount_payable}</span>\n              </FormGroup>\n            </Col>\n            <Col md=\"3\">\n              <FormGroup>\n                <Label>Notes</Label>\n                <Input\n                  defaultValue={loanDetails && loanDetails.notes}\n                  type=\"textarea\"\n                  onChange={handleInputs}\n                  name=\"notes\"\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n        </ComponentCard>\n      </FormGroup>\n    </Form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\nimport ComponentCardV2 from '../ComponentCardV2';\n// import DeleteButton from '../DeleteButton';\n\nexport default function LoanButtons({\n  editLoanData,\n  editLoanStartData,\n  editLoanClosingData,\n  // navigate,\n  applyChanges,\n  saveChanges,\n  // id,\n  backToList,\n}) {\n  LoanButtons.propTypes = {\n    editLoanData: PropTypes.func,\n    editLoanStartData: PropTypes.func,\n    editLoanClosingData:PropTypes.func,\n    // navigate: PropTypes.func,\n    applyChanges: PropTypes.func,\n    saveChanges: PropTypes.func,\n    // id: PropTypes.string,\n    backToList: PropTypes.func,\n  };\n  return (\n    <Form>\n      <FormGroup>\n        <ComponentCardV2>\n          <Row>\n            <Col>\n              <Button\n                color=\"primary\"\n                className=\"shadow-none\"\n                onClick={() => {\n                  editLoanData();\n                  editLoanStartData();\n                  editLoanClosingData();\n                  saveChanges();                \n                }}\n              >\n                Save\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                color=\"primary\"\n                className=\"shadow-none\"\n                onClick={() => {\n                  editLoanData();\n                  editLoanStartData();\n                  editLoanClosingData();\n                  applyChanges();\n\n                  console.log('cancel process');\n                }}\n              >\n                Apply\n              </Button>\n            </Col>\n           \n            <Col>\n              <Button\n                color=\"dark\"\n                className=\"shadow-none\"\n                onClick={() => {\n                  backToList();\n                  console.log('back to list');\n                }}\n              >\n                Back to List\n              </Button>\n            </Col>\n          </Row>\n        </ComponentCardV2>\n      </FormGroup>\n    </Form>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport '../form-editor/editor.scss';\nimport { ToastContainer } from 'react-toastify';\nimport moment from 'moment';\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\nimport message from '../../components/Message';\nimport api from '../../constants/api';\nimport LoanMoreDetails from '../../components/LoanTable/LoanMoreDetails';\nimport LoanDetailComp from '../../components/LoanTable/LoanDetailComp';\nimport LoanButtons from '../../components/LoanTable/LoanButton';\n\nconst LoanEdit = () => {\n  //All state variables\n  const [loan, setLoan] = useState(null);\n  const [activeTab, setActiveTab] = useState('1');\n  const [loanDetails, setLoanDetails] = useState();\n  const [attachmentModal, setAttachmentModal] = useState(false);\n  const [paymentdetails, setPaymentDetails] = useState();\n  const [addpaymentModal, setAddPaymentModal] = useState(false);\n  const [loanStatus, setLoanStatus] = useState();\n\n  //  AttachmentModal\n  const [attachmentData, setDataForAttachment] = useState({\n    modelType: '',\n  });\n\n  //Navigation and Parameter Constants\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  // TOGGLE Tab\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  const addpaymentToggle = () => {\n    setAddPaymentModal(!addpaymentModal);\n  };\n\n  // Button Save Apply Back List\n  const applyChanges = () => {};\n  const saveChanges = () => {\n    if (\n      loanDetails.type &&\n      loanDetails.type !== '' &&\n      loanDetails.amount !== '' &&\n      loanDetails.month_amount !== ''\n    ) {\n      navigate('/Loan');\n    }\n  };\n  const backToList = () => {\n    navigate('/Loan');\n  };\n\n  //All functions/Methods\n\n  //Method for getting data by LoanId and Employee Id\n  const getPreviousEarlierLoan = (empId) => {\n    api\n      .post('/loan/TabPreviousEarlierLoanById', { employee_id: empId })\n      .then((res) => {\n        setLoan(res.data.data);\n      })\n      .catch(() => {\n        message('Loan not found', 'info');\n      });\n  };\n\n  // Get Loan By Id\n  const getLoanById = () => {\n    api\n      .post('/loan/getLoanById', { loan_id: id })\n      .then((res) => {\n        setLoanDetails(res.data.data[0]);\n        setLoanStatus(res.data.data[0].status);\n        getPreviousEarlierLoan(res.data.data[0].employee_id);\n      })\n      .catch(() => {\n        message('Loan Data Not Found', 'info');\n      });\n  };\n\n  //Setting Data in Loan Details\n  const handleInputs = (e) => {\n    setLoanDetails({ ...loanDetails, [e.target.name]: e.target.value });\n  };\n\n  //Logic for edit data in db\n  const editLoanData = () => {\n    if (\n      loanDetails.type &&\n      loanDetails.type !== '' &&\n      loanDetails.amount !== '' &&\n      loanDetails.month_amount !== ''\n    ) {\n      api\n        .post('/loan/edit-Loan', loanDetails)\n        .then(() => {\n          //navigate('/Loan');\n          message('Record editted successfully', 'success');\n          getLoanById();\n        })\n        .catch(() => {\n          message('Unable to edit record.', 'error');\n        });\n    } else {\n      message('Please fill all required fields', 'warning');\n    }\n  };\n\n  const editLoanStartData = () => {\n    if (loanDetails && loanDetails.status === 'Active') {\n      api\n        .post('/loan/editLoanStartDate', { loan_id: id })\n        .then(() => {})\n        .catch(() => {\n          message('Unable to edit record.', 'error');\n        });\n    }\n  };\n\n  const editLoanClosingData = () => {\n    if (loanDetails && loanDetails.status === 'Closed') {\n      api\n        .post('/loan/editLoanClosingDate', { loan_id: id })\n        .then(() => {})\n        .catch(() => {\n          message('Unable to edit record.', 'error');\n        });\n    }\n  };\n\n  //for deleting the data\n  const deleteLoanData = () => {\n    api\n      .post('/loan/deleteLoan', { loan_id: id })\n      .then(() => {\n        message('Record deteled successfully', 'success');\n      })\n      .catch(() => {\n        message('Unable to delete record.', 'error');\n      });\n  };\n\n  //getting payment data By Loan Id\n  const getPaymentById = () => {\n    api\n      .post('/loan/TabPaymentHistoryById', { loan_id: id })\n      .then((res) => {\n        setPaymentDetails(res.data.data);\n      })\n      .catch(() => {\n        message('Loan Data Not Found', 'info');\n      });\n  };\n\n  //Add payment data\n  const [newpaymentData, setNewPaymentData] = useState({\n    loan_id: '',\n    payment_date: '',\n    loan_repayment_amount_per_month: '',\n    remarks: '',\n  });\n\n  const handlePaymentInputs = (e) => {\n    setNewPaymentData({ ...newpaymentData, [e.target.name]: e.target.value });\n  };\n\n  const insertPayment = () => {\n    newpaymentData.generated_date = moment();\n    const newLoanId = newpaymentData;\n    newLoanId.loan_id = id;\n    api\n      .post('/loan/insertLoanRepaymenthistory', newLoanId)\n      .then(() => {\n        message('payment inserted successfully.', 'success');\n        addpaymentToggle(false);\n        getPaymentById();\n        // window.location.reload();\n      })\n      .catch(() => {\n        message('Network connection error.', 'error');\n      });\n  };\n\n  //attachment for upload file\n  const dataForAttachment = () => {\n    setDataForAttachment({\n      modelType: 'attachment',\n    });\n  };\n\n  useEffect(() => {\n    getLoanById();\n    getPaymentById();\n    getPreviousEarlierLoan();\n  }, [id]);\n\n  const columns1 = [\n    {\n      name: '#',\n    },\n    {\n      name: 'Date',\n    },\n    {\n      name: 'Amount',\n    },\n    {\n      name: 'Remarks',\n    },\n  ];\n\n  return (\n    <>\n      <BreadCrumbs />\n      <ToastContainer />\n\n      {/* Button */}\n      <LoanButtons\n        applyChanges={applyChanges}\n        saveChanges={saveChanges}\n        editLoanData={editLoanData}\n        editLoanStartData={editLoanStartData}\n        editLoanClosingData={editLoanClosingData}\n        navigate={navigate}\n        backToList={backToList}\n        deleteLoanData={deleteLoanData}\n        id={id}\n      ></LoanButtons>\n\n      {/*Main Details*/}\n      <LoanDetailComp\n        handleInputs={handleInputs}\n        loanStatus={loanStatus}\n        loanDetails={loanDetails}\n      ></LoanDetailComp>\n\n      <LoanMoreDetails\n        setAttachmentModal={setAttachmentModal}\n        attachmentModal={attachmentModal}\n        activeTab={activeTab}\n        toggle={toggle}\n        id={id}\n        columns1={columns1}\n        dataForAttachment={dataForAttachment}\n        paymentdetails={paymentdetails}\n        attachmentData={attachmentData}\n        addpaymentToggle={addpaymentToggle}\n        handlePaymentInputs={handlePaymentInputs}\n        insertPayment={insertPayment}\n        newpaymentData={newpaymentData}\n        addpaymentModal={addpaymentModal}\n        loan={loan}\n      ></LoanMoreDetails>\n    </>\n  );\n};\n\nexport default LoanEdit;\n","import { Card, CardBody } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst pStyle = {\n  textAlign: 'right',\n  marginRight: '10px',\n};\nconst oStyle={\noutline:'none',\nborder:'none'\n};\n\nconst ComponentCardV2 = ({ children }) => {\n  return (\n    <Card className='shadow-none'>\n      <CardBody style={pStyle} >\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCardV2.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ComponentCardV2;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Icon from 'react-feather';\nimport message from '../Message';\nimport api from '../../constants/api';\n\nfunction ViewFileComponentV2({ moduleId, roomName,updateFile}) {\n  ViewFileComponentV2.propTypes = {\n    moduleId: PropTypes.string,\n    roomName: PropTypes.string,\n    updateFile:PropTypes.bool,\n  };\n\n  const tableStyle = {};\n\n  const [getFile, setGetFile] = useState(null);\n\n  const getFiles = () => {\n    api\n      .post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName })\n      .then((res) => {\n        setGetFile(res.data);\n      })\n      .catch(() => {\n        message('Unable to fetch files', 'info');\n      });\n  };\n\n  const deleteFile = (fileId) => {\n     \n        api\n          .post('/file/deleteFile', { media_id: fileId })\n          .then(() => {\n            setGetFile((prevFiles) => prevFiles.filter((file) => file.media_id !== fileId));\n          })\n          .catch(() => {\n            message('Unable to Delete Media', 'info');\n          });\n      }\n      useEffect(() => {\n        getFiles();\n      }, [updateFile]); \n\n  useEffect(() => {\n    getFiles();\n  }, []);\n\n  return (\n    <>\n      <table style={tableStyle}>\n        <thead>\n          <tr style={tableStyle}>\n            <th style={tableStyle}></th>\n            <th width=\"5%\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {getFile ? (\n            getFile.map((res) => {\n              return (\n                <tr key={res.media_id}>\n                  <td style={tableStyle}>\n                    <a href={`http://43.228.126.245/pms-shimi/storage/uploads/${res.name}`} target=\"_blank\" rel=\"noreferrer\">\n                      {res.name}\n                    </a>\n                    {/* {setTimeout(getFiles, 100)} */}\n                  </td>\n                  <td style={tableStyle}>\n                    <button\n                      type=\"button\"\n                      className=\"btn shadow-none\"\n                      onClick={() => {\n                        deleteFile(res.media_id);\n                      }}\n                    >\n                      <Icon.Trash2 />{' '}\n                    </button>\n                  </td>\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td>\n                <p>no files uploaded yet</p>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default ViewFileComponentV2;\n","import React, { useState  } from 'react';\nimport { FormGroup, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { FileUploader } from 'react-drag-drop-files';\nimport api from '../../constants/api';\nimport message from '../Message';\nimport ViewFileComponentV2 from '../ProjectModal/ViewFileComponentV2';\n\nconst AttachmentModalV2 = ({\n  attachmentModal,\n  setAttachmentModal,\n  moduleId,\n  roomName,\n  fileTypes,\n  altTagData,\n  desc,\n  updateFile,\n    setUpdateFile\n}) => {\n  AttachmentModalV2.propTypes = {\n    attachmentModal: PropTypes.bool,\n    setAttachmentModal: PropTypes.func,\n    moduleId: PropTypes.string,\n    roomName: PropTypes.string,\n    altTagData: PropTypes.string,\n    desc: PropTypes.string,\n    fileTypes: PropTypes.any,\n    updateFile:PropTypes.bool,\n    setUpdateFile:PropTypes.func\n  };\n\n  const [file, setFile] = useState([]);\n  const [handleValue, setHandleValue] = useState();\n  const [uploaded, setUploaded] = useState(null);\n\n  const [getFile, setGetFile] = useState(null);\n\n  const getFiles = () => {\n    api\n      .post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName })\n      .then((res) => {\n        setGetFile(res.data);\n        // setTimeout(getFiles, 100);\n      })\n      .catch(() => {\n        message('Unable to fetch files', 'info');\n      });\n  };\n\n  const handleChange = (fiels) => {\n    const arrayOfObj = Object.entries(fiels).map((e) => e[1]);\n\n    setFile(fiels);\n    setHandleValue(arrayOfObj);\n    console.log(fiels);\n  };\n\n  const uploadFile = () => {\n    if (file && Object.keys(file).length !== 0) {\n      const data = new FormData();\n      const arrayOfObj = Object.entries(file).map((e) => e[1]);\n      arrayOfObj.forEach((ele) => {\n        data.append(`files`, ele);\n      });\n      data.append('record_id', moduleId);\n      data.append('room_name', roomName);\n      data.append('alt_tag_data', altTagData);\n      data.append('description', desc);\n\n      api\n        .post('/file/uploadFiles', data, {\n          onUploadProgress: (filedata) => {\n            console.log(Math.round((filedata.loaded / filedata.total) * 100));\n            setUploaded(Math.round((filedata.loaded / filedata.total) * 100));\n          },\n        })\n        .then(() => {\n          message('Files Uploaded Successfully', 'success');\n          setUpdateFile(!updateFile);\n          setTimeout(() => {\n            setAttachmentModal(false);\n            getFiles()\n          }, 100);\n          \n        })\n        .catch(() => {\n          message('Unable to upload File', 'error');\n        });\n    } else {\n      message('No files selected', 'info');\n    }\n  };\n\n\n  \n  return (\n    <div>\n      <Modal isOpen={attachmentModal}>\n        <ModalHeader>Upload Media</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n          \n            <FileUploader multiple handleChange={handleChange} name=\"file\" types={fileTypes} />\n            {handleValue ? (\n              handleValue.map((e) => (\n                <div>\n                  <span> Name: {e.name} </span>\n                </div>\n              ))\n            ) : (\n              <span>No file selected</span>\n            )}\n          </FormGroup>\n          {uploaded && (\n            <div className=\"progress mt-2\">\n              <div\n                className=\"progress-bar h-4\"\n                role=\"progressbar\"\n                aria-valuenow={uploaded}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ width: `${uploaded}%` }}\n              >\n                {`${uploaded}% uploaded`}\n              </div>\n            </div>\n          )}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            className=\"shadow-none\"\n            onClick={() => {\n              uploadFile();\n            }}\n          >\n            Upload\n          </Button>\n          <Button\n            color=\"secondary\"\n            className=\"shadow-none\"\n            onClick={() => {\n              setAttachmentModal(false);\n            }}\n          >\n            Cancel\n          </Button>\n        \n        </ModalFooter>\n      </Modal>\n      <ViewFileComponentV2\n      getFile={getFile} \n      getFiles={getFiles} />\n    </div>\n  );\n};\n\nexport default AttachmentModalV2;\n"],"sourceRoot":""}